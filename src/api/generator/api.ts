/* tslint:disable */
/* eslint-disable */
/**
 * 广告项目
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// import globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from './common';
// @ts-ignore
import { request, type RequestOptions } from '../../utils/http'

/**
 * AdClientAgentRequest
 * @export
 * @interface AdClientAgentRequest
 */
export interface AdClientAgentRequest {
    /**
     * 代理商广告权限（1有权限；0没权限）
     * @type {number}
     * @memberof AdClientAgentRequest
     */
    'adPermission'?: number;
    /**
     * 代理商账号
     * @type {string}
     * @memberof AdClientAgentRequest
     */
    'agentAccount'?: string;
    /**
     * 代理商id
     * @type {number}
     * @memberof AdClientAgentRequest
     */
    'agentId'?: number;
    /**
     * 代理商OEM
     * @type {string}
     * @memberof AdClientAgentRequest
     */
    'agentOem'?: string;
    /**
     * 代理商公司名称
     * @type {string}
     * @memberof AdClientAgentRequest
     */
    'companyName'?: string;
    /**
     * 商户id
     * @type {number}
     * @memberof AdClientAgentRequest
     */
    'merchantId'?: number;
    /**
     * 是否是直营代理商 1是 0否
     * @type {number}
     * @memberof AdClientAgentRequest
     */
    'ownRun'?: number;
    /**
     * 门店id
     * @type {number}
     * @memberof AdClientAgentRequest
     */
    'storeId'?: number;
    /**
     * 子商户号
     * @type {string}
     * @memberof AdClientAgentRequest
     */
    'subMchid'?: string;
}
/**
 * AdClientAreaRequest
 * @export
 * @interface AdClientAreaRequest
 */
export interface AdClientAreaRequest {
    /**
     * 市code -1表示所有
     * @type {string}
     * @memberof AdClientAreaRequest
     */
    'cityCode'?: string;
    /**
     * 省code -1表示所有
     * @type {string}
     * @memberof AdClientAreaRequest
     */
    'provinceCode'?: string;
    /**
     * 区code -1表示所有
     * @type {string}
     * @memberof AdClientAreaRequest
     */
    'regionCode'?: string;
}
/**
 * AdClientAreaResponse
 * @export
 * @interface AdClientAreaResponse
 */
export interface AdClientAreaResponse {
    /**
     * 市code
     * @type {string}
     * @memberof AdClientAreaResponse
     */
    'cityCode'?: string;
    /**
     * 顾客IP
     * @type {string}
     * @memberof AdClientAreaResponse
     */
    'ipAddress'?: string;
    /**
     * 省code
     * @type {string}
     * @memberof AdClientAreaResponse
     */
    'provinceCode'?: string;
    /**
     * 区code
     * @type {string}
     * @memberof AdClientAreaResponse
     */
    'regionCode'?: string;
}
/**
 * AdClientCreativeResponse
 * @export
 * @interface AdClientCreativeResponse
 */
export interface AdClientCreativeResponse {
    /**
     * 配置的回调url
     * @type {string}
     * @memberof AdClientCreativeResponse
     */
    'adExposureCallBackUrl'?: string;
    /**
     * 创意id
     * @type {string}
     * @memberof AdClientCreativeResponse
     */
    'creativeId'?: string;
    /**
     * 广告创意名称
     * @type {string}
     * @memberof AdClientCreativeResponse
     */
    'creativeName'?: string;
    /**
     * 是否展示是否结果页 1底层 2中间 3上层
     * @type {number}
     * @memberof AdClientCreativeResponse
     */
    'location'?: number;
    /**
     * 图片链接
     * @type {string}
     * @memberof AdClientCreativeResponse
     */
    'picture'?: string;
    /**
     * 广告计划id
     * @type {string}
     * @memberof AdClientCreativeResponse
     */
    'planId'?: string;
    /**
     * 排序
     * @type {number}
     * @memberof AdClientCreativeResponse
     */
    'sort'?: number;
    /**
     * 广告类型id
     * @type {string}
     * @memberof AdClientCreativeResponse
     */
    'typeId'?: string;
    /**
     * 广告链接
     * @type {string}
     * @memberof AdClientCreativeResponse
     */
    'url'?: string;
}
/**
 * AdClientDataAreaRequest
 * @export
 * @interface AdClientDataAreaRequest
 */
export interface AdClientDataAreaRequest {
    /**
     * 市code -1表示所有
     * @type {string}
     * @memberof AdClientDataAreaRequest
     */
    'cityCode'?: string;
    /**
     * 顾客IP
     * @type {string}
     * @memberof AdClientDataAreaRequest
     */
    'ipAddress'?: string;
    /**
     * 省code -1表示所有
     * @type {string}
     * @memberof AdClientDataAreaRequest
     */
    'provinceCode'?: string;
    /**
     * 区code -1表示所有
     * @type {string}
     * @memberof AdClientDataAreaRequest
     */
    'regionCode'?: string;
}
/**
 * AdClientDataBaseRequest
 * @export
 * @interface AdClientDataBaseRequest
 */
export interface AdClientDataBaseRequest {
    /**
     * 广告主id
     * @type {string}
     * @memberof AdClientDataBaseRequest
     */
    'advertiserId'?: string;
    /**
     * 此次曝光的广告创意Id列表
     * @type {Array<string>}
     * @memberof AdClientDataBaseRequest
     */
    'creativeIdList'?: Array<string>;
    /**
     * 流量主id
     * @type {string}
     * @memberof AdClientDataBaseRequest
     */
    'flowMasterId'?: string;
    /**
     * 媒体位id
     * @type {string}
     * @memberof AdClientDataBaseRequest
     */
    'mediaId'?: string;
    /**
     * 广告系统唯一标识
     * @type {string}
     * @memberof AdClientDataBaseRequest
     */
    'orderId'?: string;
    /**
     * 外币系统唯一标识：如付呗订单号
     * @type {string}
     * @memberof AdClientDataBaseRequest
     */
    'outOrderId'?: string;
    /**
     * 广告计划ID
     * @type {string}
     * @memberof AdClientDataBaseRequest
     */
    'planId'?: string;
    /**
     * 广告位ID
     * @type {string}
     * @memberof AdClientDataBaseRequest
     */
    'spaceId'?: string;
    /**
     * 广告类型id
     * @type {string}
     * @memberof AdClientDataBaseRequest
     */
    'typeId'?: string;
}
/**
 * AdClientDataIndustryRequest
 * @export
 * @interface AdClientDataIndustryRequest
 */
export interface AdClientDataIndustryRequest {
    /**
     * 一级行业id
     * @type {number}
     * @memberof AdClientDataIndustryRequest
     */
    'primaryId'?: number;
    /**
     * 二级行业id
     * @type {number}
     * @memberof AdClientDataIndustryRequest
     */
    'secondaryId'?: number;
    /**
     * 三级行业id
     * @type {number}
     * @memberof AdClientDataIndustryRequest
     */
    'tertiaryId'?: number;
}
/**
 * AdClientDataMobileRequest
 * @export
 * @interface AdClientDataMobileRequest
 */
export interface AdClientDataMobileRequest {
    /**
     * 手机品牌 华为
     * @type {string}
     * @memberof AdClientDataMobileRequest
     */
    'brand'?: string;
    /**
     * 手机ID HUAWEI
     * @type {string}
     * @memberof AdClientDataMobileRequest
     */
    'mobileId'?: string;
    /**
     * 手机系统 2安卓、3苹果
     * @type {number}
     * @memberof AdClientDataMobileRequest
     */
    'mobileSystem'?: number;
}
/**
 * AdClientDataReportRequest
 * @export
 * @interface AdClientDataReportRequest
 */
export interface AdClientDataReportRequest {
    /**
     * 广告曝光动作：1-曝光 2-点击 3-推送 4-发券 5-核券
     * @type {number}
     * @memberof AdClientDataReportRequest
     */
    'actionType'?: number;
    /**
     * 
     * @type {AdClientDataAreaRequest}
     * @memberof AdClientDataReportRequest
     */
    'areaData'?: AdClientDataAreaRequest;
    /**
     * 
     * @type {AdClientDataBaseRequest}
     * @memberof AdClientDataReportRequest
     */
    'baseData'?: AdClientDataBaseRequest;
    /**
     * mock数据入参广告曝光的日期:yyyyMMdd
     * @type {number}
     * @memberof AdClientDataReportRequest
     */
    'day'?: number;
    /**
     * mock数据入参广告曝光的小时:0-23
     * @type {number}
     * @memberof AdClientDataReportRequest
     */
    'hour'?: number;
    /**
     * 
     * @type {AdClientDataIndustryRequest}
     * @memberof AdClientDataReportRequest
     */
    'industryData'?: AdClientDataIndustryRequest;
    /**
     * 
     * @type {AdClientDataMobileRequest}
     * @memberof AdClientDataReportRequest
     */
    'mobileData'?: AdClientDataMobileRequest;
    /**
     * 顾客ID
     * @type {string}
     * @memberof AdClientDataReportRequest
     */
    'openId'?: string;
    /**
     * mock数据入参顾客浏览器UA信息
     * @type {string}
     * @memberof AdClientDataReportRequest
     */
    'userAgent'?: string;
    /**
     * 前端组件版本号
     * @type {string}
     * @memberof AdClientDataReportRequest
     */
    'version'?: string;
}
/**
 * AdClientIndustryRequest
 * @export
 * @interface AdClientIndustryRequest
 */
export interface AdClientIndustryRequest {
    /**
     * 一级行业id
     * @type {number}
     * @memberof AdClientIndustryRequest
     */
    'primaryId'?: number;
    /**
     * 二级行业id
     * @type {number}
     * @memberof AdClientIndustryRequest
     */
    'secondaryId'?: number;
    /**
     * 三级行业id
     * @type {number}
     * @memberof AdClientIndustryRequest
     */
    'tertiaryId'?: number;
}
/**
 * AdClientMobileRequest
 * @export
 * @interface AdClientMobileRequest
 */
export interface AdClientMobileRequest {
    /**
     * 手机品牌
     * @type {string}
     * @memberof AdClientMobileRequest
     */
    'brand'?: string;
    /**
     * 手机系统 2安卓 3ios
     * @type {number}
     * @memberof AdClientMobileRequest
     */
    'mobileSystem'?: number;
}
/**
 * AdClientPlanRequest
 * @export
 * @interface AdClientPlanRequest
 */
export interface AdClientPlanRequest {
    /**
     * 
     * @type {AdClientAgentRequest}
     * @memberof AdClientPlanRequest
     */
    'agent'?: AdClientAgentRequest;
    /**
     * 
     * @type {AdClientAreaRequest}
     * @memberof AdClientPlanRequest
     */
    'area'?: AdClientAreaRequest;
    /**
     * 
     * @type {AdClientIndustryRequest}
     * @memberof AdClientPlanRequest
     */
    'industry'?: AdClientIndustryRequest;
    /**
     * 媒体位id
     * @type {string}
     * @memberof AdClientPlanRequest
     */
    'mediaId'?: string;
    /**
     * 
     * @type {AdClientMobileRequest}
     * @memberof AdClientPlanRequest
     */
    'mobile'?: AdClientMobileRequest;
    /**
     * 用户openId
     * @type {string}
     * @memberof AdClientPlanRequest
     */
    'openId'?: string;
    /**
     * 广告系统唯一标识
     * @type {string}
     * @memberof AdClientPlanRequest
     */
    'orderId'?: string;
    /**
     * 外部系统唯一标识：付呗订单号
     * @type {string}
     * @memberof AdClientPlanRequest
     */
    'outOrderId'?: string;
    /**
     * 广告位id
     * @type {string}
     * @memberof AdClientPlanRequest
     */
    'spaceId'?: string;
    /**
     * 前端组件版本号
     * @type {string}
     * @memberof AdClientPlanRequest
     */
    'version'?: string;
}
/**
 * AdClientPlanResponse
 * @export
 * @interface AdClientPlanResponse
 */
export interface AdClientPlanResponse {
    /**
     * 地址组id
     * @type {string}
     * @memberof AdClientPlanResponse
     */
    'adAddressGroupId'?: string;
    /**
     * 广告主id
     * @type {string}
     * @memberof AdClientPlanResponse
     */
    'advertiserId'?: string;
    /**
     * 地域类型  1分组 2 省市区
     * @type {number}
     * @memberof AdClientPlanResponse
     */
    'areaType'?: number;
    /**
     * 计费方式 1 CPM,2CPC
     * @type {number}
     * @memberof AdClientPlanResponse
     */
    'billingType'?: number;
    /**
     * 广告计划配置的广告创意数据
     * @type {Array<AdClientCreativeResponse>}
     * @memberof AdClientPlanResponse
     */
    'creativeList'?: Array<AdClientCreativeResponse>;
    /**
     * 去重天数
     * @type {number}
     * @memberof AdClientPlanResponse
     */
    'duplicateRemovalDays'?: number;
    /**
     * 启用状态 1未开启 2开启
     * @type {number}
     * @memberof AdClientPlanResponse
     */
    'enableStatus'?: number;
    /**
     * 是否关联手机品牌 0否 1是
     * @type {number}
     * @memberof AdClientPlanResponse
     */
    'isRelationBrand'?: number;
    /**
     * 广告计划单日预算限制
     * @type {number}
     * @memberof AdClientPlanResponse
     */
    'maxDailyBudget'?: number;
    /**
     * 广告计划剩余单日预算
     * @type {number}
     * @memberof AdClientPlanResponse
     */
    'maxDailyRemainBudget'?: number;
    /**
     * 广告计划单日剩余曝光数
     * @type {number}
     * @memberof AdClientPlanResponse
     */
    'maxDailyRemainStock'?: number;
    /**
     * 手机系统 1全部、2安卓、3苹果
     * @type {number}
     * @memberof AdClientPlanResponse
     */
    'mobileSystem'?: number;
    /**
     * 广告计划id
     * @type {string}
     * @memberof AdClientPlanResponse
     */
    'planId'?: string;
    /**
     * 广告计划名称
     * @type {string}
     * @memberof AdClientPlanResponse
     */
    'planName'?: string;
    /**
     * 单价
     * @type {number}
     * @memberof AdClientPlanResponse
     */
    'planPrice'?: number;
    /**
     * 计划类型 1-单广告，2-组合广告
     * @type {number}
     * @memberof AdClientPlanResponse
     */
    'planType'?: number;
    /**
     * 排序
     * @type {number}
     * @memberof AdClientPlanResponse
     */
    'sort'?: number;
    /**
     * 广告位id
     * @type {string}
     * @memberof AdClientPlanResponse
     */
    'spaceId'?: string;
    /**
     * 0-非测试，1-测试
     * @type {number}
     * @memberof AdClientPlanResponse
     */
    'testFlag'?: number;
    /**
     * 广告计划总预算
     * @type {number}
     * @memberof AdClientPlanResponse
     */
    'totalBudget'?: number;
    /**
     * 广告计划剩余总预算
     * @type {number}
     * @memberof AdClientPlanResponse
     */
    'totalRemainBudget'?: number;
    /**
     * 广告计划总剩余曝光数
     * @type {number}
     * @memberof AdClientPlanResponse
     */
    'totalRemainStock'?: number;
    /**
     * 广告类型id
     * @type {string}
     * @memberof AdClientPlanResponse
     */
    'typeId'?: string;
    /**
     * 用户日曝光次数上限
     * @type {number}
     * @memberof AdClientPlanResponse
     */
    'userMaxDailyExposure'?: number;
}
/**
 * adCreativeAreaRequest
 * @export
 * @interface AdCreativeAreaRequest
 */
export interface AdCreativeAreaRequest {
    /**
     * 市
     * @type {string}
     * @memberof AdCreativeAreaRequest
     */
    'cityCode'?: string;
    /**
     * 省
     * @type {string}
     * @memberof AdCreativeAreaRequest
     */
    'provinceCode'?: string;
    /**
     * 区
     * @type {string}
     * @memberof AdCreativeAreaRequest
     */
    'regionCode'?: string;
}
/**
 * adCreativeAreaResponse
 * @export
 * @interface AdCreativeAreaResponse
 */
export interface AdCreativeAreaResponse {
    /**
     * 市Code
     * @type {string}
     * @memberof AdCreativeAreaResponse
     */
    'cityCode'?: string;
    /**
     * 市名字
     * @type {string}
     * @memberof AdCreativeAreaResponse
     */
    'cityName'?: string;
    /**
     * 省Code
     * @type {string}
     * @memberof AdCreativeAreaResponse
     */
    'provinceCode'?: string;
    /**
     * 省名字
     * @type {string}
     * @memberof AdCreativeAreaResponse
     */
    'provinceName'?: string;
    /**
     * 区Code
     * @type {string}
     * @memberof AdCreativeAreaResponse
     */
    'regionCode'?: string;
    /**
     * 区名字
     * @type {string}
     * @memberof AdCreativeAreaResponse
     */
    'regionName'?: string;
}
/**
 * adCreativeCheckRequest
 * @export
 * @interface AdCreativeCheckRequest
 */
export interface AdCreativeCheckRequest {
    /**
     * 广告创意id
     * @type {string}
     * @memberof AdCreativeCheckRequest
     */
    'creativeId'?: string;
    /**
     * 广告创意名称
     * @type {string}
     * @memberof AdCreativeCheckRequest
     */
    'creativeName'?: string;
}
/**
 * adCreativeCheckResponse
 * @export
 * @interface AdCreativeCheckResponse
 */
export interface AdCreativeCheckResponse {
    /**
     * 校验结果 1通过  2不通过
     * @type {number}
     * @memberof AdCreativeCheckResponse
     */
    'status'?: number;
}
/**
 * adCreativeDataRequest
 * @export
 * @interface AdCreativeDataRequest
 */
export interface AdCreativeDataRequest {
    /**
     * 广告主id
     * @type {string}
     * @memberof AdCreativeDataRequest
     */
    'advertiserId'?: string;
    /**
     * 广告创意名称
     * @type {string}
     * @memberof AdCreativeDataRequest
     */
    'creativeName'?: string;
    /**
     * 结束时间
     * @type {string}
     * @memberof AdCreativeDataRequest
     */
    'endDate'?: string;
    /**
     * 是否今日实时数据 
     * @type {number}
     * @memberof AdCreativeDataRequest
     */
    'isTodayRealTime'?: number;
    /**
     * 排序规则
     * @type {number}
     * @memberof AdCreativeDataRequest
     */
    'sortRule'?: number;
    /**
     * 开始时间
     * @type {string}
     * @memberof AdCreativeDataRequest
     */
    'startDate'?: string;
    /**
     * 创建环境testFlag（0-非测试，1-测试）
     * @type {number}
     * @memberof AdCreativeDataRequest
     */
    'testFlag'?: number;
    /**
     * 广告类型id
     * @type {string}
     * @memberof AdCreativeDataRequest
     */
    'typeId'?: string;
}
/**
 * adCreativeDataResponse
 * @export
 * @interface AdCreativeDataResponse
 */
export interface AdCreativeDataResponse {
    /**
     * 广告主名称
     * @type {string}
     * @memberof AdCreativeDataResponse
     */
    'advertiserName'?: string;
    /**
     * 计费方式 1 CPM,2CPC
     * @type {number}
     * @memberof AdCreativeDataResponse
     */
    'billingType'?: number;
    /**
     * 点击次数
     * @type {number}
     * @memberof AdCreativeDataResponse
     */
    'clickCount'?: number;
    /**
     * 点击率
     * @type {number}
     * @memberof AdCreativeDataResponse
     */
    'clickRate'?: number;
    /**
     * 创意id
     * @type {string}
     * @memberof AdCreativeDataResponse
     */
    'creativeId'?: string;
    /**
     * 创意名称
     * @type {string}
     * @memberof AdCreativeDataResponse
     */
    'creativeName'?: string;
    /**
     * 消耗
     * @type {number}
     * @memberof AdCreativeDataResponse
     */
    'expend'?: number;
    /**
     * 曝光次数(PV)
     * @type {number}
     * @memberof AdCreativeDataResponse
     */
    'exposureCount'?: number;
    /**
     * 媒体位名称（多个以、隔开）
     * @type {string}
     * @memberof AdCreativeDataResponse
     */
    'mediaNames'?: string;
    /**
     * 领券数
     * @type {number}
     * @memberof AdCreativeDataResponse
     */
    'sendCouponCount'?: number;
    /**
     * 0-非测试，1-测试
     * @type {number}
     * @memberof AdCreativeDataResponse
     */
    'testFlag'?: number;
    /**
     * 广告类型名称
     * @type {string}
     * @memberof AdCreativeDataResponse
     */
    'typeName'?: string;
    /**
     * 曝光用户(UV)
     * @type {number}
     * @memberof AdCreativeDataResponse
     */
    'uv'?: number;
}
/**
 * adCreativeDataStatisticsRequest
 * @export
 * @interface AdCreativeDataStatisticsRequest
 */
export interface AdCreativeDataStatisticsRequest {
    /**
     * 创意id
     * @type {string}
     * @memberof AdCreativeDataStatisticsRequest
     */
    'creativeId'?: string;
    /**
     * 结束时间
     * @type {string}
     * @memberof AdCreativeDataStatisticsRequest
     */
    'endDate'?: string;
    /**
     * 开始时间
     * @type {string}
     * @memberof AdCreativeDataStatisticsRequest
     */
    'startDate'?: string;
}
/**
 * adCreativeDataStatisticsRequestResponse
 * @export
 * @interface AdCreativeDataStatisticsRequestResponse
 */
export interface AdCreativeDataStatisticsRequestResponse {
    /**
     * 点击次数
     * @type {number}
     * @memberof AdCreativeDataStatisticsRequestResponse
     */
    'clickCount'?: number;
    /**
     * 点击率
     * @type {number}
     * @memberof AdCreativeDataStatisticsRequestResponse
     */
    'clickRate'?: number;
    /**
     * 消耗
     * @type {number}
     * @memberof AdCreativeDataStatisticsRequestResponse
     */
    'expend'?: number;
    /**
     * 曝光次数(PV)
     * @type {number}
     * @memberof AdCreativeDataStatisticsRequestResponse
     */
    'exposureCount'?: number;
    /**
     * 领券数
     * @type {number}
     * @memberof AdCreativeDataStatisticsRequestResponse
     */
    'sendCouponCount'?: number;
    /**
     * 曝光用户(UV)
     * @type {number}
     * @memberof AdCreativeDataStatisticsRequestResponse
     */
    'uv'?: number;
}
/**
 * adCreativeDetailRequest
 * @export
 * @interface AdCreativeDetailRequest
 */
export interface AdCreativeDetailRequest {
    /**
     * 广告创意ID
     * @type {string}
     * @memberof AdCreativeDetailRequest
     */
    'creativeId'?: string;
}
/**
 * adCreativeDetailResponse
 * @export
 * @interface AdCreativeDetailResponse
 */
export interface AdCreativeDetailResponse {
    /**
     * 广告创意配置回调url
     * @type {string}
     * @memberof AdCreativeDetailResponse
     */
    'adExposureCallBackUrl'?: string;
    /**
     * 地址组id
     * @type {string}
     * @memberof AdCreativeDetailResponse
     */
    'addressGroupId'?: string;
    /**
     * 地址组名字
     * @type {string}
     * @memberof AdCreativeDetailResponse
     */
    'addressGroupName'?: string;
    /**
     * 广告主id
     * @type {string}
     * @memberof AdCreativeDetailResponse
     */
    'advertiserId'?: string;
    /**
     * 广告主名字
     * @type {string}
     * @memberof AdCreativeDetailResponse
     */
    'advertiserName'?: string;
    /**
     * 地址列表
     * @type {Array<AdCreativeAreaResponse>}
     * @memberof AdCreativeDetailResponse
     */
    'areaList'?: Array<AdCreativeAreaResponse>;
    /**
     * 地域类型  1分组 2 省市区
     * @type {number}
     * @memberof AdCreativeDetailResponse
     */
    'areaType'?: number;
    /**
     * 计费方式 1 CPM,2CPC
     * @type {number}
     * @memberof AdCreativeDetailResponse
     */
    'billingType'?: number;
    /**
     * 
     * @type {string}
     * @memberof AdCreativeDetailResponse
     */
    'createTime'?: string;
    /**
     * 广告创意ID
     * @type {string}
     * @memberof AdCreativeDetailResponse
     */
    'creativeId'?: string;
    /**
     * 广告创意名称
     * @type {string}
     * @memberof AdCreativeDetailResponse
     */
    'creativeName'?: string;
    /**
     * 去重天数
     * @type {number}
     * @memberof AdCreativeDetailResponse
     */
    'duplicateRemovalDays'?: number;
    /**
     * 结束时间
     * @type {string}
     * @memberof AdCreativeDetailResponse
     */
    'endDate'?: string;
    /**
     * 行业列表
     * @type {Array<AdCreativeIndustryResponse>}
     * @memberof AdCreativeDetailResponse
     */
    'industryList'?: Array<AdCreativeIndustryResponse>;
    /**
     * 投放时间列表
     * @type {Array<AdCreativeTimeResponse>}
     * @memberof AdCreativeDetailResponse
     */
    'list'?: Array<AdCreativeTimeResponse>;
    /**
     * 单日预算限制
     * @type {number}
     * @memberof AdCreativeDetailResponse
     */
    'maxDailyBudget'?: number;
    /**
     * 媒体位集合
     * @type {Array<AdMediaListResponse>}
     * @memberof AdCreativeDetailResponse
     */
    'mediaList'?: Array<AdMediaListResponse>;
    /**
     * 手机集合
     * @type {Array<MobileDetailResponse>}
     * @memberof AdCreativeDetailResponse
     */
    'mobileList'?: Array<MobileDetailResponse>;
    /**
     * 手机系统 1全部、2安卓、3苹果
     * @type {number}
     * @memberof AdCreativeDetailResponse
     */
    'mobileSystem'?: number;
    /**
     * 图片地址
     * @type {string}
     * @memberof AdCreativeDetailResponse
     */
    'picture'?: string;
    /**
     * 价格
     * @type {number}
     * @memberof AdCreativeDetailResponse
     */
    'price'?: number;
    /**
     * 剩余总预算
     * @type {number}
     * @memberof AdCreativeDetailResponse
     */
    'remainingBudget'?: number;
    /**
     * 剩余单日预算
     * @type {number}
     * @memberof AdCreativeDetailResponse
     */
    'remainingMaxDailyBudget'?: number;
    /**
     * 开始时间
     * @type {string}
     * @memberof AdCreativeDetailResponse
     */
    'startDate'?: string;
    /**
     *  0-非测试，1-测试
     * @type {number}
     * @memberof AdCreativeDetailResponse
     */
    'testFlag'?: number;
    /**
     * 广告总预算
     * @type {number}
     * @memberof AdCreativeDetailResponse
     */
    'totalBudget'?: number;
    /**
     * 广告类型ID
     * @type {string}
     * @memberof AdCreativeDetailResponse
     */
    'typeId'?: string;
    /**
     * 广告类型名字
     * @type {string}
     * @memberof AdCreativeDetailResponse
     */
    'typeName'?: string;
    /**
     * 广告链接
     * @type {string}
     * @memberof AdCreativeDetailResponse
     */
    'url'?: string;
    /**
     * 用户日曝光次数上限
     * @type {number}
     * @memberof AdCreativeDetailResponse
     */
    'userMaxDailyExposure'?: number;
}
/**
 * adCreativeHistoryDayDataPageListRequest
 * @export
 * @interface AdCreativeHistoryDayDataPageListRequest
 */
export interface AdCreativeHistoryDayDataPageListRequest {
    /**
     * 创意id
     * @type {string}
     * @memberof AdCreativeHistoryDayDataPageListRequest
     */
    'creativeId'?: string;
    /**
     * 结束时间
     * @type {string}
     * @memberof AdCreativeHistoryDayDataPageListRequest
     */
    'endDate'?: string;
    /**
     * 开始时间
     * @type {string}
     * @memberof AdCreativeHistoryDayDataPageListRequest
     */
    'startDate'?: string;
}
/**
 * adCreativeHistoryDayDataPageListResponse
 * @export
 * @interface AdCreativeHistoryDayDataPageListResponse
 */
export interface AdCreativeHistoryDayDataPageListResponse {
    /**
     * 点击次数
     * @type {number}
     * @memberof AdCreativeHistoryDayDataPageListResponse
     */
    'clickCount'?: number;
    /**
     * 点击率
     * @type {number}
     * @memberof AdCreativeHistoryDayDataPageListResponse
     */
    'clickRate'?: number;
    /**
     * 消耗
     * @type {number}
     * @memberof AdCreativeHistoryDayDataPageListResponse
     */
    'expend'?: number;
    /**
     * 曝光次数(PV)
     * @type {number}
     * @memberof AdCreativeHistoryDayDataPageListResponse
     */
    'exposureCount'?: number;
    /**
     * 统计日期
     * @type {string}
     * @memberof AdCreativeHistoryDayDataPageListResponse
     */
    'reportDate'?: string;
    /**
     * 领券数
     * @type {number}
     * @memberof AdCreativeHistoryDayDataPageListResponse
     */
    'sendCouponCount'?: number;
    /**
     * 曝光用户(UV)
     * @type {number}
     * @memberof AdCreativeHistoryDayDataPageListResponse
     */
    'uv'?: number;
}
/**
 * adCreativeIndustryRequest
 * @export
 * @interface AdCreativeIndustryRequest
 */
export interface AdCreativeIndustryRequest {
    /**
     * 一级行业id
     * @type {number}
     * @memberof AdCreativeIndustryRequest
     */
    'primaryId'?: number;
    /**
     * 二级行业id
     * @type {number}
     * @memberof AdCreativeIndustryRequest
     */
    'secondaryId'?: number;
    /**
     * 三级行业id
     * @type {number}
     * @memberof AdCreativeIndustryRequest
     */
    'tertiaryId'?: number;
}
/**
 * adCreativeIndustryResponse
 * @export
 * @interface AdCreativeIndustryResponse
 */
export interface AdCreativeIndustryResponse {
    /**
     * 一级行业id
     * @type {number}
     * @memberof AdCreativeIndustryResponse
     */
    'primaryId'?: number;
    /**
     * 一级行业名字
     * @type {string}
     * @memberof AdCreativeIndustryResponse
     */
    'primaryName'?: string;
    /**
     * 二级行业id
     * @type {number}
     * @memberof AdCreativeIndustryResponse
     */
    'secondaryId'?: number;
    /**
     * 二级行业名字
     * @type {string}
     * @memberof AdCreativeIndustryResponse
     */
    'secondaryName'?: string;
    /**
     * 三级行业id
     * @type {number}
     * @memberof AdCreativeIndustryResponse
     */
    'tertiaryId'?: number;
    /**
     * 三级行业名字
     * @type {string}
     * @memberof AdCreativeIndustryResponse
     */
    'tertiaryName'?: string;
}
/**
 * adCreativePageListRequest
 * @export
 * @interface AdCreativePageListRequest
 */
export interface AdCreativePageListRequest {
    /**
     * 广告主标识
     * @type {string}
     * @memberof AdCreativePageListRequest
     */
    'advertiserId'?: string;
    /**
     * 广告创意名称
     * @type {string}
     * @memberof AdCreativePageListRequest
     */
    'creativeName'?: string;
    /**
     * 启用状态 1未开启 2开启
     * @type {number}
     * @memberof AdCreativePageListRequest
     */
    'enableStatus'?: number;
    /**
     * 结束时间
     * @type {string}
     * @memberof AdCreativePageListRequest
     */
    'endDate'?: string;
    /**
     * 开始时间
     * @type {string}
     * @memberof AdCreativePageListRequest
     */
    'startDate'?: string;
    /**
     * 创建环境
     * @type {number}
     * @memberof AdCreativePageListRequest
     */
    'testFlag'?: number;
    /**
     * 广告类型id
     * @type {string}
     * @memberof AdCreativePageListRequest
     */
    'typeId'?: string;
}
/**
 * adCreativePageListResponse
 * @export
 * @interface AdCreativePageListResponse
 */
export interface AdCreativePageListResponse {
    /**
     * 广告主标识
     * @type {string}
     * @memberof AdCreativePageListResponse
     */
    'advertiserId'?: string;
    /**
     * 广告主名称
     * @type {string}
     * @memberof AdCreativePageListResponse
     */
    'advertiserName'?: string;
    /**
     * 计费方式 1 CPM,2CPC
     * @type {number}
     * @memberof AdCreativePageListResponse
     */
    'billingType'?: number;
    /**
     * 广告创意ID
     * @type {string}
     * @memberof AdCreativePageListResponse
     */
    'creativeId'?: string;
    /**
     * 广告创意名称
     * @type {string}
     * @memberof AdCreativePageListResponse
     */
    'creativeName'?: string;
    /**
     * 启用状态 1未开启 2开启
     * @type {number}
     * @memberof AdCreativePageListResponse
     */
    'enableStatus'?: number;
    /**
     * 结束时间
     * @type {string}
     * @memberof AdCreativePageListResponse
     */
    'endDate'?: string;
    /**
     * 投放时间列表
     * @type {Array<AdCreativeTimeResponse>}
     * @memberof AdCreativePageListResponse
     */
    'list'?: Array<AdCreativeTimeResponse>;
    /**
     * 图片链接
     * @type {string}
     * @memberof AdCreativePageListResponse
     */
    'picture'?: string;
    /**
     * 单价
     * @type {number}
     * @memberof AdCreativePageListResponse
     */
    'price'?: number;
    /**
     * 剩余总预算
     * @type {number}
     * @memberof AdCreativePageListResponse
     */
    'remainingBudget'?: number;
    /**
     * 开始时间
     * @type {string}
     * @memberof AdCreativePageListResponse
     */
    'startDate'?: string;
    /**
     * 创建环境
     * @type {number}
     * @memberof AdCreativePageListResponse
     */
    'testFlag'?: number;
    /**
     * 广告类型id
     * @type {string}
     * @memberof AdCreativePageListResponse
     */
    'typeId'?: string;
    /**
     * 广告类型名称
     * @type {string}
     * @memberof AdCreativePageListResponse
     */
    'typeName'?: string;
    /**
     * 更新时间
     * @type {string}
     * @memberof AdCreativePageListResponse
     */
    'updateTime'?: string;
    /**
     * 广告链接
     * @type {string}
     * @memberof AdCreativePageListResponse
     */
    'url'?: string;
}
/**
 * AdCreativePlanDetailResponse
 * @export
 * @interface AdCreativePlanDetailResponse
 */
export interface AdCreativePlanDetailResponse {
    /**
     * 广告创意id
     * @type {string}
     * @memberof AdCreativePlanDetailResponse
     */
    'creativeId'?: string;
    /**
     * 广告创意名称
     * @type {string}
     * @memberof AdCreativePlanDetailResponse
     */
    'creativeName'?: string;
    /**
     * 图片
     * @type {string}
     * @memberof AdCreativePlanDetailResponse
     */
    'picture'?: string;
}
/**
 * AdCreativeSimpleInfoResponse
 * @export
 * @interface AdCreativeSimpleInfoResponse
 */
export interface AdCreativeSimpleInfoResponse {
    /**
     * 广告创意配置回调url
     * @type {string}
     * @memberof AdCreativeSimpleInfoResponse
     */
    'adExposureCallBackUrl'?: string;
    /**
     * 计费方式 1 CPM,2CPC
     * @type {number}
     * @memberof AdCreativeSimpleInfoResponse
     */
    'billingType'?: number;
    /**
     * 广告创意ID
     * @type {string}
     * @memberof AdCreativeSimpleInfoResponse
     */
    'creativeId'?: string;
    /**
     * 广告创意名称
     * @type {string}
     * @memberof AdCreativeSimpleInfoResponse
     */
    'creativeName'?: string;
    /**
     * 单日预算限制
     * @type {number}
     * @memberof AdCreativeSimpleInfoResponse
     */
    'maxDailyBudget'?: number;
    /**
     * 图片地址
     * @type {string}
     * @memberof AdCreativeSimpleInfoResponse
     */
    'picture'?: string;
    /**
     * 价格
     * @type {number}
     * @memberof AdCreativeSimpleInfoResponse
     */
    'price'?: number;
    /**
     * 剩余总预算
     * @type {number}
     * @memberof AdCreativeSimpleInfoResponse
     */
    'remainingBudget'?: number;
    /**
     * 广告总预算
     * @type {number}
     * @memberof AdCreativeSimpleInfoResponse
     */
    'totalBudget'?: number;
    /**
     * 广告链接
     * @type {string}
     * @memberof AdCreativeSimpleInfoResponse
     */
    'url'?: string;
}
/**
 * adCreativeTimeRequest
 * @export
 * @interface AdCreativeTimeRequest
 */
export interface AdCreativeTimeRequest {
    /**
     * 结束时间 时分秒
     * @type {string}
     * @memberof AdCreativeTimeRequest
     */
    'endTime'?: string;
    /**
     * 开始时间 时分秒
     * @type {string}
     * @memberof AdCreativeTimeRequest
     */
    'startTime'?: string;
}
/**
 * adCreativeTimeResponse
 * @export
 * @interface AdCreativeTimeResponse
 */
export interface AdCreativeTimeResponse {
    /**
     * 结束时间 时分秒
     * @type {string}
     * @memberof AdCreativeTimeResponse
     */
    'endTime'?: string;
    /**
     * 开始时间 时分秒
     * @type {string}
     * @memberof AdCreativeTimeResponse
     */
    'startTime'?: string;
}
/**
 * AdMediaListResponse
 * @export
 * @interface AdMediaListResponse
 */
export interface AdMediaListResponse {
    /**
     * mediaId 媒体位id
     * @type {string}
     * @memberof AdMediaListResponse
     */
    'mediaId'?: string;
    /**
     * mediaName 媒体位名称
     * @type {string}
     * @memberof AdMediaListResponse
     */
    'mediaName'?: string;
}
/**
 * AdMediaOutResponse
 * @export
 * @interface AdMediaOutResponse
 */
export interface AdMediaOutResponse {
    /**
     * 媒体位信息列表
     * @type {Array<AdMediaListResponse>}
     * @memberof AdMediaOutResponse
     */
    'list'?: Array<AdMediaListResponse>;
}
/**
 * adPlanAreaRequest
 * @export
 * @interface AdPlanAreaRequest
 */
export interface AdPlanAreaRequest {
    /**
     * 市
     * @type {string}
     * @memberof AdPlanAreaRequest
     */
    'cityCode'?: string;
    /**
     * 省
     * @type {string}
     * @memberof AdPlanAreaRequest
     */
    'provinceCode'?: string;
    /**
     * 区
     * @type {string}
     * @memberof AdPlanAreaRequest
     */
    'regionCode'?: string;
}
/**
 * AdPlanAreaResponse
 * @export
 * @interface AdPlanAreaResponse
 */
export interface AdPlanAreaResponse {
    /**
     * 市Code
     * @type {string}
     * @memberof AdPlanAreaResponse
     */
    'cityCode'?: string;
    /**
     * 市名字
     * @type {string}
     * @memberof AdPlanAreaResponse
     */
    'cityName'?: string;
    /**
     * 省Code
     * @type {string}
     * @memberof AdPlanAreaResponse
     */
    'provinceCode'?: string;
    /**
     * 省名字
     * @type {string}
     * @memberof AdPlanAreaResponse
     */
    'provinceName'?: string;
    /**
     * 区Code
     * @type {string}
     * @memberof AdPlanAreaResponse
     */
    'regionCode'?: string;
    /**
     * 区名字
     * @type {string}
     * @memberof AdPlanAreaResponse
     */
    'regionName'?: string;
}
/**
 * AdPlanCheckRequest
 * @export
 * @interface AdPlanCheckRequest
 */
export interface AdPlanCheckRequest {
    /**
     * 广告计划ID
     * @type {string}
     * @memberof AdPlanCheckRequest
     */
    'planId'?: string;
    /**
     * 广告计划名称
     * @type {string}
     * @memberof AdPlanCheckRequest
     */
    'planName'?: string;
}
/**
 * AdPlanCheckResponse
 * @export
 * @interface AdPlanCheckResponse
 */
export interface AdPlanCheckResponse {
    /**
     * 校验结果 1通过  2不通过
     * @type {number}
     * @memberof AdPlanCheckResponse
     */
    'status'?: number;
}
/**
 * AdPlanCreativeAddParam
 * @export
 * @interface AdPlanCreativeAddParam
 */
export interface AdPlanCreativeAddParam {
    /**
     * 
     * @type {string}
     * @memberof AdPlanCreativeAddParam
     */
    'creativeId'?: string;
    /**
     * 
     * @type {number}
     * @memberof AdPlanCreativeAddParam
     */
    'isMainAd'?: number;
}
/**
 * AdPlanDataListRequest
 * @export
 * @interface AdPlanDataListRequest
 */
export interface AdPlanDataListRequest {
    /**
     * 广告主ID
     * @type {string}
     * @memberof AdPlanDataListRequest
     */
    'advertiserId'?: string;
    /**
     * 结束日期 格式 yyyy-MM-dd
     * @type {string}
     * @memberof AdPlanDataListRequest
     */
    'endDate'?: string;
    /**
     * 是否是实时,  今日查询传 1 日期数据为空，历史查询传 2，日期数据非空
     * @type {number}
     * @memberof AdPlanDataListRequest
     */
    'isTodayRealTime'?: number;
    /**
     * 计划名称
     * @type {string}
     * @memberof AdPlanDataListRequest
     */
    'planName'?: string;
    /**
     * 排序规则 1-曝光次数正序 2-曝光次数倒序 3-曝光用户正序 4-曝光用户倒序 5-点击次数正序 6-点击次数倒序 7-点击率正序 8-点击率倒序 9-发券数正序 10-发券数倒序 11-消耗正序 12-消耗倒序
     * @type {number}
     * @memberof AdPlanDataListRequest
     */
    'sortRule'?: number;
    /**
     * 开始日期 格式 yyyy-MM-dd
     * @type {string}
     * @memberof AdPlanDataListRequest
     */
    'startDate'?: string;
    /**
     * 是否测试 0-非测试，1-测试
     * @type {number}
     * @memberof AdPlanDataListRequest
     */
    'testFlag'?: number;
    /**
     * 广告类型ID
     * @type {string}
     * @memberof AdPlanDataListRequest
     */
    'typeId'?: string;
}
/**
 * AdPlanDataListResponse
 * @export
 * @interface AdPlanDataListResponse
 */
export interface AdPlanDataListResponse {
    /**
     * 广告主名称
     * @type {string}
     * @memberof AdPlanDataListResponse
     */
    'advertiserName'?: string;
    /**
     * 计费方式 1 CPM,2CPC
     * @type {number}
     * @memberof AdPlanDataListResponse
     */
    'billingType'?: number;
    /**
     * 点击计数
     * @type {number}
     * @memberof AdPlanDataListResponse
     */
    'clickCount'?: number;
    /**
     * 点击率
     * @type {number}
     * @memberof AdPlanDataListResponse
     */
    'clickRate'?: number;
    /**
     * 消耗
     * @type {number}
     * @memberof AdPlanDataListResponse
     */
    'expend'?: number;
    /**
     * 曝光次数(PV)
     * @type {number}
     * @memberof AdPlanDataListResponse
     */
    'exposureCount'?: number;
    /**
     * 媒体位名称(多个会用,隔开)
     * @type {string}
     * @memberof AdPlanDataListResponse
     */
    'mediaNames'?: string;
    /**
     * 广告计划id
     * @type {string}
     * @memberof AdPlanDataListResponse
     */
    'planId'?: string;
    /**
     * 广告计划名称
     * @type {string}
     * @memberof AdPlanDataListResponse
     */
    'planName'?: string;
    /**
     * 计划类型 1-单广告，2-组合广告
     * @type {number}
     * @memberof AdPlanDataListResponse
     */
    'planType'?: number;
    /**
     * 发送优惠券计数
     * @type {number}
     * @memberof AdPlanDataListResponse
     */
    'sendCouponCount'?: number;
    /**
     * 是否测试 0-非测试，1-测试
     * @type {number}
     * @memberof AdPlanDataListResponse
     */
    'testFlag'?: number;
    /**
     * 类型名称
     * @type {string}
     * @memberof AdPlanDataListResponse
     */
    'typeName'?: string;
    /**
     * 曝光用户(UV)
     * @type {number}
     * @memberof AdPlanDataListResponse
     */
    'uv'?: number;
}
/**
 * adPlanDayDataListRequest
 * @export
 * @interface AdPlanDayDataListRequest
 */
export interface AdPlanDayDataListRequest {
    /**
     * 结束日期 格式 yyyy-MM-dd
     * @type {string}
     * @memberof AdPlanDayDataListRequest
     */
    'endDate'?: string;
    /**
     * 计划id
     * @type {string}
     * @memberof AdPlanDayDataListRequest
     */
    'planId'?: string;
    /**
     * 开始日期 格式 yyyy-MM-dd
     * @type {string}
     * @memberof AdPlanDayDataListRequest
     */
    'startDate'?: string;
}
/**
 * AdPlanDayDataListResponse
 * @export
 * @interface AdPlanDayDataListResponse
 */
export interface AdPlanDayDataListResponse {
    /**
     * 点击计数
     * @type {number}
     * @memberof AdPlanDayDataListResponse
     */
    'clickCount'?: number;
    /**
     * 点击率
     * @type {number}
     * @memberof AdPlanDayDataListResponse
     */
    'clickRate'?: number;
    /**
     * 消耗
     * @type {number}
     * @memberof AdPlanDayDataListResponse
     */
    'expend'?: number;
    /**
     * 曝光次数(PV)
     * @type {number}
     * @memberof AdPlanDayDataListResponse
     */
    'exposureCount'?: number;
    /**
     * 广告计划id
     * @type {string}
     * @memberof AdPlanDayDataListResponse
     */
    'planId'?: string;
    /**
     * 统计日期
     * @type {string}
     * @memberof AdPlanDayDataListResponse
     */
    'reportDate'?: string;
    /**
     * 发送优惠券计数
     * @type {number}
     * @memberof AdPlanDayDataListResponse
     */
    'sendCouponCount'?: number;
    /**
     * 曝光用户(UV)
     * @type {number}
     * @memberof AdPlanDayDataListResponse
     */
    'uv'?: number;
}
/**
 * AdPlanDayDataStatisticsRequest
 * @export
 * @interface AdPlanDayDataStatisticsRequest
 */
export interface AdPlanDayDataStatisticsRequest {
    /**
     * 结束日期 格式 yyyy-MM-dd
     * @type {string}
     * @memberof AdPlanDayDataStatisticsRequest
     */
    'endDate'?: string;
    /**
     * 计划id
     * @type {string}
     * @memberof AdPlanDayDataStatisticsRequest
     */
    'planId'?: string;
    /**
     * 开始日期 格式 yyyy-MM-dd
     * @type {string}
     * @memberof AdPlanDayDataStatisticsRequest
     */
    'startDate'?: string;
}
/**
 * adPlanDayDataStatisticsResponse
 * @export
 * @interface AdPlanDayDataStatisticsResponse
 */
export interface AdPlanDayDataStatisticsResponse {
    /**
     * 点击计数
     * @type {number}
     * @memberof AdPlanDayDataStatisticsResponse
     */
    'clickCount'?: number;
    /**
     * 点击率
     * @type {string}
     * @memberof AdPlanDayDataStatisticsResponse
     */
    'clickRate'?: string;
    /**
     * 消耗
     * @type {number}
     * @memberof AdPlanDayDataStatisticsResponse
     */
    'expend'?: number;
    /**
     * 曝光次数(PV)
     * @type {number}
     * @memberof AdPlanDayDataStatisticsResponse
     */
    'exposureCount'?: number;
    /**
     * 发送优惠券计数
     * @type {string}
     * @memberof AdPlanDayDataStatisticsResponse
     */
    'sendCouponCount'?: string;
    /**
     * 曝光用户(UV)
     * @type {number}
     * @memberof AdPlanDayDataStatisticsResponse
     */
    'uv'?: number;
}
/**
 * AdPlanDetailRequest
 * @export
 * @interface AdPlanDetailRequest
 */
export interface AdPlanDetailRequest {
    /**
     * 广告计划id
     * @type {string}
     * @memberof AdPlanDetailRequest
     */
    'planId'?: string;
}
/**
 * AdPlanDetailResponse
 * @export
 * @interface AdPlanDetailResponse
 */
export interface AdPlanDetailResponse {
    /**
     * 地址组id
     * @type {string}
     * @memberof AdPlanDetailResponse
     */
    'addressGroupId'?: string;
    /**
     * 分组名称
     * @type {string}
     * @memberof AdPlanDetailResponse
     */
    'addressGroupName'?: string;
    /**
     * 广告主id
     * @type {string}
     * @memberof AdPlanDetailResponse
     */
    'advertiserId'?: string;
    /**
     * 广告主名称
     * @type {string}
     * @memberof AdPlanDetailResponse
     */
    'advertiserName'?: string;
    /**
     * 地址列表
     * @type {Array<AdPlanAreaResponse>}
     * @memberof AdPlanDetailResponse
     */
    'areaList'?: Array<AdPlanAreaResponse>;
    /**
     * 地域类型  1分组 2 省市区
     * @type {number}
     * @memberof AdPlanDetailResponse
     */
    'areaType'?: number;
    /**
     * 计费方式 1 CPM,2CPC
     * @type {number}
     * @memberof AdPlanDetailResponse
     */
    'billingType'?: number;
    /**
     * 创建时间
     * @type {string}
     * @memberof AdPlanDetailResponse
     */
    'createTime'?: string;
    /**
     * 广告创意列表
     * @type {Array<AdCreativePlanDetailResponse>}
     * @memberof AdPlanDetailResponse
     */
    'creativeInfoList'?: Array<AdCreativePlanDetailResponse>;
    /**
     * 去重天数 -1表示不限 
     * @type {number}
     * @memberof AdPlanDetailResponse
     */
    'duplicateRemovalDays'?: number;
    /**
     * 结束时间
     * @type {string}
     * @memberof AdPlanDetailResponse
     */
    'endDate'?: string;
    /**
     * 行业列表
     * @type {Array<AdPlanIndustryResponse>}
     * @memberof AdPlanDetailResponse
     */
    'industryList'?: Array<AdPlanIndustryResponse>;
    /**
     * 投放时间列表
     * @type {Array<AdPlanTimeResponse>}
     * @memberof AdPlanDetailResponse
     */
    'list'?: Array<AdPlanTimeResponse>;
    /**
     * 单日预算限制
     * @type {number}
     * @memberof AdPlanDetailResponse
     */
    'maxDailyBudget'?: number;
    /**
     * 手机集合
     * @type {Array<MobileDetailResponse>}
     * @memberof AdPlanDetailResponse
     */
    'mobileList'?: Array<MobileDetailResponse>;
    /**
     * 手机系统 1全部、2安卓、3苹果
     * @type {number}
     * @memberof AdPlanDetailResponse
     */
    'mobileSystem'?: number;
    /**
     * 广告计划id
     * @type {string}
     * @memberof AdPlanDetailResponse
     */
    'planId'?: string;
    /**
     * 计划名称
     * @type {string}
     * @memberof AdPlanDetailResponse
     */
    'planName'?: string;
    /**
     * 计划价格
     * @type {number}
     * @memberof AdPlanDetailResponse
     */
    'planPrice'?: number;
    /**
     * 广告计划类型 1-单广告 2-组合广告
     * @type {number}
     * @memberof AdPlanDetailResponse
     */
    'planType'?: number;
    /**
     * 开始时间
     * @type {string}
     * @memberof AdPlanDetailResponse
     */
    'startDate'?: string;
    /**
     * 广告总预算
     * @type {number}
     * @memberof AdPlanDetailResponse
     */
    'totalBudget'?: number;
    /**
     * 用户日曝光次数上限 -1表示不限
     * @type {number}
     * @memberof AdPlanDetailResponse
     */
    'userMaxDailyExposure'?: number;
}
/**
 * adPlanIndustryRequest
 * @export
 * @interface AdPlanIndustryRequest
 */
export interface AdPlanIndustryRequest {
    /**
     * 一级行业id
     * @type {number}
     * @memberof AdPlanIndustryRequest
     */
    'primaryId'?: number;
    /**
     * 二级行业id
     * @type {number}
     * @memberof AdPlanIndustryRequest
     */
    'secondaryId'?: number;
    /**
     * 三级行业id
     * @type {number}
     * @memberof AdPlanIndustryRequest
     */
    'tertiaryId'?: number;
}
/**
 * AdPlanIndustryResponse
 * @export
 * @interface AdPlanIndustryResponse
 */
export interface AdPlanIndustryResponse {
    /**
     * 
     * @type {number}
     * @memberof AdPlanIndustryResponse
     */
    'primaryId'?: number;
    /**
     * 
     * @type {string}
     * @memberof AdPlanIndustryResponse
     */
    'primaryName'?: string;
    /**
     * 
     * @type {number}
     * @memberof AdPlanIndustryResponse
     */
    'secondaryId'?: number;
    /**
     * 
     * @type {string}
     * @memberof AdPlanIndustryResponse
     */
    'secondaryName'?: string;
    /**
     * 
     * @type {number}
     * @memberof AdPlanIndustryResponse
     */
    'tertiaryId'?: number;
    /**
     * 
     * @type {string}
     * @memberof AdPlanIndustryResponse
     */
    'tertiaryName'?: string;
}
/**
 * AdPlanPageListRequest
 * @export
 * @interface AdPlanPageListRequest
 */
export interface AdPlanPageListRequest {
    /**
     * 广告主ID
     * @type {string}
     * @memberof AdPlanPageListRequest
     */
    'advertiserId'?: string;
    /**
     * 启用状态 1未开启 2开启
     * @type {number}
     * @memberof AdPlanPageListRequest
     */
    'enableStatus'?: number;
    /**
     * 结束日期
     * @type {string}
     * @memberof AdPlanPageListRequest
     */
    'endDate'?: string;
    /**
     * 计划名称
     * @type {string}
     * @memberof AdPlanPageListRequest
     */
    'planName'?: string;
    /**
     * 开始日期
     * @type {string}
     * @memberof AdPlanPageListRequest
     */
    'startDate'?: string;
    /**
     * 是否测试 0-非测试，1-测试
     * @type {number}
     * @memberof AdPlanPageListRequest
     */
    'testFlag'?: number;
    /**
     * 广告类型ID
     * @type {string}
     * @memberof AdPlanPageListRequest
     */
    'typeId'?: string;
}
/**
 * AdPlanPageRequest
 * @export
 * @interface AdPlanPageRequest
 */
export interface AdPlanPageRequest {
    /**
     * 启用状态 1未开启 2开启
     * @type {number}
     * @memberof AdPlanPageRequest
     */
    'enableStatus'?: number;
    /**
     * 媒体id
     * @type {string}
     * @memberof AdPlanPageRequest
     */
    'mediaId'?: string;
    /**
     * 广告位id
     * @type {string}
     * @memberof AdPlanPageRequest
     */
    'spaceId'?: string;
    /**
     * 是否测试 0-非测试，1-测试
     * @type {number}
     * @memberof AdPlanPageRequest
     */
    'testFlag'?: number;
    /**
     * 广告类型ID
     * @type {string}
     * @memberof AdPlanPageRequest
     */
    'typeId'?: string;
}
/**
 * AdPlanPageResponse
 * @export
 * @interface AdPlanPageResponse
 */
export interface AdPlanPageResponse {
    /**
     * 广告主ID
     * @type {string}
     * @memberof AdPlanPageResponse
     */
    'advertiserId'?: string;
    /**
     * 广告主名称
     * @type {string}
     * @memberof AdPlanPageResponse
     */
    'advertiserName'?: string;
    /**
     * 计费方式 1 CPM,2CPC
     * @type {number}
     * @memberof AdPlanPageResponse
     */
    'billingType'?: number;
    /**
     * 创意列表
     * @type {Array<AdCreativeSimpleInfoResponse>}
     * @memberof AdPlanPageResponse
     */
    'creativeList'?: Array<AdCreativeSimpleInfoResponse>;
    /**
     * 启用状态 1未开启 2开启
     * @type {number}
     * @memberof AdPlanPageResponse
     */
    'enableStatus'?: number;
    /**
     * 结束日期
     * @type {string}
     * @memberof AdPlanPageResponse
     */
    'endDate'?: string;
    /**
     * 广告计划id
     * @type {string}
     * @memberof AdPlanPageResponse
     */
    'planId'?: string;
    /**
     * 广告计划名称
     * @type {string}
     * @memberof AdPlanPageResponse
     */
    'planName'?: string;
    /**
     * 单价
     * @type {number}
     * @memberof AdPlanPageResponse
     */
    'planPrice'?: number;
    /**
     * 计划时间列表
     * @type {Array<AdPlanTimeResponse>}
     * @memberof AdPlanPageResponse
     */
    'planTimeList'?: Array<AdPlanTimeResponse>;
    /**
     * 剩余预算
     * @type {number}
     * @memberof AdPlanPageResponse
     */
    'remainingBudget'?: number;
    /**
     * 开始日期
     * @type {string}
     * @memberof AdPlanPageResponse
     */
    'startDate'?: string;
    /**
     * 创建环境
     * @type {number}
     * @memberof AdPlanPageResponse
     */
    'testFlag'?: number;
    /**
     * 广告类型ID
     * @type {string}
     * @memberof AdPlanPageResponse
     */
    'typeId'?: string;
    /**
     * 类型名称
     * @type {string}
     * @memberof AdPlanPageResponse
     */
    'typeName'?: string;
    /**
     * 更新时间
     * @type {string}
     * @memberof AdPlanPageResponse
     */
    'updateTime'?: string;
}
/**
 * AdPlanProvinceAndCityRequest
 * @export
 * @interface AdPlanProvinceAndCityRequest
 */
export interface AdPlanProvinceAndCityRequest {
    /**
     * 查询id
     * @type {string}
     * @memberof AdPlanProvinceAndCityRequest
     */
    'queryId'?: string;
    /**
     * 查询类型 1广告计划  2广告创意
     * @type {number}
     * @memberof AdPlanProvinceAndCityRequest
     */
    'queryType'?: number;
}
/**
 * AdPlanRemainBudgetRequest
 * @export
 * @interface AdPlanRemainBudgetRequest
 */
export interface AdPlanRemainBudgetRequest {
    /**
     * 广告创意ID
     * @type {string}
     * @memberof AdPlanRemainBudgetRequest
     */
    'creativeId'?: string;
    /**
     * 广告计划输入的单价
     * @type {number}
     * @memberof AdPlanRemainBudgetRequest
     */
    'inputPrice'?: number;
    /**
     * 广告计划ID-修改时需要传入
     * @type {string}
     * @memberof AdPlanRemainBudgetRequest
     */
    'planId'?: string;
}
/**
 * AdPlanRemainBudgetResponse
 * @export
 * @interface AdPlanRemainBudgetResponse
 */
export interface AdPlanRemainBudgetResponse {
    /**
     * 广告创意ID
     * @type {string}
     * @memberof AdPlanRemainBudgetResponse
     */
    'creativeId'?: string;
    /**
     * 广告创意剩余单日预算
     * @type {number}
     * @memberof AdPlanRemainBudgetResponse
     */
    'maxDailyRemainBudget'?: number;
    /**
     * 广告创意单日剩余曝光数
     * @type {number}
     * @memberof AdPlanRemainBudgetResponse
     */
    'maxDailyRemainStock'?: number;
    /**
     * 广告创意剩余单日库存-根据计费方式转换后的
     * @type {number}
     * @memberof AdPlanRemainBudgetResponse
     */
    'maxDailyRemainStockConvert'?: number;
    /**
     * 广告计划id
     * @type {string}
     * @memberof AdPlanRemainBudgetResponse
     */
    'planId'?: string;
    /**
     * 广告创意剩余总预算
     * @type {number}
     * @memberof AdPlanRemainBudgetResponse
     */
    'totalRemainBudget'?: number;
    /**
     * 广告创意总剩余曝光数
     * @type {number}
     * @memberof AdPlanRemainBudgetResponse
     */
    'totalRemainStock'?: number;
    /**
     * 广告创意总剩余总库存-根据计费方式转换后的
     * @type {number}
     * @memberof AdPlanRemainBudgetResponse
     */
    'totalRemainStockConvert'?: number;
}
/**
 * AdPlanTimeParam
 * @export
 * @interface AdPlanTimeParam
 */
export interface AdPlanTimeParam {
    /**
     * 
     * @type {string}
     * @memberof AdPlanTimeParam
     */
    'endTime'?: string;
    /**
     * 
     * @type {string}
     * @memberof AdPlanTimeParam
     */
    'startTime'?: string;
}
/**
 * adPlanTimeRequest
 * @export
 * @interface AdPlanTimeRequest
 */
export interface AdPlanTimeRequest {
    /**
     * 结束时间 时分秒
     * @type {string}
     * @memberof AdPlanTimeRequest
     */
    'endTime'?: string;
    /**
     * 开始时间 时分秒
     * @type {string}
     * @memberof AdPlanTimeRequest
     */
    'startTime'?: string;
}
/**
 * AdPlanTimeResponse
 * @export
 * @interface AdPlanTimeResponse
 */
export interface AdPlanTimeResponse {
    /**
     * 结束时间 时分秒
     * @type {string}
     * @memberof AdPlanTimeResponse
     */
    'endTime'?: string;
    /**
     * 开始时间 时分秒
     * @type {string}
     * @memberof AdPlanTimeResponse
     */
    'startTime'?: string;
}
/**
 * AdPreconditionAgentResponse
 * @export
 * @interface AdPreconditionAgentResponse
 */
export interface AdPreconditionAgentResponse {
    /**
     * 代理商广告权限（1有权限；0没权限）
     * @type {number}
     * @memberof AdPreconditionAgentResponse
     */
    'adPermission'?: number;
    /**
     * 代理商账号
     * @type {string}
     * @memberof AdPreconditionAgentResponse
     */
    'agentAccount'?: string;
    /**
     * 代理商id
     * @type {number}
     * @memberof AdPreconditionAgentResponse
     */
    'agentId'?: number;
    /**
     * 代理商OEM
     * @type {string}
     * @memberof AdPreconditionAgentResponse
     */
    'agentOem'?: string;
    /**
     * 代理商公司名称
     * @type {string}
     * @memberof AdPreconditionAgentResponse
     */
    'companyName'?: string;
    /**
     * 商户id
     * @type {number}
     * @memberof AdPreconditionAgentResponse
     */
    'merchantId'?: number;
    /**
     * 是否直营
     * @type {number}
     * @memberof AdPreconditionAgentResponse
     */
    'ownRun'?: number;
    /**
     * 门店id
     * @type {number}
     * @memberof AdPreconditionAgentResponse
     */
    'storeId'?: number;
}
/**
 * AdPreconditionIndustryResponse
 * @export
 * @interface AdPreconditionIndustryResponse
 */
export interface AdPreconditionIndustryResponse {
    /**
     * 一级行业ID
     * @type {number}
     * @memberof AdPreconditionIndustryResponse
     */
    'primaryId'?: number;
    /**
     * 二级行业ID
     * @type {number}
     * @memberof AdPreconditionIndustryResponse
     */
    'secondaryId'?: number;
    /**
     * 三级行业ID
     * @type {number}
     * @memberof AdPreconditionIndustryResponse
     */
    'tertiaryId'?: number;
}
/**
 * AdPreconditionRequest
 * @export
 * @interface AdPreconditionRequest
 */
export interface AdPreconditionRequest {
    /**
     * 付呗商户号
     * @type {number}
     * @memberof AdPreconditionRequest
     */
    'merchantId'?: number;
    /**
     * 广告唯一标识orderId
     * @type {string}
     * @memberof AdPreconditionRequest
     */
    'orderId'?: string;
    /**
     * 广告位ID
     * @type {string}
     * @memberof AdPreconditionRequest
     */
    'spaceId'?: string;
    /**
     * 付呗门店id
     * @type {number}
     * @memberof AdPreconditionRequest
     */
    'storeId'?: number;
}
/**
 * AdPreconditionResponse
 * @export
 * @interface AdPreconditionResponse
 */
export interface AdPreconditionResponse {
    /**
     * 
     * @type {AdPreconditionAgentResponse}
     * @memberof AdPreconditionResponse
     */
    'agent'?: AdPreconditionAgentResponse;
    /**
     * 
     * @type {AdClientAreaResponse}
     * @memberof AdPreconditionResponse
     */
    'area'?: AdClientAreaResponse;
    /**
     * 
     * @type {AdPreconditionIndustryResponse}
     * @memberof AdPreconditionResponse
     */
    'industry'?: AdPreconditionIndustryResponse;
    /**
     * 广告系统唯一标识
     * @type {string}
     * @memberof AdPreconditionResponse
     */
    'orderId'?: string;
}
/**
 * AdSpaceAddRequest
 * @export
 * @interface AdSpaceAddRequest
 */
export interface AdSpaceAddRequest {
    /**
     * 流量主ID
     * @type {string}
     * @memberof AdSpaceAddRequest
     */
    'flowMasterId'?: string;
    /**
     * 媒体位ID
     * @type {string}
     * @memberof AdSpaceAddRequest
     */
    'mediaId'?: string;
    /**
     * 广告计划列表
     * @type {Array<AdSpacePlanDetailRequest>}
     * @memberof AdSpaceAddRequest
     */
    'planList'?: Array<AdSpacePlanDetailRequest>;
    /**
     * 广告位名称
     * @type {string}
     * @memberof AdSpaceAddRequest
     */
    'spaceName'?: string;
    /**
     * 测试门店ID列表
     * @type {string}
     * @memberof AdSpaceAddRequest
     */
    'storeId'?: string;
    /**
     * 测试标记：0-非测试，1-测试
     * @type {number}
     * @memberof AdSpaceAddRequest
     */
    'testFlag'?: number;
}
/**
 * AdSpaceDataRequest
 * @export
 * @interface AdSpaceDataRequest
 */
export interface AdSpaceDataRequest {
    /**
     * 结束日期:格式 \"yyyy-MM-dd\"
     * @type {string}
     * @memberof AdSpaceDataRequest
     */
    'endDate'?: string;
    /**
     * 流量主ID
     * @type {string}
     * @memberof AdSpaceDataRequest
     */
    'flowMasterId'?: string;
    /**
     * 是否是实时:今日查询传1 日期数据为空;历史查询传2，日期数据非空
     * @type {number}
     * @memberof AdSpaceDataRequest
     */
    'isTodayRealTime'?: number;
    /**
     * 排序规则: 曝光次数 1-正序 2-倒序,曝光用户 3-正序 4-倒序,点击次数 5-正序 6-倒序,点击率 7-正序 8-倒序,发券数数 9-正序 10-倒序,消耗 11-正序 12-倒序
     * @type {number}
     * @memberof AdSpaceDataRequest
     */
    'sortRule'?: number;
    /**
     * 广告位名称
     * @type {string}
     * @memberof AdSpaceDataRequest
     */
    'spaceName'?: string;
    /**
     * 开始时间:格式 \"yyyy-MM-dd\"
     * @type {string}
     * @memberof AdSpaceDataRequest
     */
    'startDate'?: string;
    /**
     * 测试标记 0-非测试，1-测试
     * @type {number}
     * @memberof AdSpaceDataRequest
     */
    'testFlag'?: number;
}
/**
 * AdSpaceDataResponse
 * @export
 * @interface AdSpaceDataResponse
 */
export interface AdSpaceDataResponse {
    /**
     * 点击次数
     * @type {number}
     * @memberof AdSpaceDataResponse
     */
    'clickCount'?: number;
    /**
     * 点击率
     * @type {number}
     * @memberof AdSpaceDataResponse
     */
    'clickRate'?: number;
    /**
     * 消耗
     * @type {number}
     * @memberof AdSpaceDataResponse
     */
    'expend'?: number;
    /**
     * 曝光次数(PV)
     * @type {number}
     * @memberof AdSpaceDataResponse
     */
    'exposureCount'?: number;
    /**
     * 流量主ID
     * @type {string}
     * @memberof AdSpaceDataResponse
     */
    'flowMasterId'?: string;
    /**
     * 流量主简称
     * @type {string}
     * @memberof AdSpaceDataResponse
     */
    'flowMasterShortName'?: string;
    /**
     * 在投广告数量
     * @type {number}
     * @memberof AdSpaceDataResponse
     */
    'planTotal'?: number;
    /**
     * 领券数
     * @type {number}
     * @memberof AdSpaceDataResponse
     */
    'sendCouponCount'?: number;
    /**
     * 广告位ID
     * @type {string}
     * @memberof AdSpaceDataResponse
     */
    'spaceId'?: string;
    /**
     * 广告位名称
     * @type {string}
     * @memberof AdSpaceDataResponse
     */
    'spaceName'?: string;
    /**
     * 测试标记 0-非测试，1-测试
     * @type {number}
     * @memberof AdSpaceDataResponse
     */
    'testFlag'?: number;
    /**
     * 曝光用户(UV)
     * @type {number}
     * @memberof AdSpaceDataResponse
     */
    'uv'?: number;
}
/**
 * AdSpaceDeleteRequest
 * @export
 * @interface AdSpaceDeleteRequest
 */
export interface AdSpaceDeleteRequest {
    /**
     * 广告位ID
     * @type {string}
     * @memberof AdSpaceDeleteRequest
     */
    'spaceId'?: string;
}
/**
 * AdSpaceDetailRequest
 * @export
 * @interface AdSpaceDetailRequest
 */
export interface AdSpaceDetailRequest {
    /**
     * 广告位ID
     * @type {string}
     * @memberof AdSpaceDetailRequest
     */
    'spaceId'?: string;
}
/**
 * AdSpaceDetailResponse
 * @export
 * @interface AdSpaceDetailResponse
 */
export interface AdSpaceDetailResponse {
    /**
     * 创建日期
     * @type {string}
     * @memberof AdSpaceDetailResponse
     */
    'createTime'?: string;
    /**
     * 启用状态 1-未开启 2-开启
     * @type {number}
     * @memberof AdSpaceDetailResponse
     */
    'enableStatus'?: number;
    /**
     * 流量主ID
     * @type {string}
     * @memberof AdSpaceDetailResponse
     */
    'flowMasterId'?: string;
    /**
     * 流量主简称
     * @type {string}
     * @memberof AdSpaceDetailResponse
     */
    'flowMasterShortName'?: string;
    /**
     * 媒体位ID
     * @type {string}
     * @memberof AdSpaceDetailResponse
     */
    'mediaId'?: string;
    /**
     * 媒体位名称
     * @type {string}
     * @memberof AdSpaceDetailResponse
     */
    'mediaName'?: string;
    /**
     * 广告计划列表
     * @type {Array<AdSpacePlanDetailResponse>}
     * @memberof AdSpaceDetailResponse
     */
    'planList'?: Array<AdSpacePlanDetailResponse>;
    /**
     * 广告计划总数
     * @type {number}
     * @memberof AdSpaceDetailResponse
     */
    'planTotal'?: number;
    /**
     * 广告位ID
     * @type {string}
     * @memberof AdSpaceDetailResponse
     */
    'spaceId'?: string;
    /**
     * 广告位名称
     * @type {string}
     * @memberof AdSpaceDetailResponse
     */
    'spaceName'?: string;
    /**
     * 测试门店ID列表
     * @type {string}
     * @memberof AdSpaceDetailResponse
     */
    'storeId'?: string;
    /**
     * 测试标记 0-非测试，1-测试
     * @type {number}
     * @memberof AdSpaceDetailResponse
     */
    'testFlag'?: number;
    /**
     * 更新日期
     * @type {string}
     * @memberof AdSpaceDetailResponse
     */
    'updateTime'?: string;
}
/**
 * AdSpacePlanCountRequest
 * @export
 * @interface AdSpacePlanCountRequest
 */
export interface AdSpacePlanCountRequest {
    /**
     * 广告位ID
     * @type {string}
     * @memberof AdSpacePlanCountRequest
     */
    'spaceId'?: string;
}
/**
 * AdSpacePlanCountResponse
 * @export
 * @interface AdSpacePlanCountResponse
 */
export interface AdSpacePlanCountResponse {
    /**
     * 进行中的广告计划总数
     * @type {number}
     * @memberof AdSpacePlanCountResponse
     */
    'total'?: number;
}
/**
 * AdSpacePlanDataRequest
 * @export
 * @interface AdSpacePlanDataRequest
 */
export interface AdSpacePlanDataRequest {
    /**
     * 结束日期:格式 \"yyyy-MM-dd\"
     * @type {string}
     * @memberof AdSpacePlanDataRequest
     */
    'endDate'?: string;
    /**
     * 是否是实时:今日查询传1 日期数据为空;历史查询传2，日期数据非空
     * @type {number}
     * @memberof AdSpacePlanDataRequest
     */
    'isTodayRealTime'?: number;
    /**
     * 排序规则: 曝光次数 1-正序 2-倒序,曝光用户 3-正序 4-倒序,点击次数 5-正序 6-倒序,点击率 7-正序 8-倒序,发券数数 9-正序 10-倒序,消耗 11-正序 12-倒序
     * @type {number}
     * @memberof AdSpacePlanDataRequest
     */
    'sortRule'?: number;
    /**
     * 广告位ID
     * @type {string}
     * @memberof AdSpacePlanDataRequest
     */
    'spaceId'?: string;
    /**
     * 开始时间:格式 \"yyyy-MM-dd\"
     * @type {string}
     * @memberof AdSpacePlanDataRequest
     */
    'startDate'?: string;
}
/**
 * AdSpacePlanDataResponse
 * @export
 * @interface AdSpacePlanDataResponse
 */
export interface AdSpacePlanDataResponse {
    /**
     * 广告主简称
     * @type {string}
     * @memberof AdSpacePlanDataResponse
     */
    'advertiserShortName'?: string;
    /**
     * 均价
     * @type {number}
     * @memberof AdSpacePlanDataResponse
     */
    'averagePrice'?: number;
    /**
     * 计费方式 1 CPM,2CPC
     * @type {number}
     * @memberof AdSpacePlanDataResponse
     */
    'billingType'?: number;
    /**
     * 点击次数
     * @type {number}
     * @memberof AdSpacePlanDataResponse
     */
    'clickCount'?: number;
    /**
     * 点击率
     * @type {number}
     * @memberof AdSpacePlanDataResponse
     */
    'clickRate'?: number;
    /**
     * 消耗
     * @type {number}
     * @memberof AdSpacePlanDataResponse
     */
    'expend'?: number;
    /**
     * 曝光次数(PV)
     * @type {number}
     * @memberof AdSpacePlanDataResponse
     */
    'exposureCount'?: number;
    /**
     * 流量主ID
     * @type {string}
     * @memberof AdSpacePlanDataResponse
     */
    'flowMasterId'?: string;
    /**
     * 流量主简称
     * @type {string}
     * @memberof AdSpacePlanDataResponse
     */
    'flowMasterShortName'?: string;
    /**
     * 媒体id
     * @type {string}
     * @memberof AdSpacePlanDataResponse
     */
    'mediaId'?: string;
    /**
     * 媒体名称
     * @type {string}
     * @memberof AdSpacePlanDataResponse
     */
    'mediaName'?: string;
    /**
     * 广告计划ID
     * @type {string}
     * @memberof AdSpacePlanDataResponse
     */
    'planId'?: string;
    /**
     * 广告计划名称
     * @type {string}
     * @memberof AdSpacePlanDataResponse
     */
    'planName'?: string;
    /**
     * 领券数
     * @type {number}
     * @memberof AdSpacePlanDataResponse
     */
    'sendCouponCount'?: number;
    /**
     * 广告类型名称
     * @type {string}
     * @memberof AdSpacePlanDataResponse
     */
    'typeName'?: string;
    /**
     * 曝光用户(UV)
     * @type {number}
     * @memberof AdSpacePlanDataResponse
     */
    'uv'?: number;
}
/**
 * AdSpacePlanDataStatisticsRequest
 * @export
 * @interface AdSpacePlanDataStatisticsRequest
 */
export interface AdSpacePlanDataStatisticsRequest {
    /**
     * 结束日期:格式 \"yyyy-MM-dd\"
     * @type {string}
     * @memberof AdSpacePlanDataStatisticsRequest
     */
    'endDate'?: string;
    /**
     * 是否是实时:今日查询传1 日期数据为空;历史查询传2，日期数据非空
     * @type {number}
     * @memberof AdSpacePlanDataStatisticsRequest
     */
    'isTodayRealTime'?: number;
    /**
     * 广告位ID
     * @type {string}
     * @memberof AdSpacePlanDataStatisticsRequest
     */
    'spaceId'?: string;
    /**
     * 开始时间:格式 \"yyyy-MM-dd\"
     * @type {string}
     * @memberof AdSpacePlanDataStatisticsRequest
     */
    'startDate'?: string;
}
/**
 * AdSpacePlanDataStatisticsResponse
 * @export
 * @interface AdSpacePlanDataStatisticsResponse
 */
export interface AdSpacePlanDataStatisticsResponse {
    /**
     * 点击次数
     * @type {number}
     * @memberof AdSpacePlanDataStatisticsResponse
     */
    'clickCount'?: number;
    /**
     * 点击率
     * @type {number}
     * @memberof AdSpacePlanDataStatisticsResponse
     */
    'clickRate'?: number;
    /**
     * 消耗
     * @type {number}
     * @memberof AdSpacePlanDataStatisticsResponse
     */
    'expend'?: number;
    /**
     * 曝光次数(PV)
     * @type {number}
     * @memberof AdSpacePlanDataStatisticsResponse
     */
    'exposureCount'?: number;
    /**
     * 领券数
     * @type {number}
     * @memberof AdSpacePlanDataStatisticsResponse
     */
    'sendCouponCount'?: number;
    /**
     * 广告位ID
     * @type {string}
     * @memberof AdSpacePlanDataStatisticsResponse
     */
    'spaceId'?: string;
    /**
     * 曝光用户(UV)
     * @type {number}
     * @memberof AdSpacePlanDataStatisticsResponse
     */
    'uv'?: number;
}
/**
 * AdSpacePlanDetailRequest
 * @export
 * @interface AdSpacePlanDetailRequest
 */
export interface AdSpacePlanDetailRequest {
    /**
     * 广告计划ID
     * @type {string}
     * @memberof AdSpacePlanDetailRequest
     */
    'planId'?: string;
    /**
     * 排序
     * @type {number}
     * @memberof AdSpacePlanDetailRequest
     */
    'sort'?: number;
}
/**
 * AdSpacePlanDetailResponse
 * @export
 * @interface AdSpacePlanDetailResponse
 */
export interface AdSpacePlanDetailResponse {
    /**
     * 计费方式 1 CPM,2CPC
     * @type {number}
     * @memberof AdSpacePlanDetailResponse
     */
    'billingType'?: number;
    /**
     * 广告计划ID
     * @type {string}
     * @memberof AdSpacePlanDetailResponse
     */
    'planId'?: string;
    /**
     * 广告计划名称
     * @type {string}
     * @memberof AdSpacePlanDetailResponse
     */
    'planName'?: string;
    /**
     * 广告计划原始单价
     * @type {number}
     * @memberof AdSpacePlanDetailResponse
     */
    'planPrice'?: number;
    /**
     * 排序
     * @type {number}
     * @memberof AdSpacePlanDetailResponse
     */
    'sort'?: number;
}
/**
 * AdSpacePlanHistoryDayDataRequest
 * @export
 * @interface AdSpacePlanHistoryDayDataRequest
 */
export interface AdSpacePlanHistoryDayDataRequest {
    /**
     * 结束日期:格式 \"yyyy-MM-dd\"
     * @type {string}
     * @memberof AdSpacePlanHistoryDayDataRequest
     */
    'endDate'?: string;
    /**
     * 广告计划ID
     * @type {string}
     * @memberof AdSpacePlanHistoryDayDataRequest
     */
    'planId'?: string;
    /**
     * 广告位ID
     * @type {string}
     * @memberof AdSpacePlanHistoryDayDataRequest
     */
    'spaceId'?: string;
    /**
     * 开始时间:格式 \"yyyy-MM-dd\"
     * @type {string}
     * @memberof AdSpacePlanHistoryDayDataRequest
     */
    'startDate'?: string;
}
/**
 * AdSpacePlanHistoryDayDataResponse
 * @export
 * @interface AdSpacePlanHistoryDayDataResponse
 */
export interface AdSpacePlanHistoryDayDataResponse {
    /**
     * 均价
     * @type {number}
     * @memberof AdSpacePlanHistoryDayDataResponse
     */
    'averagePrice'?: number;
    /**
     * 点击次数
     * @type {number}
     * @memberof AdSpacePlanHistoryDayDataResponse
     */
    'clickCount'?: number;
    /**
     * 点击率
     * @type {number}
     * @memberof AdSpacePlanHistoryDayDataResponse
     */
    'clickRate'?: number;
    /**
     * 消耗
     * @type {number}
     * @memberof AdSpacePlanHistoryDayDataResponse
     */
    'expend'?: number;
    /**
     * 曝光次数(PV)
     * @type {number}
     * @memberof AdSpacePlanHistoryDayDataResponse
     */
    'exposureCount'?: number;
    /**
     * 统计日期:\"yyyy-MM-dd\"
     * @type {string}
     * @memberof AdSpacePlanHistoryDayDataResponse
     */
    'reportDate'?: string;
    /**
     * 领券数
     * @type {number}
     * @memberof AdSpacePlanHistoryDayDataResponse
     */
    'sendCouponCount'?: number;
    /**
     * 曝光用户(UV)
     * @type {number}
     * @memberof AdSpacePlanHistoryDayDataResponse
     */
    'uv'?: number;
}
/**
 * AdSpaceRequest
 * @export
 * @interface AdSpaceRequest
 */
export interface AdSpaceRequest {
    /**
     * 启用状态 1-关闭 2-开启
     * @type {number}
     * @memberof AdSpaceRequest
     */
    'enableStatus'?: number;
    /**
     * 流量主ID
     * @type {string}
     * @memberof AdSpaceRequest
     */
    'flowMasterId'?: string;
    /**
     * 媒体位ID
     * @type {string}
     * @memberof AdSpaceRequest
     */
    'mediaId'?: string;
    /**
     * 广告位名称
     * @type {string}
     * @memberof AdSpaceRequest
     */
    'spaceName'?: string;
    /**
     * 测试标记 0-非测试，1-测试
     * @type {number}
     * @memberof AdSpaceRequest
     */
    'testFlag'?: number;
}
/**
 * AdSpaceUpdateRequest
 * @export
 * @interface AdSpaceUpdateRequest
 */
export interface AdSpaceUpdateRequest {
    /**
     * 流量主ID
     * @type {string}
     * @memberof AdSpaceUpdateRequest
     */
    'flowMasterId'?: string;
    /**
     * 媒体位ID
     * @type {string}
     * @memberof AdSpaceUpdateRequest
     */
    'mediaId'?: string;
    /**
     * 广告计划列表
     * @type {Array<AdSpacePlanDetailRequest>}
     * @memberof AdSpaceUpdateRequest
     */
    'planList'?: Array<AdSpacePlanDetailRequest>;
    /**
     * 广告位ID
     * @type {string}
     * @memberof AdSpaceUpdateRequest
     */
    'spaceId'?: string;
    /**
     * 广告位名称
     * @type {string}
     * @memberof AdSpaceUpdateRequest
     */
    'spaceName'?: string;
    /**
     * 测试门店ID列表
     * @type {string}
     * @memberof AdSpaceUpdateRequest
     */
    'storeId'?: string;
}
/**
 * AdSpaceUpdateStatusRequest
 * @export
 * @interface AdSpaceUpdateStatusRequest
 */
export interface AdSpaceUpdateStatusRequest {
    /**
     * 广告位启用状态 1-关闭 2-开启
     * @type {number}
     * @memberof AdSpaceUpdateStatusRequest
     */
    'enableStatus'?: number;
    /**
     * 广告位ID
     * @type {string}
     * @memberof AdSpaceUpdateStatusRequest
     */
    'spaceId'?: string;
}
/**
 * AdTemplateAdDetailRequest
 * @export
 * @interface AdTemplateAdDetailRequest
 */
export interface AdTemplateAdDetailRequest {
    /**
     * location 是否展示是否结果页 1底层 2中间 3上层
     * @type {number}
     * @memberof AdTemplateAdDetailRequest
     */
    'location'?: number;
    /**
     * sort 排序
     * @type {number}
     * @memberof AdTemplateAdDetailRequest
     */
    'sort'?: number;
    /**
     * typeId 广告类型id
     * @type {string}
     * @memberof AdTemplateAdDetailRequest
     */
    'typeId'?: string;
}
/**
 * AdTemplateAdDetailResponse
 * @export
 * @interface AdTemplateAdDetailResponse
 */
export interface AdTemplateAdDetailResponse {
    /**
     * location 是否展示是否结果页 1底层 2中间 3上层
     * @type {number}
     * @memberof AdTemplateAdDetailResponse
     */
    'location'?: number;
    /**
     * sort 排序
     * @type {number}
     * @memberof AdTemplateAdDetailResponse
     */
    'sort'?: number;
    /**
     * templateId 模板id
     * @type {string}
     * @memberof AdTemplateAdDetailResponse
     */
    'templateId'?: string;
    /**
     * typeId 广告类型id
     * @type {string}
     * @memberof AdTemplateAdDetailResponse
     */
    'typeId'?: string;
    /**
     * 类型名称
     * @type {string}
     * @memberof AdTemplateAdDetailResponse
     */
    'typeName'?: string;
}
/**
 * AdTemplateAddRequest
 * @export
 * @interface AdTemplateAddRequest
 */
export interface AdTemplateAddRequest {
    /**
     * isShowPayResult 是否展示是否结果页 1展示 2不展示
     * @type {number}
     * @memberof AdTemplateAddRequest
     */
    'isShowPayResult'?: number;
    /**
     * 模版详情列表
     * @type {Array<AdTemplateAdDetailRequest>}
     * @memberof AdTemplateAddRequest
     */
    'list'?: Array<AdTemplateAdDetailRequest>;
    /**
     * templateName 模板名称
     * @type {string}
     * @memberof AdTemplateAddRequest
     */
    'templateName'?: string;
}
/**
 * AdTemplateDetailRequest
 * @export
 * @interface AdTemplateDetailRequest
 */
export interface AdTemplateDetailRequest {
    /**
     * templateId 模板id
     * @type {string}
     * @memberof AdTemplateDetailRequest
     */
    'templateId'?: string;
}
/**
 * AdTemplateDetailResponse
 * @export
 * @interface AdTemplateDetailResponse
 */
export interface AdTemplateDetailResponse {
    /**
     * 底层列表
     * @type {Array<AdTemplateAdDetailResponse>}
     * @memberof AdTemplateDetailResponse
     */
    'bottomList'?: Array<AdTemplateAdDetailResponse>;
    /**
     * createTime 创建时间
     * @type {string}
     * @memberof AdTemplateDetailResponse
     */
    'createTime'?: string;
    /**
     * delFlag 是否删除 0未删除 1删除
     * @type {number}
     * @memberof AdTemplateDetailResponse
     */
    'delFlag'?: number;
    /**
     * isShowPayResult 是否展示是否结果页 1展示 2不展示
     * @type {number}
     * @memberof AdTemplateDetailResponse
     */
    'isShowPayResult'?: number;
    /**
     * 中层列表
     * @type {Array<AdTemplateAdDetailResponse>}
     * @memberof AdTemplateDetailResponse
     */
    'middleList'?: Array<AdTemplateAdDetailResponse>;
    /**
     * templateId 模板id
     * @type {string}
     * @memberof AdTemplateDetailResponse
     */
    'templateId'?: string;
    /**
     * templateName 模板名称
     * @type {string}
     * @memberof AdTemplateDetailResponse
     */
    'templateName'?: string;
    /**
     * 顶层列表
     * @type {Array<AdTemplateAdDetailResponse>}
     * @memberof AdTemplateDetailResponse
     */
    'topList'?: Array<AdTemplateAdDetailResponse>;
}
/**
 * AdTemplatePageRequest
 * @export
 * @interface AdTemplatePageRequest
 */
export interface AdTemplatePageRequest {
    /**
     * templateName 模板名称
     * @type {string}
     * @memberof AdTemplatePageRequest
     */
    'templateName'?: string;
}
/**
 * AdTemplatePageResponse
 * @export
 * @interface AdTemplatePageResponse
 */
export interface AdTemplatePageResponse {
    /**
     * createTime 创建时间
     * @type {string}
     * @memberof AdTemplatePageResponse
     */
    'createTime'?: string;
    /**
     * templateId 模板id
     * @type {string}
     * @memberof AdTemplatePageResponse
     */
    'templateId'?: string;
    /**
     * templateName 模板名称
     * @type {string}
     * @memberof AdTemplatePageResponse
     */
    'templateName'?: string;
}
/**
 * AdTypeAddRequest
 * @export
 * @interface AdTypeAddRequest
 */
export interface AdTypeAddRequest {
    /**
     * baseVersion 基础版本
     * @type {string}
     * @memberof AdTypeAddRequest
     */
    'baseVersion'?: string;
    /**
     * createTime 创建时间
     * @type {string}
     * @memberof AdTypeAddRequest
     */
    'createTime'?: string;
    /**
     * delFlag 0-未删除，1-已删除
     * @type {number}
     * @memberof AdTypeAddRequest
     */
    'delFlag'?: number;
    /**
     * description 描述
     * @type {string}
     * @memberof AdTypeAddRequest
     */
    'description'?: string;
    /**
     * mediaId 可投媒体位集合，逗号分隔
     * @type {string}
     * @memberof AdTypeAddRequest
     */
    'mediaId'?: string;
    /**
     * sort 排序
     * @type {number}
     * @memberof AdTypeAddRequest
     */
    'sort'?: number;
    /**
     * testFlag 0-非测试，1-测试
     * @type {number}
     * @memberof AdTypeAddRequest
     */
    'testFlag'?: number;
    /**
     * 广告类型ID
     * @type {string}
     * @memberof AdTypeAddRequest
     */
    'typeId'?: string;
    /**
     * name 名称
     * @type {string}
     * @memberof AdTypeAddRequest
     */
    'typeName'?: string;
    /**
     * updateTime 更新时间
     * @type {string}
     * @memberof AdTypeAddRequest
     */
    'updateTime'?: string;
    /**
     * url 广告示例url集合，逗号分隔
     * @type {string}
     * @memberof AdTypeAddRequest
     */
    'url'?: string;
}
/**
 * AdTypeCombinationListResponse
 * @export
 * @interface AdTypeCombinationListResponse
 */
export interface AdTypeCombinationListResponse {
    /**
     * 组合广告列表
     * @type {Array<AdTypeDetailResponse>}
     * @memberof AdTypeCombinationListResponse
     */
    'combinationList'?: Array<AdTypeDetailResponse>;
    /**
     * 不支持组合广告列表
     * @type {Array<AdTypeDetailResponse>}
     * @memberof AdTypeCombinationListResponse
     */
    'noSupportCombinationList'?: Array<AdTypeDetailResponse>;
    /**
     * 支持组合广告列表
     * @type {Array<AdTypeDetailResponse>}
     * @memberof AdTypeCombinationListResponse
     */
    'supportCombinationList'?: Array<AdTypeDetailResponse>;
}
/**
 * AdTypeDeleteRequest
 * @export
 * @interface AdTypeDeleteRequest
 */
export interface AdTypeDeleteRequest {
    /**
     * 广告类型ID
     * @type {string}
     * @memberof AdTypeDeleteRequest
     */
    'typeId'?: string;
}
/**
 * AdTypeDetailRequest
 * @export
 * @interface AdTypeDetailRequest
 */
export interface AdTypeDetailRequest {
    /**
     * 广告类型ID
     * @type {string}
     * @memberof AdTypeDetailRequest
     */
    'typeId'?: string;
}
/**
 * AdTypeDetailResponse
 * @export
 * @interface AdTypeDetailResponse
 */
export interface AdTypeDetailResponse {
    /**
     * baseVersion 基础版本
     * @type {string}
     * @memberof AdTypeDetailResponse
     */
    'baseVersion'?: string;
    /**
     * createTime 创建时间
     * @type {string}
     * @memberof AdTypeDetailResponse
     */
    'createTime'?: string;
    /**
     * delFlag 0-未删除，1-已删除
     * @type {number}
     * @memberof AdTypeDetailResponse
     */
    'delFlag'?: number;
    /**
     * description 描述
     * @type {string}
     * @memberof AdTypeDetailResponse
     */
    'description'?: string;
    /**
     * isCombination 是否组合广告 1是2不是.
     * @type {number}
     * @memberof AdTypeDetailResponse
     */
    'isCombination'?: number;
    /**
     * isSupportCombination 是否支持组合广告 1是2不是.
     * @type {number}
     * @memberof AdTypeDetailResponse
     */
    'isSupportCombination'?: number;
    /**
     * 位置 1底层 2中层 3顶层
     * @type {number}
     * @memberof AdTypeDetailResponse
     */
    'location'?: number;
    /**
     * 可投媒体位集合
     * @type {Array<AdTypeMediaInfoResponse>}
     * @memberof AdTypeDetailResponse
     */
    'mediaInfoList'?: Array<AdTypeMediaInfoResponse>;
    /**
     * sort 排序
     * @type {number}
     * @memberof AdTypeDetailResponse
     */
    'sort'?: number;
    /**
     * testFlag 0-非测试，1-测试
     * @type {number}
     * @memberof AdTypeDetailResponse
     */
    'testFlag'?: number;
    /**
     * 广告类型id
     * @type {string}
     * @memberof AdTypeDetailResponse
     */
    'typeId'?: string;
    /**
     * name 名称
     * @type {string}
     * @memberof AdTypeDetailResponse
     */
    'typeName'?: string;
    /**
     * updateTime 更新时间
     * @type {string}
     * @memberof AdTypeDetailResponse
     */
    'updateTime'?: string;
    /**
     * url 广告示例url集合，逗号分隔
     * @type {string}
     * @memberof AdTypeDetailResponse
     */
    'url'?: string;
}
/**
 * AdTypeLocationListResponse
 * @export
 * @interface AdTypeLocationListResponse
 */
export interface AdTypeLocationListResponse {
    /**
     * 底层列表
     * @type {Array<AdTypeDetailResponse>}
     * @memberof AdTypeLocationListResponse
     */
    'bottomList'?: Array<AdTypeDetailResponse>;
    /**
     * 中层列表
     * @type {Array<AdTypeDetailResponse>}
     * @memberof AdTypeLocationListResponse
     */
    'middleList'?: Array<AdTypeDetailResponse>;
    /**
     * 顶层列表
     * @type {Array<AdTypeDetailResponse>}
     * @memberof AdTypeLocationListResponse
     */
    'topList'?: Array<AdTypeDetailResponse>;
}
/**
 * AdTypeMediaInfoResponse
 * @export
 * @interface AdTypeMediaInfoResponse
 */
export interface AdTypeMediaInfoResponse {
    /**
     * 媒体id
     * @type {string}
     * @memberof AdTypeMediaInfoResponse
     */
    'mediaId'?: string;
    /**
     * 媒体名称
     * @type {string}
     * @memberof AdTypeMediaInfoResponse
     */
    'mediaName'?: string;
}
/**
 * AdTypePageRequest
 * @export
 * @interface AdTypePageRequest
 */
export interface AdTypePageRequest {
    /**
     * 媒体位id
     * @type {string}
     * @memberof AdTypePageRequest
     */
    'mediaId'?: string;
    /**
     * testFlag 0-非测试，1-测试
     * @type {number}
     * @memberof AdTypePageRequest
     */
    'testFlag'?: number;
}
/**
 * AdTypePageResponse
 * @export
 * @interface AdTypePageResponse
 */
export interface AdTypePageResponse {
    /**
     * baseVersion 基础版本
     * @type {string}
     * @memberof AdTypePageResponse
     */
    'baseVersion'?: string;
    /**
     * createTime 创建时间
     * @type {string}
     * @memberof AdTypePageResponse
     */
    'createTime'?: string;
    /**
     * delFlag 0-未删除，1-已删除
     * @type {number}
     * @memberof AdTypePageResponse
     */
    'delFlag'?: number;
    /**
     * description 描述
     * @type {string}
     * @memberof AdTypePageResponse
     */
    'description'?: string;
    /**
     * 位置 1底层 2中层 3顶层
     * @type {number}
     * @memberof AdTypePageResponse
     */
    'location'?: number;
    /**
     * mediaId 可投媒体位集合，逗号分隔
     * @type {string}
     * @memberof AdTypePageResponse
     */
    'mediaId'?: string;
    /**
     * sort 排序
     * @type {number}
     * @memberof AdTypePageResponse
     */
    'sort'?: number;
    /**
     * testFlag 0-非测试，1-测试
     * @type {number}
     * @memberof AdTypePageResponse
     */
    'testFlag'?: number;
    /**
     * 广告类型id
     * @type {string}
     * @memberof AdTypePageResponse
     */
    'typeId'?: string;
    /**
     * name 名称
     * @type {string}
     * @memberof AdTypePageResponse
     */
    'typeName'?: string;
    /**
     * updateTime 更新时间
     * @type {string}
     * @memberof AdTypePageResponse
     */
    'updateTime'?: string;
    /**
     * url 广告示例url集合，逗号分隔
     * @type {string}
     * @memberof AdTypePageResponse
     */
    'url'?: string;
}
/**
 * AdTypeUpdateRequest
 * @export
 * @interface AdTypeUpdateRequest
 */
export interface AdTypeUpdateRequest {
    /**
     * baseVersion 基础版本
     * @type {string}
     * @memberof AdTypeUpdateRequest
     */
    'baseVersion'?: string;
    /**
     * createTime 创建时间
     * @type {string}
     * @memberof AdTypeUpdateRequest
     */
    'createTime'?: string;
    /**
     * delFlag 0-未删除，1-已删除
     * @type {number}
     * @memberof AdTypeUpdateRequest
     */
    'delFlag'?: number;
    /**
     * description 描述
     * @type {string}
     * @memberof AdTypeUpdateRequest
     */
    'description'?: string;
    /**
     * mediaId 可投媒体位集合，逗号分隔
     * @type {string}
     * @memberof AdTypeUpdateRequest
     */
    'mediaId'?: string;
    /**
     * sort 排序
     * @type {number}
     * @memberof AdTypeUpdateRequest
     */
    'sort'?: number;
    /**
     * testFlag 0-非测试，1-测试
     * @type {number}
     * @memberof AdTypeUpdateRequest
     */
    'testFlag'?: number;
    /**
     * 广告类型ID
     * @type {string}
     * @memberof AdTypeUpdateRequest
     */
    'typeId'?: string;
    /**
     * name 名称
     * @type {string}
     * @memberof AdTypeUpdateRequest
     */
    'typeName'?: string;
    /**
     * updateTime 更新时间
     * @type {string}
     * @memberof AdTypeUpdateRequest
     */
    'updateTime'?: string;
    /**
     * url 广告示例url集合，逗号分隔
     * @type {string}
     * @memberof AdTypeUpdateRequest
     */
    'url'?: string;
}
/**
 * addAdCreativeRequest
 * @export
 * @interface AddAdCreativeRequest
 */
export interface AddAdCreativeRequest {
    /**
     * 配置回调url
     * @type {string}
     * @memberof AddAdCreativeRequest
     */
    'adExposureCallBackUrl'?: string;
    /**
     * 地址组id
     * @type {string}
     * @memberof AddAdCreativeRequest
     */
    'addressGroupId'?: string;
    /**
     * 广告主id
     * @type {string}
     * @memberof AddAdCreativeRequest
     */
    'advertiserId'?: string;
    /**
     * 地址列表
     * @type {Array<AdCreativeAreaRequest>}
     * @memberof AddAdCreativeRequest
     */
    'areaList'?: Array<AdCreativeAreaRequest>;
    /**
     * 地域类型  1分组 2 省市区
     * @type {number}
     * @memberof AddAdCreativeRequest
     */
    'areaType'?: number;
    /**
     * 计费方式 1 CPM,2CPC
     * @type {number}
     * @memberof AddAdCreativeRequest
     */
    'billingType'?: number;
    /**
     * 广告创意名称
     * @type {string}
     * @memberof AddAdCreativeRequest
     */
    'creativeName'?: string;
    /**
     * 去重天数
     * @type {number}
     * @memberof AddAdCreativeRequest
     */
    'duplicateRemovalDays'?: number;
    /**
     * 结束时间
     * @type {string}
     * @memberof AddAdCreativeRequest
     */
    'endDate'?: string;
    /**
     * 行业列表
     * @type {Array<AdCreativeIndustryRequest>}
     * @memberof AddAdCreativeRequest
     */
    'industryList'?: Array<AdCreativeIndustryRequest>;
    /**
     * 是否组合广告 1是2不是
     * @type {number}
     * @memberof AddAdCreativeRequest
     */
    'isCombination'?: number;
    /**
     * 是否支持组合广告 1是2不是
     * @type {number}
     * @memberof AddAdCreativeRequest
     */
    'isSupportCombination'?: number;
    /**
     * 投放时间列表
     * @type {Array<AdCreativeTimeRequest>}
     * @memberof AddAdCreativeRequest
     */
    'list'?: Array<AdCreativeTimeRequest>;
    /**
     * 单日预算限制
     * @type {number}
     * @memberof AddAdCreativeRequest
     */
    'maxDailyBudget'?: number;
    /**
     * 媒体位id集合
     * @type {Array<string>}
     * @memberof AddAdCreativeRequest
     */
    'mediaIdList'?: Array<string>;
    /**
     * 手机id集合
     * @type {Array<string>}
     * @memberof AddAdCreativeRequest
     */
    'mobileIdList'?: Array<string>;
    /**
     * 手机系统 1全部、2安卓、3苹果
     * @type {number}
     * @memberof AddAdCreativeRequest
     */
    'mobileSystem'?: number;
    /**
     * 图片地址
     * @type {string}
     * @memberof AddAdCreativeRequest
     */
    'picture'?: string;
    /**
     * price 单价.
     * @type {number}
     * @memberof AddAdCreativeRequest
     */
    'price'?: number;
    /**
     * 开始时间
     * @type {string}
     * @memberof AddAdCreativeRequest
     */
    'startDate'?: string;
    /**
     * testFlag 0-非测试，1-测试.
     * @type {number}
     * @memberof AddAdCreativeRequest
     */
    'testFlag'?: number;
    /**
     * 广告总预算
     * @type {number}
     * @memberof AddAdCreativeRequest
     */
    'totalBudget'?: number;
    /**
     * 广告类型ID
     * @type {string}
     * @memberof AddAdCreativeRequest
     */
    'typeId'?: string;
    /**
     * 广告链接
     * @type {string}
     * @memberof AddAdCreativeRequest
     */
    'url'?: string;
    /**
     * 用户日曝光次数上限
     * @type {number}
     * @memberof AddAdCreativeRequest
     */
    'userMaxDailyExposure'?: number;
}
/**
 * AddAdPlanCreativeRequest
 * @export
 * @interface AddAdPlanCreativeRequest
 */
export interface AddAdPlanCreativeRequest {
    /**
     * 创意id
     * @type {string}
     * @memberof AddAdPlanCreativeRequest
     */
    'creativeId'?: string;
    /**
     * 是否是主广告 1-是 2-不是
     * @type {number}
     * @memberof AddAdPlanCreativeRequest
     */
    'isMainAd'?: number;
}
/**
 * addAdPlanRequest
 * @export
 * @interface AddAdPlanRequest
 */
export interface AddAdPlanRequest {
    /**
     * 地址组id
     * @type {string}
     * @memberof AddAdPlanRequest
     */
    'addressGroupId'?: string;
    /**
     * 广告主id
     * @type {string}
     * @memberof AddAdPlanRequest
     */
    'advertiserId'?: string;
    /**
     * 地址列表
     * @type {Array<AdPlanAreaRequest>}
     * @memberof AddAdPlanRequest
     */
    'areaList'?: Array<AdPlanAreaRequest>;
    /**
     * 地域类型  1分组 2 省市区
     * @type {number}
     * @memberof AddAdPlanRequest
     */
    'areaType'?: number;
    /**
     * 计费方式 1 CPM,2CPC
     * @type {number}
     * @memberof AddAdPlanRequest
     */
    'billingType'?: number;
    /**
     * 广告创意集合
     * @type {Array<AddAdPlanCreativeRequest>}
     * @memberof AddAdPlanRequest
     */
    'creativeList'?: Array<AddAdPlanCreativeRequest>;
    /**
     * 去重天数 -1表示不限
     * @type {number}
     * @memberof AddAdPlanRequest
     */
    'duplicateRemovalDays'?: number;
    /**
     * 结束时间
     * @type {string}
     * @memberof AddAdPlanRequest
     */
    'endDate'?: string;
    /**
     * 行业列表
     * @type {Array<AdPlanIndustryRequest>}
     * @memberof AddAdPlanRequest
     */
    'industryList'?: Array<AdPlanIndustryRequest>;
    /**
     * 投放时间列表
     * @type {Array<AdPlanTimeRequest>}
     * @memberof AddAdPlanRequest
     */
    'list'?: Array<AdPlanTimeRequest>;
    /**
     * 单日预算限制
     * @type {number}
     * @memberof AddAdPlanRequest
     */
    'maxDailyBudget'?: number;
    /**
     * 媒体位id集合
     * @type {Array<string>}
     * @memberof AddAdPlanRequest
     */
    'mediaIdList'?: Array<string>;
    /**
     * 手机id集合
     * @type {Array<string>}
     * @memberof AddAdPlanRequest
     */
    'mobileIdList'?: Array<string>;
    /**
     * 手机系统 1全部、2安卓、3苹果
     * @type {number}
     * @memberof AddAdPlanRequest
     */
    'mobileSystem'?: number;
    /**
     * 图片地址
     * @type {string}
     * @memberof AddAdPlanRequest
     */
    'picture'?: string;
    /**
     * 广告计划名称
     * @type {string}
     * @memberof AddAdPlanRequest
     */
    'planName'?: string;
    /**
     * price 单价.
     * @type {number}
     * @memberof AddAdPlanRequest
     */
    'planPrice'?: number;
    /**
     * 广告计划类型
     * @type {number}
     * @memberof AddAdPlanRequest
     */
    'planType'?: number;
    /**
     * 开始日期
     * @type {string}
     * @memberof AddAdPlanRequest
     */
    'startDate'?: string;
    /**
     * testFlag 0-非测试，1-测试.
     * @type {number}
     * @memberof AddAdPlanRequest
     */
    'testFlag'?: number;
    /**
     * 广告总预算
     * @type {number}
     * @memberof AddAdPlanRequest
     */
    'totalBudget'?: number;
    /**
     * 广告类型ID
     * @type {string}
     * @memberof AddAdPlanRequest
     */
    'typeId'?: string;
    /**
     * 广告链接
     * @type {string}
     * @memberof AddAdPlanRequest
     */
    'url'?: string;
    /**
     * 用户日曝光次数上限 -1表示不限
     * @type {number}
     * @memberof AddAdPlanRequest
     */
    'userMaxDailyExposure'?: number;
}
/**
 * AddressGroupAdDetailRequest
 * @export
 * @interface AddressGroupAdDetailRequest
 */
export interface AddressGroupAdDetailRequest {
    /**
     * 市邮编
     * @type {string}
     * @memberof AddressGroupAdDetailRequest
     */
    'cityCode'?: string;
    /**
     * 省邮编
     * @type {string}
     * @memberof AddressGroupAdDetailRequest
     */
    'provinceCode'?: string;
    /**
     * 区邮编
     * @type {string}
     * @memberof AddressGroupAdDetailRequest
     */
    'regionCode'?: string;
}
/**
 * AddressGroupAdDetailResponse
 * @export
 * @interface AddressGroupAdDetailResponse
 */
export interface AddressGroupAdDetailResponse {
    /**
     * 市邮编
     * @type {string}
     * @memberof AddressGroupAdDetailResponse
     */
    'cityCode'?: string;
    /**
     * 市名称
     * @type {string}
     * @memberof AddressGroupAdDetailResponse
     */
    'cityName'?: string;
    /**
     * 省邮编
     * @type {string}
     * @memberof AddressGroupAdDetailResponse
     */
    'provinceCode'?: string;
    /**
     * 省名称
     * @type {string}
     * @memberof AddressGroupAdDetailResponse
     */
    'provinceName'?: string;
    /**
     * 区邮编
     * @type {string}
     * @memberof AddressGroupAdDetailResponse
     */
    'regionCode'?: string;
    /**
     * 区名称
     * @type {string}
     * @memberof AddressGroupAdDetailResponse
     */
    'regionName'?: string;
}
/**
 * AddressGroupAdDetailTreeResponse
 * @export
 * @interface AddressGroupAdDetailTreeResponse
 */
export interface AddressGroupAdDetailTreeResponse {
    /**
     * 
     * @type {Array<AddressGroupAdDetailTreeResponse>}
     * @memberof AddressGroupAdDetailTreeResponse
     */
    'children'?: Array<AddressGroupAdDetailTreeResponse>;
    /**
     * 
     * @type {string}
     * @memberof AddressGroupAdDetailTreeResponse
     */
    'code'?: string;
    /**
     * 
     * @type {string}
     * @memberof AddressGroupAdDetailTreeResponse
     */
    'name'?: string;
}
/**
 * AddressGroupAddRequest
 * @export
 * @interface AddressGroupAddRequest
 */
export interface AddressGroupAddRequest {
    /**
     * 地址组名称
     * @type {string}
     * @memberof AddressGroupAddRequest
     */
    'addressGroupName'?: string;
    /**
     * 地址明细列表
     * @type {Array<AddressGroupAdDetailRequest>}
     * @memberof AddressGroupAddRequest
     */
    'list'?: Array<AddressGroupAdDetailRequest>;
}
/**
 * AddressGroupDeleteRequest
 * @export
 * @interface AddressGroupDeleteRequest
 */
export interface AddressGroupDeleteRequest {
    /**
     * 地址组id
     * @type {string}
     * @memberof AddressGroupDeleteRequest
     */
    'addressGroupId'?: string;
}
/**
 * AddressGroupDetailRequest
 * @export
 * @interface AddressGroupDetailRequest
 */
export interface AddressGroupDetailRequest {
    /**
     * 地址组id
     * @type {string}
     * @memberof AddressGroupDetailRequest
     */
    'addressGroupId'?: string;
}
/**
 * AddressGroupDetailResponse
 * @export
 * @interface AddressGroupDetailResponse
 */
export interface AddressGroupDetailResponse {
    /**
     * 地址组id
     * @type {string}
     * @memberof AddressGroupDetailResponse
     */
    'addressGroupId'?: string;
    /**
     * 分组名称
     * @type {string}
     * @memberof AddressGroupDetailResponse
     */
    'addressGroupName'?: string;
    /**
     * 省市区集合
     * @type {Array<AddressGroupAdDetailResponse>}
     * @memberof AddressGroupDetailResponse
     */
    'list'?: Array<AddressGroupAdDetailResponse>;
    /**
     * 省市区集合
     * @type {Array<AddressGroupAdDetailTreeResponse>}
     * @memberof AddressGroupDetailResponse
     */
    'treeList'?: Array<AddressGroupAdDetailTreeResponse>;
}
/**
 * AddressGroupPageResponse
 * @export
 * @interface AddressGroupPageResponse
 */
export interface AddressGroupPageResponse {
    /**
     * 地址组id
     * @type {string}
     * @memberof AddressGroupPageResponse
     */
    'addressGroupId'?: string;
    /**
     * 地址列表
     * @type {Array<AddressGroupAdDetailResponse>}
     * @memberof AddressGroupPageResponse
     */
    'addressGroupList'?: Array<AddressGroupAdDetailResponse>;
    /**
     * 分组名称
     * @type {string}
     * @memberof AddressGroupPageResponse
     */
    'addressGroupName'?: string;
}
/**
 * AddressGroupUpdateRequest
 * @export
 * @interface AddressGroupUpdateRequest
 */
export interface AddressGroupUpdateRequest {
    /**
     * 地址组id
     * @type {string}
     * @memberof AddressGroupUpdateRequest
     */
    'addressGroupId'?: string;
    /**
     * 名称
     * @type {string}
     * @memberof AddressGroupUpdateRequest
     */
    'addressGroupName'?: string;
    /**
     * 地址组地址明细
     * @type {Array<AddressGroupAdDetailRequest>}
     * @memberof AddressGroupUpdateRequest
     */
    'list'?: Array<AddressGroupAdDetailRequest>;
}
/**
 * adminLoginResponse
 * @export
 * @interface AdminLoginResponse
 */
export interface AdminLoginResponse {
    /**
     * 用户头像
     * @type {string}
     * @memberof AdminLoginResponse
     */
    'avatar'?: string;
    /**
     * 能名称列表
     * @type {Array<string>}
     * @memberof AdminLoginResponse
     */
    'functionList'?: Array<string>;
    /**
     * 接口路径列表
     * @type {Set<string>}
     * @memberof AdminLoginResponse
     */
    'interfaceList'?: Set<string>;
    /**
     * 工号
     * @type {string}
     * @memberof AdminLoginResponse
     */
    'jobNumber'?: string;
    /**
     * 菜单名称列表
     * @type {Array<string>}
     * @memberof AdminLoginResponse
     */
    'menuList'?: Array<string>;
    /**
     * 登陆之前的token，用于删除
     * @type {string}
     * @memberof AdminLoginResponse
     */
    'preToken'?: string;
    /**
     * 
     * @type {string}
     * @memberof AdminLoginResponse
     */
    'realName'?: string;
    /**
     * 重定向url（认证结果仅为false时返回）
     * @type {string}
     * @memberof AdminLoginResponse
     */
    'redirectUrl'?: string;
    /**
     * 角色id列表
     * @type {Array<number>}
     * @memberof AdminLoginResponse
     */
    'roleList'?: Array<number>;
    /**
     * token 登录 token.
     * @type {string}
     * @memberof AdminLoginResponse
     */
    'token'?: string;
    /**
     * adminId 管理员 id
     * @type {string}
     * @memberof AdminLoginResponse
     */
    'unionid'?: string;
}
/**
 * AdvertiserAddRequest
 * @export
 * @interface AdvertiserAddRequest
 */
export interface AdvertiserAddRequest {
    /**
     * accountOpeningPermit 开户许可证
     * @type {string}
     * @memberof AdvertiserAddRequest
     */
    'accountOpeningPermit'?: string;
    /**
     * address 地址
     * @type {string}
     * @memberof AdvertiserAddRequest
     */
    'address'?: string;
    /**
     * applyTime 申请时间
     * @type {number}
     * @memberof AdvertiserAddRequest
     */
    'applyTime'?: number;
    /**
     * auditStatus 审核状态
     * @type {number}
     * @memberof AdvertiserAddRequest
     */
    'auditStatus'?: number;
    /**
     * auditTime 审核时间
     * @type {number}
     * @memberof AdvertiserAddRequest
     */
    'auditTime'?: number;
    /**
     * businessLicense 营业执照
     * @type {string}
     * @memberof AdvertiserAddRequest
     */
    'businessLicense'?: string;
    /**
     * cityCode 市邮编
     * @type {string}
     * @memberof AdvertiserAddRequest
     */
    'cityCode'?: string;
    /**
     * companyName 公司名称
     * @type {string}
     * @memberof AdvertiserAddRequest
     */
    'companyName'?: string;
    /**
     * createTime 创建时间
     * @type {string}
     * @memberof AdvertiserAddRequest
     */
    'createTime'?: string;
    /**
     * delFlag 0-未删除，1-已删除
     * @type {number}
     * @memberof AdvertiserAddRequest
     */
    'delFlag'?: number;
    /**
     * depositBank 开户行
     * @type {string}
     * @memberof AdvertiserAddRequest
     */
    'depositBank'?: string;
    /**
     * depositBankAccount 开户行账号
     * @type {string}
     * @memberof AdvertiserAddRequest
     */
    'depositBankAccount'?: string;
    /**
     * email 邮箱
     * @type {string}
     * @memberof AdvertiserAddRequest
     */
    'email'?: string;
    /**
     * invoiceCompany 开票公司
     * @type {string}
     * @memberof AdvertiserAddRequest
     */
    'invoiceCompany'?: string;
    /**
     * invoiceCompanyAddress 开票公司地址
     * @type {string}
     * @memberof AdvertiserAddRequest
     */
    'invoiceCompanyAddress'?: string;
    /**
     * invoiceContent 开票内容
     * @type {string}
     * @memberof AdvertiserAddRequest
     */
    'invoiceContent'?: string;
    /**
     * invoiceTel 开票电话
     * @type {string}
     * @memberof AdvertiserAddRequest
     */
    'invoiceTel'?: string;
    /**
     * invoiceType 账户类型 1-增值税专用发票/2-增值税普通发票
     * @type {number}
     * @memberof AdvertiserAddRequest
     */
    'invoiceType'?: number;
    /**
     * name 联系人
     * @type {string}
     * @memberof AdvertiserAddRequest
     */
    'name'?: string;
    /**
     * password 密码
     * @type {string}
     * @memberof AdvertiserAddRequest
     */
    'password'?: string;
    /**
     * phone 联系电话
     * @type {string}
     * @memberof AdvertiserAddRequest
     */
    'phone'?: string;
    /**
     * provinceCode 省邮编
     * @type {string}
     * @memberof AdvertiserAddRequest
     */
    'provinceCode'?: string;
    /**
     * reason 拒绝原因
     * @type {string}
     * @memberof AdvertiserAddRequest
     */
    'reason'?: string;
    /**
     * regionCode 区邮编
     * @type {string}
     * @memberof AdvertiserAddRequest
     */
    'regionCode'?: string;
    /**
     * remark 备注
     * @type {string}
     * @memberof AdvertiserAddRequest
     */
    'remark'?: string;
    /**
     * shortName 简称
     * @type {string}
     * @memberof AdvertiserAddRequest
     */
    'shortName'?: string;
    /**
     * taxpayerIdentificationNumber 纳税人识别号
     * @type {string}
     * @memberof AdvertiserAddRequest
     */
    'taxpayerIdentificationNumber'?: string;
    /**
     * updateTime 更新时间
     * @type {string}
     * @memberof AdvertiserAddRequest
     */
    'updateTime'?: string;
}
/**
 * AdvertiserDeleteRequest
 * @export
 * @interface AdvertiserDeleteRequest
 */
export interface AdvertiserDeleteRequest {
    /**
     * advertiserId 广告主标识
     * @type {string}
     * @memberof AdvertiserDeleteRequest
     */
    'advertiserId'?: string;
}
/**
 * AdvertiserDetailRequest
 * @export
 * @interface AdvertiserDetailRequest
 */
export interface AdvertiserDetailRequest {
    /**
     * advertiserId 广告主标识
     * @type {string}
     * @memberof AdvertiserDetailRequest
     */
    'advertiserId'?: string;
}
/**
 * AdvertiserDetailResponse
 * @export
 * @interface AdvertiserDetailResponse
 */
export interface AdvertiserDetailResponse {
    /**
     * accountOpeningPermit 开户许可证
     * @type {string}
     * @memberof AdvertiserDetailResponse
     */
    'accountOpeningPermit'?: string;
    /**
     * address 地址
     * @type {string}
     * @memberof AdvertiserDetailResponse
     */
    'address'?: string;
    /**
     * advertiserId 广告主标识
     * @type {string}
     * @memberof AdvertiserDetailResponse
     */
    'advertiserId'?: string;
    /**
     * applyTime 申请时间
     * @type {number}
     * @memberof AdvertiserDetailResponse
     */
    'applyTime'?: number;
    /**
     * auditStatus 审核状态
     * @type {number}
     * @memberof AdvertiserDetailResponse
     */
    'auditStatus'?: number;
    /**
     * auditTime 审核时间
     * @type {number}
     * @memberof AdvertiserDetailResponse
     */
    'auditTime'?: number;
    /**
     * businessLicense 营业执照
     * @type {string}
     * @memberof AdvertiserDetailResponse
     */
    'businessLicense'?: string;
    /**
     * cityCode 市邮编
     * @type {string}
     * @memberof AdvertiserDetailResponse
     */
    'cityCode'?: string;
    /**
     * companyName 公司名称
     * @type {string}
     * @memberof AdvertiserDetailResponse
     */
    'companyName'?: string;
    /**
     * createTime 创建时间
     * @type {string}
     * @memberof AdvertiserDetailResponse
     */
    'createTime'?: string;
    /**
     * delFlag 0-未删除，1-已删除
     * @type {number}
     * @memberof AdvertiserDetailResponse
     */
    'delFlag'?: number;
    /**
     * depositBank 开户行
     * @type {string}
     * @memberof AdvertiserDetailResponse
     */
    'depositBank'?: string;
    /**
     * depositBankAccount 开户行账号
     * @type {string}
     * @memberof AdvertiserDetailResponse
     */
    'depositBankAccount'?: string;
    /**
     * email 邮箱
     * @type {string}
     * @memberof AdvertiserDetailResponse
     */
    'email'?: string;
    /**
     * fullAddress 地址全称
     * @type {string}
     * @memberof AdvertiserDetailResponse
     */
    'fullAddress'?: string;
    /**
     * invoiceCompany 开票公司
     * @type {string}
     * @memberof AdvertiserDetailResponse
     */
    'invoiceCompany'?: string;
    /**
     * invoiceCompanyAddress 开票公司地址
     * @type {string}
     * @memberof AdvertiserDetailResponse
     */
    'invoiceCompanyAddress'?: string;
    /**
     * invoiceContent 开票内容
     * @type {string}
     * @memberof AdvertiserDetailResponse
     */
    'invoiceContent'?: string;
    /**
     * invoiceTel 开票电话
     * @type {string}
     * @memberof AdvertiserDetailResponse
     */
    'invoiceTel'?: string;
    /**
     * invoiceType 账户类型 1-增值税专用发票/2-增值税普通发票
     * @type {number}
     * @memberof AdvertiserDetailResponse
     */
    'invoiceType'?: number;
    /**
     * name 联系人
     * @type {string}
     * @memberof AdvertiserDetailResponse
     */
    'name'?: string;
    /**
     * phone 联系电话
     * @type {string}
     * @memberof AdvertiserDetailResponse
     */
    'phone'?: string;
    /**
     * provinceCode 省邮编
     * @type {string}
     * @memberof AdvertiserDetailResponse
     */
    'provinceCode'?: string;
    /**
     * reason 拒绝原因
     * @type {string}
     * @memberof AdvertiserDetailResponse
     */
    'reason'?: string;
    /**
     * regionCode 区邮编
     * @type {string}
     * @memberof AdvertiserDetailResponse
     */
    'regionCode'?: string;
    /**
     * remark 备注
     * @type {string}
     * @memberof AdvertiserDetailResponse
     */
    'remark'?: string;
    /**
     * shortName 简称
     * @type {string}
     * @memberof AdvertiserDetailResponse
     */
    'shortName'?: string;
    /**
     * taxpayerIdentificationNumber 纳税人识别号
     * @type {string}
     * @memberof AdvertiserDetailResponse
     */
    'taxpayerIdentificationNumber'?: string;
    /**
     * updateTime 更新时间
     * @type {string}
     * @memberof AdvertiserDetailResponse
     */
    'updateTime'?: string;
}
/**
 * AdvertiserPageRequest
 * @export
 * @interface AdvertiserPageRequest
 */
export interface AdvertiserPageRequest {
    /**
     * 结束日期
     * @type {string}
     * @memberof AdvertiserPageRequest
     */
    'endDate'?: string;
    /**
     * 短名称
     * @type {string}
     * @memberof AdvertiserPageRequest
     */
    'shortName'?: string;
    /**
     * 开始日期
     * @type {string}
     * @memberof AdvertiserPageRequest
     */
    'startDate'?: string;
}
/**
 * AdvertiserPageResponse
 * @export
 * @interface AdvertiserPageResponse
 */
export interface AdvertiserPageResponse {
    /**
     * 广告主ID
     * @type {string}
     * @memberof AdvertiserPageResponse
     */
    'advertiserId'?: string;
    /**
     * 公司名
     * @type {string}
     * @memberof AdvertiserPageResponse
     */
    'companyName'?: string;
    /**
     * 创建日期
     * @type {string}
     * @memberof AdvertiserPageResponse
     */
    'createTime'?: string;
    /**
     * 联系人
     * @type {string}
     * @memberof AdvertiserPageResponse
     */
    'name'?: string;
    /**
     * 联系电话
     * @type {string}
     * @memberof AdvertiserPageResponse
     */
    'phone'?: string;
    /**
     * 简称
     * @type {string}
     * @memberof AdvertiserPageResponse
     */
    'shortName'?: string;
}
/**
 * AdvertiserUpdateRequest
 * @export
 * @interface AdvertiserUpdateRequest
 */
export interface AdvertiserUpdateRequest {
    /**
     * accountOpeningPermit 开户许可证
     * @type {string}
     * @memberof AdvertiserUpdateRequest
     */
    'accountOpeningPermit'?: string;
    /**
     * address 地址
     * @type {string}
     * @memberof AdvertiserUpdateRequest
     */
    'address'?: string;
    /**
     * advertiserId 广告主标识
     * @type {string}
     * @memberof AdvertiserUpdateRequest
     */
    'advertiserId'?: string;
    /**
     * applyTime 申请时间
     * @type {number}
     * @memberof AdvertiserUpdateRequest
     */
    'applyTime'?: number;
    /**
     * auditStatus 审核状态
     * @type {number}
     * @memberof AdvertiserUpdateRequest
     */
    'auditStatus'?: number;
    /**
     * auditTime 审核时间
     * @type {number}
     * @memberof AdvertiserUpdateRequest
     */
    'auditTime'?: number;
    /**
     * businessLicense 营业执照
     * @type {string}
     * @memberof AdvertiserUpdateRequest
     */
    'businessLicense'?: string;
    /**
     * cityCode 市邮编
     * @type {string}
     * @memberof AdvertiserUpdateRequest
     */
    'cityCode'?: string;
    /**
     * companyName 公司名称
     * @type {string}
     * @memberof AdvertiserUpdateRequest
     */
    'companyName'?: string;
    /**
     * createTime 创建时间
     * @type {string}
     * @memberof AdvertiserUpdateRequest
     */
    'createTime'?: string;
    /**
     * delFlag 0-未删除，1-已删除
     * @type {number}
     * @memberof AdvertiserUpdateRequest
     */
    'delFlag'?: number;
    /**
     * depositBank 开户行
     * @type {string}
     * @memberof AdvertiserUpdateRequest
     */
    'depositBank'?: string;
    /**
     * depositBankAccount 开户行账号
     * @type {string}
     * @memberof AdvertiserUpdateRequest
     */
    'depositBankAccount'?: string;
    /**
     * email 邮箱
     * @type {string}
     * @memberof AdvertiserUpdateRequest
     */
    'email'?: string;
    /**
     * invoiceCompany 开票公司
     * @type {string}
     * @memberof AdvertiserUpdateRequest
     */
    'invoiceCompany'?: string;
    /**
     * invoiceCompanyAddress 开票公司地址
     * @type {string}
     * @memberof AdvertiserUpdateRequest
     */
    'invoiceCompanyAddress'?: string;
    /**
     * invoiceContent 开票内容
     * @type {string}
     * @memberof AdvertiserUpdateRequest
     */
    'invoiceContent'?: string;
    /**
     * invoiceTel 开票电话
     * @type {string}
     * @memberof AdvertiserUpdateRequest
     */
    'invoiceTel'?: string;
    /**
     * invoiceType 账户类型 1-增值税专用发票/2-增值税普通发票
     * @type {number}
     * @memberof AdvertiserUpdateRequest
     */
    'invoiceType'?: number;
    /**
     * name 联系人
     * @type {string}
     * @memberof AdvertiserUpdateRequest
     */
    'name'?: string;
    /**
     * password 密码
     * @type {string}
     * @memberof AdvertiserUpdateRequest
     */
    'password'?: string;
    /**
     * phone 联系电话
     * @type {string}
     * @memberof AdvertiserUpdateRequest
     */
    'phone'?: string;
    /**
     * provinceCode 省邮编
     * @type {string}
     * @memberof AdvertiserUpdateRequest
     */
    'provinceCode'?: string;
    /**
     * reason 拒绝原因
     * @type {string}
     * @memberof AdvertiserUpdateRequest
     */
    'reason'?: string;
    /**
     * regionCode 区邮编
     * @type {string}
     * @memberof AdvertiserUpdateRequest
     */
    'regionCode'?: string;
    /**
     * remark 备注
     * @type {string}
     * @memberof AdvertiserUpdateRequest
     */
    'remark'?: string;
    /**
     * shortName 简称
     * @type {string}
     * @memberof AdvertiserUpdateRequest
     */
    'shortName'?: string;
    /**
     * taxpayerIdentificationNumber 纳税人识别号
     * @type {string}
     * @memberof AdvertiserUpdateRequest
     */
    'taxpayerIdentificationNumber'?: string;
    /**
     * updateTime 更新时间
     * @type {string}
     * @memberof AdvertiserUpdateRequest
     */
    'updateTime'?: string;
}
/**
 * AliyunOssTokenRequest
 * @export
 * @interface AliyunOssTokenRequest
 */
export interface AliyunOssTokenRequest {
    /**
     * 目录
     * @type {string}
     * @memberof AliyunOssTokenRequest
     */
    'dir'?: string;
    /**
     * 是否私有
     * @type {boolean}
     * @memberof AliyunOssTokenRequest
     */
    'enablePrivate'?: boolean;
    /**
     * 是否开启 https
     * @type {boolean}
     * @memberof AliyunOssTokenRequest
     */
    'enableSsl'?: boolean;
}
/**
 * AliyunOssTokenResponse
 * @export
 * @interface AliyunOssTokenResponse
 */
export interface AliyunOssTokenResponse {
    /**
     * 访问id
     * @type {string}
     * @memberof AliyunOssTokenResponse
     */
    'accessId'?: string;
    /**
     * 目录
     * @type {string}
     * @memberof AliyunOssTokenResponse
     */
    'dir'?: string;
    /**
     * 到期
     * @type {string}
     * @memberof AliyunOssTokenResponse
     */
    'expire'?: string;
    /**
     * 宿主
     * @type {string}
     * @memberof AliyunOssTokenResponse
     */
    'host'?: string;
    /**
     * 政策
     * @type {string}
     * @memberof AliyunOssTokenResponse
     */
    'policy'?: string;
    /**
     * 签名
     * @type {string}
     * @memberof AliyunOssTokenResponse
     */
    'signature'?: string;
}
/**
 * DeleteAdCreativeRequest
 * @export
 * @interface DeleteAdCreativeRequest
 */
export interface DeleteAdCreativeRequest {
    /**
     * 广告创意ID
     * @type {string}
     * @memberof DeleteAdCreativeRequest
     */
    'creativeId'?: string;
}
/**
 * deleteAdPlanRequest
 * @export
 * @interface DeleteAdPlanRequest
 */
export interface DeleteAdPlanRequest {
    /**
     * 广告创意id
     * @type {string}
     * @memberof DeleteAdPlanRequest
     */
    'planId'?: string;
}
/**
 * deleteCheckAdCreativeRequest
 * @export
 * @interface DeleteCheckAdCreativeRequest
 */
export interface DeleteCheckAdCreativeRequest {
    /**
     * 广告创意id
     * @type {string}
     * @memberof DeleteCheckAdCreativeRequest
     */
    'creativeId'?: string;
}
/**
 * deleteCheckAdCreativeResponse
 * @export
 * @interface DeleteCheckAdCreativeResponse
 */
export interface DeleteCheckAdCreativeResponse {
    /**
     * 在跑广告计划数量
     * @type {number}
     * @memberof DeleteCheckAdCreativeResponse
     */
    'count'?: number;
}
/**
 * DeleteCheckAdPlanRequest
 * @export
 * @interface DeleteCheckAdPlanRequest
 */
export interface DeleteCheckAdPlanRequest {
    /**
     * 广告计划ID
     * @type {string}
     * @memberof DeleteCheckAdPlanRequest
     */
    'planId'?: string;
}
/**
 * FlowMasterAddRequest
 * @export
 * @interface FlowMasterAddRequest
 */
export interface FlowMasterAddRequest {
    /**
     * accountOpeningPermit 开户许可证
     * @type {string}
     * @memberof FlowMasterAddRequest
     */
    'accountOpeningPermit'?: string;
    /**
     * address 地址
     * @type {string}
     * @memberof FlowMasterAddRequest
     */
    'address'?: string;
    /**
     * applyTime 申请时间
     * @type {number}
     * @memberof FlowMasterAddRequest
     */
    'applyTime'?: number;
    /**
     * auditStatus 审核状态
     * @type {number}
     * @memberof FlowMasterAddRequest
     */
    'auditStatus'?: number;
    /**
     * auditTime 审核时间
     * @type {number}
     * @memberof FlowMasterAddRequest
     */
    'auditTime'?: number;
    /**
     * businessLicense 营业执照
     * @type {string}
     * @memberof FlowMasterAddRequest
     */
    'businessLicense'?: string;
    /**
     * cityCode 市邮编
     * @type {string}
     * @memberof FlowMasterAddRequest
     */
    'cityCode'?: string;
    /**
     * companyName 公司名称
     * @type {string}
     * @memberof FlowMasterAddRequest
     */
    'companyName'?: string;
    /**
     * createTime 创建时间
     * @type {string}
     * @memberof FlowMasterAddRequest
     */
    'createTime'?: string;
    /**
     * delFlag 0-未删除，1-已删除
     * @type {number}
     * @memberof FlowMasterAddRequest
     */
    'delFlag'?: number;
    /**
     * email 邮箱
     * @type {string}
     * @memberof FlowMasterAddRequest
     */
    'email'?: string;
    /**
     * name 联系人
     * @type {string}
     * @memberof FlowMasterAddRequest
     */
    'name'?: string;
    /**
     * password 密码
     * @type {string}
     * @memberof FlowMasterAddRequest
     */
    'password'?: string;
    /**
     * phone 联系电话
     * @type {string}
     * @memberof FlowMasterAddRequest
     */
    'phone'?: string;
    /**
     * provinceCode 省邮编
     * @type {string}
     * @memberof FlowMasterAddRequest
     */
    'provinceCode'?: string;
    /**
     * reason 拒绝原因
     * @type {string}
     * @memberof FlowMasterAddRequest
     */
    'reason'?: string;
    /**
     * regionCode 区邮编
     * @type {string}
     * @memberof FlowMasterAddRequest
     */
    'regionCode'?: string;
    /**
     * remark 备注
     * @type {string}
     * @memberof FlowMasterAddRequest
     */
    'remark'?: string;
    /**
     * shortName 简称
     * @type {string}
     * @memberof FlowMasterAddRequest
     */
    'shortName'?: string;
    /**
     * updateTime 更新时间
     * @type {string}
     * @memberof FlowMasterAddRequest
     */
    'updateTime'?: string;
}
/**
 * FlowMasterDeleteRequest
 * @export
 * @interface FlowMasterDeleteRequest
 */
export interface FlowMasterDeleteRequest {
    /**
     * flowMasterId 流量主id
     * @type {string}
     * @memberof FlowMasterDeleteRequest
     */
    'flowMasterId'?: string;
}
/**
 * FlowMasterDetailRequest
 * @export
 * @interface FlowMasterDetailRequest
 */
export interface FlowMasterDetailRequest {
    /**
     * flowMasterId 流量主id
     * @type {string}
     * @memberof FlowMasterDetailRequest
     */
    'flowMasterId'?: string;
}
/**
 * FlowMasterDetailResponse
 * @export
 * @interface FlowMasterDetailResponse
 */
export interface FlowMasterDetailResponse {
    /**
     * accountOpeningPermit 开户许可证
     * @type {string}
     * @memberof FlowMasterDetailResponse
     */
    'accountOpeningPermit'?: string;
    /**
     * address 地址
     * @type {string}
     * @memberof FlowMasterDetailResponse
     */
    'address'?: string;
    /**
     * applyTime 申请时间
     * @type {number}
     * @memberof FlowMasterDetailResponse
     */
    'applyTime'?: number;
    /**
     * auditStatus 审核状态
     * @type {number}
     * @memberof FlowMasterDetailResponse
     */
    'auditStatus'?: number;
    /**
     * auditTime 审核时间
     * @type {number}
     * @memberof FlowMasterDetailResponse
     */
    'auditTime'?: number;
    /**
     * businessLicense 营业执照
     * @type {string}
     * @memberof FlowMasterDetailResponse
     */
    'businessLicense'?: string;
    /**
     * cityCode 市邮编
     * @type {string}
     * @memberof FlowMasterDetailResponse
     */
    'cityCode'?: string;
    /**
     * companyName 公司名称
     * @type {string}
     * @memberof FlowMasterDetailResponse
     */
    'companyName'?: string;
    /**
     * createTime 创建时间
     * @type {string}
     * @memberof FlowMasterDetailResponse
     */
    'createTime'?: string;
    /**
     * delFlag 0-未删除，1-已删除
     * @type {number}
     * @memberof FlowMasterDetailResponse
     */
    'delFlag'?: number;
    /**
     * email 邮箱
     * @type {string}
     * @memberof FlowMasterDetailResponse
     */
    'email'?: string;
    /**
     * flowMasterId 流量主id
     * @type {string}
     * @memberof FlowMasterDetailResponse
     */
    'flowMasterId'?: string;
    /**
     * fullAddress 地址全称
     * @type {string}
     * @memberof FlowMasterDetailResponse
     */
    'fullAddress'?: string;
    /**
     * name 联系人
     * @type {string}
     * @memberof FlowMasterDetailResponse
     */
    'name'?: string;
    /**
     * phone 联系电话
     * @type {string}
     * @memberof FlowMasterDetailResponse
     */
    'phone'?: string;
    /**
     * provinceCode 省邮编
     * @type {string}
     * @memberof FlowMasterDetailResponse
     */
    'provinceCode'?: string;
    /**
     * reason 拒绝原因
     * @type {string}
     * @memberof FlowMasterDetailResponse
     */
    'reason'?: string;
    /**
     * regionCode 区邮编
     * @type {string}
     * @memberof FlowMasterDetailResponse
     */
    'regionCode'?: string;
    /**
     * remark 备注
     * @type {string}
     * @memberof FlowMasterDetailResponse
     */
    'remark'?: string;
    /**
     * shortName 简称
     * @type {string}
     * @memberof FlowMasterDetailResponse
     */
    'shortName'?: string;
    /**
     * updateTime 更新时间
     * @type {string}
     * @memberof FlowMasterDetailResponse
     */
    'updateTime'?: string;
}
/**
 * FlowMasterPageRequest
 * @export
 * @interface FlowMasterPageRequest
 */
export interface FlowMasterPageRequest {
    /**
     * 结束日期
     * @type {string}
     * @memberof FlowMasterPageRequest
     */
    'endDate'?: string;
    /**
     * 简称
     * @type {string}
     * @memberof FlowMasterPageRequest
     */
    'shortName'?: string;
    /**
     * 开始日期
     * @type {string}
     * @memberof FlowMasterPageRequest
     */
    'startDate'?: string;
}
/**
 * FlowMasterPageResponse
 * @export
 * @interface FlowMasterPageResponse
 */
export interface FlowMasterPageResponse {
    /**
     * 公司名
     * @type {string}
     * @memberof FlowMasterPageResponse
     */
    'companyName'?: string;
    /**
     * 创建时间
     * @type {string}
     * @memberof FlowMasterPageResponse
     */
    'createTime'?: string;
    /**
     * flowMasterId 流量主id
     * @type {string}
     * @memberof FlowMasterPageResponse
     */
    'flowMasterId'?: string;
    /**
     * 联系人
     * @type {string}
     * @memberof FlowMasterPageResponse
     */
    'name'?: string;
    /**
     * 联系电话
     * @type {string}
     * @memberof FlowMasterPageResponse
     */
    'phone'?: string;
    /**
     * 简称
     * @type {string}
     * @memberof FlowMasterPageResponse
     */
    'shortName'?: string;
}
/**
 * FlowMasterUpdateRequest
 * @export
 * @interface FlowMasterUpdateRequest
 */
export interface FlowMasterUpdateRequest {
    /**
     * accountOpeningPermit 开户许可证
     * @type {string}
     * @memberof FlowMasterUpdateRequest
     */
    'accountOpeningPermit'?: string;
    /**
     * address 地址
     * @type {string}
     * @memberof FlowMasterUpdateRequest
     */
    'address'?: string;
    /**
     * applyTime 申请时间
     * @type {number}
     * @memberof FlowMasterUpdateRequest
     */
    'applyTime'?: number;
    /**
     * auditStatus 审核状态
     * @type {number}
     * @memberof FlowMasterUpdateRequest
     */
    'auditStatus'?: number;
    /**
     * auditTime 审核时间
     * @type {number}
     * @memberof FlowMasterUpdateRequest
     */
    'auditTime'?: number;
    /**
     * businessLicense 营业执照
     * @type {string}
     * @memberof FlowMasterUpdateRequest
     */
    'businessLicense'?: string;
    /**
     * cityCode 市邮编
     * @type {string}
     * @memberof FlowMasterUpdateRequest
     */
    'cityCode'?: string;
    /**
     * companyName 公司名称
     * @type {string}
     * @memberof FlowMasterUpdateRequest
     */
    'companyName'?: string;
    /**
     * createTime 创建时间
     * @type {string}
     * @memberof FlowMasterUpdateRequest
     */
    'createTime'?: string;
    /**
     * delFlag 0-未删除，1-已删除
     * @type {number}
     * @memberof FlowMasterUpdateRequest
     */
    'delFlag'?: number;
    /**
     * email 邮箱
     * @type {string}
     * @memberof FlowMasterUpdateRequest
     */
    'email'?: string;
    /**
     * flowMasterId 流量主id
     * @type {string}
     * @memberof FlowMasterUpdateRequest
     */
    'flowMasterId'?: string;
    /**
     * name 联系人
     * @type {string}
     * @memberof FlowMasterUpdateRequest
     */
    'name'?: string;
    /**
     * password 密码
     * @type {string}
     * @memberof FlowMasterUpdateRequest
     */
    'password'?: string;
    /**
     * phone 联系电话
     * @type {string}
     * @memberof FlowMasterUpdateRequest
     */
    'phone'?: string;
    /**
     * provinceCode 省邮编
     * @type {string}
     * @memberof FlowMasterUpdateRequest
     */
    'provinceCode'?: string;
    /**
     * reason 拒绝原因
     * @type {string}
     * @memberof FlowMasterUpdateRequest
     */
    'reason'?: string;
    /**
     * regionCode 区邮编
     * @type {string}
     * @memberof FlowMasterUpdateRequest
     */
    'regionCode'?: string;
    /**
     * remark 备注
     * @type {string}
     * @memberof FlowMasterUpdateRequest
     */
    'remark'?: string;
    /**
     * shortName 简称
     * @type {string}
     * @memberof FlowMasterUpdateRequest
     */
    'shortName'?: string;
    /**
     * updateTime 更新时间
     * @type {string}
     * @memberof FlowMasterUpdateRequest
     */
    'updateTime'?: string;
}
/**
 * GaodeAddressListRequest
 * @export
 * @interface GaodeAddressListRequest
 */
export interface GaodeAddressListRequest {
    /**
     * 市
     * @type {string}
     * @memberof GaodeAddressListRequest
     */
    'city'?: string;
    /**
     * 0 省 1 市 2 区
     * @type {number}
     * @memberof GaodeAddressListRequest
     */
    'level'?: number;
    /**
     * 省
     * @type {string}
     * @memberof GaodeAddressListRequest
     */
    'province'?: string;
}
/**
 * GaodeCodeListResponse
 * @export
 * @interface GaodeCodeListResponse
 */
export interface GaodeCodeListResponse {
    /**
     * 孩子们
     * @type {Array<GaodeCodeListResponse>}
     * @memberof GaodeCodeListResponse
     */
    'children'?: Array<GaodeCodeListResponse>;
    /**
     * city 所属市.
     * @type {string}
     * @memberof GaodeCodeListResponse
     */
    'city'?: string;
    /**
     * code 城市编码.
     * @type {string}
     * @memberof GaodeCodeListResponse
     */
    'code'?: string;
    /**
     * id ID
     * @type {number}
     * @memberof GaodeCodeListResponse
     */
    'id'?: number;
    /**
     * isShow 1 显示 0 隐藏.
     * @type {number}
     * @memberof GaodeCodeListResponse
     */
    'isShow'?: number;
    /**
     * level 0 省 1 市 2 区.
     * @type {number}
     * @memberof GaodeCodeListResponse
     */
    'level'?: number;
    /**
     * name 名称.
     * @type {string}
     * @memberof GaodeCodeListResponse
     */
    'name'?: string;
    /**
     * province 所属省.
     * @type {string}
     * @memberof GaodeCodeListResponse
     */
    'province'?: string;
    /**
     * sort 排序.
     * @type {number}
     * @memberof GaodeCodeListResponse
     */
    'sort'?: number;
}
/**
 * GaodeCodeResponse
 * @export
 * @interface GaodeCodeResponse
 */
export interface GaodeCodeResponse {
    /**
     * 高德省市区列表
     * @type {Array<GaodeCodeListResponse>}
     * @memberof GaodeCodeResponse
     */
    'list'?: Array<GaodeCodeListResponse>;
}
/**
 * IndustryAddRequest
 * @export
 * @interface IndustryAddRequest
 */
export interface IndustryAddRequest {
    /**
     * 级别 1:一级类目 2:二级类目
     * @type {number}
     * @memberof IndustryAddRequest
     */
    'level'?: number;
    /**
     * 分类名称
     * @type {string}
     * @memberof IndustryAddRequest
     */
    'name'?: string;
    /**
     * 父类id
     * @type {number}
     * @memberof IndustryAddRequest
     */
    'parentId'?: number;
}
/**
 * IndustryDeleteRequest
 * @export
 * @interface IndustryDeleteRequest
 */
export interface IndustryDeleteRequest {
    /**
     * 广告投放行业id
     * @type {number}
     * @memberof IndustryDeleteRequest
     */
    'id'?: number;
}
/**
 * IndustryDetailRequest
 * @export
 * @interface IndustryDetailRequest
 */
export interface IndustryDetailRequest {
    /**
     * 广告投放行业id
     * @type {number}
     * @memberof IndustryDetailRequest
     */
    'id'?: number;
}
/**
 * IndustryDetailResponse
 * @export
 * @interface IndustryDetailResponse
 */
export interface IndustryDetailResponse {
    /**
     * 广告投放行业id
     * @type {number}
     * @memberof IndustryDetailResponse
     */
    'id'?: number;
    /**
     * 名称拼接
     * @type {string}
     * @memberof IndustryDetailResponse
     */
    'name'?: string;
    /**
     * 一级id
     * @type {number}
     * @memberof IndustryDetailResponse
     */
    'primaryId'?: number;
    /**
     * 一级名称
     * @type {string}
     * @memberof IndustryDetailResponse
     */
    'primaryName'?: string;
    /**
     * 二级id
     * @type {number}
     * @memberof IndustryDetailResponse
     */
    'secondId'?: number;
    /**
     * 二级名称
     * @type {string}
     * @memberof IndustryDetailResponse
     */
    'secondName'?: string;
    /**
     * 三级id
     * @type {number}
     * @memberof IndustryDetailResponse
     */
    'tertiaryId'?: number;
    /**
     * 三级名称
     * @type {string}
     * @memberof IndustryDetailResponse
     */
    'tertiaryName'?: string;
}
/**
 * IndustryListResponse
 * @export
 * @interface IndustryListResponse
 */
export interface IndustryListResponse {
    /**
     * 广告投放行业列表
     * @type {Array<IndustryPageResponse>}
     * @memberof IndustryListResponse
     */
    'list'?: Array<IndustryPageResponse>;
}
/**
 * IndustryPageResponse
 * @export
 * @interface IndustryPageResponse
 */
export interface IndustryPageResponse {
    /**
     * 子项
     * @type {Array<IndustryPageResponse>}
     * @memberof IndustryPageResponse
     */
    'children'?: Array<IndustryPageResponse>;
    /**
     * 广告投放行业id
     * @type {number}
     * @memberof IndustryPageResponse
     */
    'id'?: number;
    /**
     * 行业名称
     * @type {string}
     * @memberof IndustryPageResponse
     */
    'name'?: string;
    /**
     * 父类id
     * @type {number}
     * @memberof IndustryPageResponse
     */
    'parentId'?: number;
}
/**
 * IndustryUpdateRequest
 * @export
 * @interface IndustryUpdateRequest
 */
export interface IndustryUpdateRequest {
    /**
     * 广告投放行业id
     * @type {number}
     * @memberof IndustryUpdateRequest
     */
    'id'?: number;
    /**
     * 级别 1:一级类目 2:二级类目
     * @type {number}
     * @memberof IndustryUpdateRequest
     */
    'level'?: number;
    /**
     * 分类名称
     * @type {string}
     * @memberof IndustryUpdateRequest
     */
    'name'?: string;
    /**
     * 父类id
     * @type {number}
     * @memberof IndustryUpdateRequest
     */
    'parentId'?: number;
}
/**
 * MobileAddRequest
 * @export
 * @interface MobileAddRequest
 */
export interface MobileAddRequest {
    /**
     * brand 品牌
     * @type {string}
     * @memberof MobileAddRequest
     */
    'brand'?: string;
    /**
     * mobileSystem 手机系统 2安卓、3苹果
     * @type {number}
     * @memberof MobileAddRequest
     */
    'mobileSystem'?: number;
}
/**
 * MobileDeleteRequest
 * @export
 * @interface MobileDeleteRequest
 */
export interface MobileDeleteRequest {
    /**
     * 手机品牌id
     * @type {string}
     * @memberof MobileDeleteRequest
     */
    'mobileId'?: string;
}
/**
 * MobileDetailRequest
 * @export
 * @interface MobileDetailRequest
 */
export interface MobileDetailRequest {
    /**
     * 手机品牌id
     * @type {string}
     * @memberof MobileDetailRequest
     */
    'mobileId'?: string;
}
/**
 * MobileDetailResponse
 * @export
 * @interface MobileDetailResponse
 */
export interface MobileDetailResponse {
    /**
     * brand 品牌
     * @type {string}
     * @memberof MobileDetailResponse
     */
    'brand'?: string;
    /**
     * 手机品牌id
     * @type {string}
     * @memberof MobileDetailResponse
     */
    'mobileId'?: string;
    /**
     * mobileSystem 手机系统 2安卓、3苹果
     * @type {number}
     * @memberof MobileDetailResponse
     */
    'mobileSystem'?: number;
}
/**
 * MobilePageRequest
 * @export
 * @interface MobilePageRequest
 */
export interface MobilePageRequest {
    /**
     * 手机系统 1全部  2安卓  3ios
     * @type {number}
     * @memberof MobilePageRequest
     */
    'mobileSystem'?: number;
}
/**
 * MobilePageResponse
 * @export
 * @interface MobilePageResponse
 */
export interface MobilePageResponse {
    /**
     * brand 品牌
     * @type {string}
     * @memberof MobilePageResponse
     */
    'brand'?: string;
    /**
     * delFlag 0-未删除，1-已删除
     * @type {number}
     * @memberof MobilePageResponse
     */
    'delFlag'?: number;
    /**
     * 手机品牌id
     * @type {string}
     * @memberof MobilePageResponse
     */
    'mobileId'?: string;
    /**
     * mobileSystem 手机系统 2安卓、3苹果
     * @type {number}
     * @memberof MobilePageResponse
     */
    'mobileSystem'?: number;
}
/**
 * MobileUpdateRequest
 * @export
 * @interface MobileUpdateRequest
 */
export interface MobileUpdateRequest {
    /**
     * brand 品牌
     * @type {string}
     * @memberof MobileUpdateRequest
     */
    'brand'?: string;
    /**
     * 手机品牌id
     * @type {string}
     * @memberof MobileUpdateRequest
     */
    'mobileId'?: string;
    /**
     * mobileSystem 手机系统 2安卓、3苹果
     * @type {number}
     * @memberof MobileUpdateRequest
     */
    'mobileSystem'?: number;
}
/**
 * PageRequest«adCreativeDataRequest»
 * @export
 * @interface PageRequestAdCreativeDataRequest
 */
export interface PageRequestAdCreativeDataRequest {
    /**
     * 页码
     * @type {number}
     * @memberof PageRequestAdCreativeDataRequest
     */
    'page': number;
    /**
     * 每页数量
     * @type {number}
     * @memberof PageRequestAdCreativeDataRequest
     */
    'pageSize': number;
    /**
     * 
     * @type {AdCreativeDataRequest}
     * @memberof PageRequestAdCreativeDataRequest
     */
    'query': AdCreativeDataRequest;
}
/**
 * PageRequest«adCreativeHistoryDayDataPageListRequest»
 * @export
 * @interface PageRequestAdCreativeHistoryDayDataPageListRequest
 */
export interface PageRequestAdCreativeHistoryDayDataPageListRequest {
    /**
     * 页码
     * @type {number}
     * @memberof PageRequestAdCreativeHistoryDayDataPageListRequest
     */
    'page': number;
    /**
     * 每页数量
     * @type {number}
     * @memberof PageRequestAdCreativeHistoryDayDataPageListRequest
     */
    'pageSize': number;
    /**
     * 
     * @type {AdCreativeHistoryDayDataPageListRequest}
     * @memberof PageRequestAdCreativeHistoryDayDataPageListRequest
     */
    'query': AdCreativeHistoryDayDataPageListRequest;
}
/**
 * PageRequest«adCreativePageListRequest»
 * @export
 * @interface PageRequestAdCreativePageListRequest
 */
export interface PageRequestAdCreativePageListRequest {
    /**
     * 页码
     * @type {number}
     * @memberof PageRequestAdCreativePageListRequest
     */
    'page': number;
    /**
     * 每页数量
     * @type {number}
     * @memberof PageRequestAdCreativePageListRequest
     */
    'pageSize': number;
    /**
     * 
     * @type {AdCreativePageListRequest}
     * @memberof PageRequestAdCreativePageListRequest
     */
    'query': AdCreativePageListRequest;
}
/**
 * PageRequest«AdPlanDataListRequest»
 * @export
 * @interface PageRequestAdPlanDataListRequest
 */
export interface PageRequestAdPlanDataListRequest {
    /**
     * 页码
     * @type {number}
     * @memberof PageRequestAdPlanDataListRequest
     */
    'page': number;
    /**
     * 每页数量
     * @type {number}
     * @memberof PageRequestAdPlanDataListRequest
     */
    'pageSize': number;
    /**
     * 
     * @type {AdPlanDataListRequest}
     * @memberof PageRequestAdPlanDataListRequest
     */
    'query': AdPlanDataListRequest;
}
/**
 * PageRequest«adPlanDayDataListRequest»
 * @export
 * @interface PageRequestAdPlanDayDataListRequest
 */
export interface PageRequestAdPlanDayDataListRequest {
    /**
     * 页码
     * @type {number}
     * @memberof PageRequestAdPlanDayDataListRequest
     */
    'page': number;
    /**
     * 每页数量
     * @type {number}
     * @memberof PageRequestAdPlanDayDataListRequest
     */
    'pageSize': number;
    /**
     * 
     * @type {AdPlanDayDataListRequest}
     * @memberof PageRequestAdPlanDayDataListRequest
     */
    'query': AdPlanDayDataListRequest;
}
/**
 * PageRequest«AdPlanPageListRequest»
 * @export
 * @interface PageRequestAdPlanPageListRequest
 */
export interface PageRequestAdPlanPageListRequest {
    /**
     * 页码
     * @type {number}
     * @memberof PageRequestAdPlanPageListRequest
     */
    'page': number;
    /**
     * 每页数量
     * @type {number}
     * @memberof PageRequestAdPlanPageListRequest
     */
    'pageSize': number;
    /**
     * 
     * @type {AdPlanPageListRequest}
     * @memberof PageRequestAdPlanPageListRequest
     */
    'query': AdPlanPageListRequest;
}
/**
 * PageRequest«AdPlanPageRequest»
 * @export
 * @interface PageRequestAdPlanPageRequest
 */
export interface PageRequestAdPlanPageRequest {
    /**
     * 页码
     * @type {number}
     * @memberof PageRequestAdPlanPageRequest
     */
    'page': number;
    /**
     * 每页数量
     * @type {number}
     * @memberof PageRequestAdPlanPageRequest
     */
    'pageSize': number;
    /**
     * 
     * @type {AdPlanPageRequest}
     * @memberof PageRequestAdPlanPageRequest
     */
    'query': AdPlanPageRequest;
}
/**
 * PageRequest«AdSpaceDataRequest»
 * @export
 * @interface PageRequestAdSpaceDataRequest
 */
export interface PageRequestAdSpaceDataRequest {
    /**
     * 页码
     * @type {number}
     * @memberof PageRequestAdSpaceDataRequest
     */
    'page': number;
    /**
     * 每页数量
     * @type {number}
     * @memberof PageRequestAdSpaceDataRequest
     */
    'pageSize': number;
    /**
     * 
     * @type {AdSpaceDataRequest}
     * @memberof PageRequestAdSpaceDataRequest
     */
    'query': AdSpaceDataRequest;
}
/**
 * PageRequest«AdSpacePlanDataRequest»
 * @export
 * @interface PageRequestAdSpacePlanDataRequest
 */
export interface PageRequestAdSpacePlanDataRequest {
    /**
     * 页码
     * @type {number}
     * @memberof PageRequestAdSpacePlanDataRequest
     */
    'page': number;
    /**
     * 每页数量
     * @type {number}
     * @memberof PageRequestAdSpacePlanDataRequest
     */
    'pageSize': number;
    /**
     * 
     * @type {AdSpacePlanDataRequest}
     * @memberof PageRequestAdSpacePlanDataRequest
     */
    'query': AdSpacePlanDataRequest;
}
/**
 * PageRequest«AdSpacePlanHistoryDayDataRequest»
 * @export
 * @interface PageRequestAdSpacePlanHistoryDayDataRequest
 */
export interface PageRequestAdSpacePlanHistoryDayDataRequest {
    /**
     * 页码
     * @type {number}
     * @memberof PageRequestAdSpacePlanHistoryDayDataRequest
     */
    'page': number;
    /**
     * 每页数量
     * @type {number}
     * @memberof PageRequestAdSpacePlanHistoryDayDataRequest
     */
    'pageSize': number;
    /**
     * 
     * @type {AdSpacePlanHistoryDayDataRequest}
     * @memberof PageRequestAdSpacePlanHistoryDayDataRequest
     */
    'query': AdSpacePlanHistoryDayDataRequest;
}
/**
 * PageRequest«AdSpaceRequest»
 * @export
 * @interface PageRequestAdSpaceRequest
 */
export interface PageRequestAdSpaceRequest {
    /**
     * 页码
     * @type {number}
     * @memberof PageRequestAdSpaceRequest
     */
    'page': number;
    /**
     * 每页数量
     * @type {number}
     * @memberof PageRequestAdSpaceRequest
     */
    'pageSize': number;
    /**
     * 
     * @type {AdSpaceRequest}
     * @memberof PageRequestAdSpaceRequest
     */
    'query': AdSpaceRequest;
}
/**
 * PageRequest«AdTemplatePageRequest»
 * @export
 * @interface PageRequestAdTemplatePageRequest
 */
export interface PageRequestAdTemplatePageRequest {
    /**
     * 页码
     * @type {number}
     * @memberof PageRequestAdTemplatePageRequest
     */
    'page': number;
    /**
     * 每页数量
     * @type {number}
     * @memberof PageRequestAdTemplatePageRequest
     */
    'pageSize': number;
    /**
     * 
     * @type {AdTemplatePageRequest}
     * @memberof PageRequestAdTemplatePageRequest
     */
    'query': AdTemplatePageRequest;
}
/**
 * PageRequest«AdTypePageRequest»
 * @export
 * @interface PageRequestAdTypePageRequest
 */
export interface PageRequestAdTypePageRequest {
    /**
     * 页码
     * @type {number}
     * @memberof PageRequestAdTypePageRequest
     */
    'page': number;
    /**
     * 每页数量
     * @type {number}
     * @memberof PageRequestAdTypePageRequest
     */
    'pageSize': number;
    /**
     * 
     * @type {AdTypePageRequest}
     * @memberof PageRequestAdTypePageRequest
     */
    'query': AdTypePageRequest;
}
/**
 * PageRequest«AddressGroupPageRequest»
 * @export
 * @interface PageRequestAddressGroupPageRequest
 */
export interface PageRequestAddressGroupPageRequest {
    /**
     * 页码
     * @type {number}
     * @memberof PageRequestAddressGroupPageRequest
     */
    'page': number;
    /**
     * 每页数量
     * @type {number}
     * @memberof PageRequestAddressGroupPageRequest
     */
    'pageSize': number;
    /**
     * AddressGroupPageRequest
     * @type {object}
     * @memberof PageRequestAddressGroupPageRequest
     */
    'query': object;
}
/**
 * PageRequest«AdvertiserPageRequest»
 * @export
 * @interface PageRequestAdvertiserPageRequest
 */
export interface PageRequestAdvertiserPageRequest {
    /**
     * 页码
     * @type {number}
     * @memberof PageRequestAdvertiserPageRequest
     */
    'page': number;
    /**
     * 每页数量
     * @type {number}
     * @memberof PageRequestAdvertiserPageRequest
     */
    'pageSize': number;
    /**
     * 
     * @type {AdvertiserPageRequest}
     * @memberof PageRequestAdvertiserPageRequest
     */
    'query': AdvertiserPageRequest;
}
/**
 * PageRequest«FlowMasterPageRequest»
 * @export
 * @interface PageRequestFlowMasterPageRequest
 */
export interface PageRequestFlowMasterPageRequest {
    /**
     * 页码
     * @type {number}
     * @memberof PageRequestFlowMasterPageRequest
     */
    'page': number;
    /**
     * 每页数量
     * @type {number}
     * @memberof PageRequestFlowMasterPageRequest
     */
    'pageSize': number;
    /**
     * 
     * @type {FlowMasterPageRequest}
     * @memberof PageRequestFlowMasterPageRequest
     */
    'query': FlowMasterPageRequest;
}
/**
 * PageRequest«MobilePageRequest»
 * @export
 * @interface PageRequestMobilePageRequest
 */
export interface PageRequestMobilePageRequest {
    /**
     * 页码
     * @type {number}
     * @memberof PageRequestMobilePageRequest
     */
    'page': number;
    /**
     * 每页数量
     * @type {number}
     * @memberof PageRequestMobilePageRequest
     */
    'pageSize': number;
    /**
     * 
     * @type {MobilePageRequest}
     * @memberof PageRequestMobilePageRequest
     */
    'query': MobilePageRequest;
}
/**
 * PageResponse«adCreativeDataResponse»
 * @export
 * @interface PageResponseAdCreativeDataResponse
 */
export interface PageResponseAdCreativeDataResponse {
    /**
     * 记录
     * @type {Array<AdCreativeDataResponse>}
     * @memberof PageResponseAdCreativeDataResponse
     */
    'list'?: Array<AdCreativeDataResponse>;
    /**
     * 总条数
     * @type {number}
     * @memberof PageResponseAdCreativeDataResponse
     */
    'total'?: number;
}
/**
 * PageResponse«adCreativeHistoryDayDataPageListResponse»
 * @export
 * @interface PageResponseAdCreativeHistoryDayDataPageListResponse
 */
export interface PageResponseAdCreativeHistoryDayDataPageListResponse {
    /**
     * 记录
     * @type {Array<AdCreativeHistoryDayDataPageListResponse>}
     * @memberof PageResponseAdCreativeHistoryDayDataPageListResponse
     */
    'list'?: Array<AdCreativeHistoryDayDataPageListResponse>;
    /**
     * 总条数
     * @type {number}
     * @memberof PageResponseAdCreativeHistoryDayDataPageListResponse
     */
    'total'?: number;
}
/**
 * PageResponse«adCreativePageListResponse»
 * @export
 * @interface PageResponseAdCreativePageListResponse
 */
export interface PageResponseAdCreativePageListResponse {
    /**
     * 记录
     * @type {Array<AdCreativePageListResponse>}
     * @memberof PageResponseAdCreativePageListResponse
     */
    'list'?: Array<AdCreativePageListResponse>;
    /**
     * 总条数
     * @type {number}
     * @memberof PageResponseAdCreativePageListResponse
     */
    'total'?: number;
}
/**
 * PageResponse«AdPlanDataListResponse»
 * @export
 * @interface PageResponseAdPlanDataListResponse
 */
export interface PageResponseAdPlanDataListResponse {
    /**
     * 记录
     * @type {Array<AdPlanDataListResponse>}
     * @memberof PageResponseAdPlanDataListResponse
     */
    'list'?: Array<AdPlanDataListResponse>;
    /**
     * 总条数
     * @type {number}
     * @memberof PageResponseAdPlanDataListResponse
     */
    'total'?: number;
}
/**
 * PageResponse«AdPlanDayDataListResponse»
 * @export
 * @interface PageResponseAdPlanDayDataListResponse
 */
export interface PageResponseAdPlanDayDataListResponse {
    /**
     * 记录
     * @type {Array<AdPlanDayDataListResponse>}
     * @memberof PageResponseAdPlanDayDataListResponse
     */
    'list'?: Array<AdPlanDayDataListResponse>;
    /**
     * 总条数
     * @type {number}
     * @memberof PageResponseAdPlanDayDataListResponse
     */
    'total'?: number;
}
/**
 * PageResponse«AdPlanPageResponse»
 * @export
 * @interface PageResponseAdPlanPageResponse
 */
export interface PageResponseAdPlanPageResponse {
    /**
     * 记录
     * @type {Array<AdPlanPageResponse>}
     * @memberof PageResponseAdPlanPageResponse
     */
    'list'?: Array<AdPlanPageResponse>;
    /**
     * 总条数
     * @type {number}
     * @memberof PageResponseAdPlanPageResponse
     */
    'total'?: number;
}
/**
 * PageResponse«AdSpaceDataResponse»
 * @export
 * @interface PageResponseAdSpaceDataResponse
 */
export interface PageResponseAdSpaceDataResponse {
    /**
     * 记录
     * @type {Array<AdSpaceDataResponse>}
     * @memberof PageResponseAdSpaceDataResponse
     */
    'list'?: Array<AdSpaceDataResponse>;
    /**
     * 总条数
     * @type {number}
     * @memberof PageResponseAdSpaceDataResponse
     */
    'total'?: number;
}
/**
 * PageResponse«AdSpaceDetailResponse»
 * @export
 * @interface PageResponseAdSpaceDetailResponse
 */
export interface PageResponseAdSpaceDetailResponse {
    /**
     * 记录
     * @type {Array<AdSpaceDetailResponse>}
     * @memberof PageResponseAdSpaceDetailResponse
     */
    'list'?: Array<AdSpaceDetailResponse>;
    /**
     * 总条数
     * @type {number}
     * @memberof PageResponseAdSpaceDetailResponse
     */
    'total'?: number;
}
/**
 * PageResponse«AdSpacePlanDataResponse»
 * @export
 * @interface PageResponseAdSpacePlanDataResponse
 */
export interface PageResponseAdSpacePlanDataResponse {
    /**
     * 记录
     * @type {Array<AdSpacePlanDataResponse>}
     * @memberof PageResponseAdSpacePlanDataResponse
     */
    'list'?: Array<AdSpacePlanDataResponse>;
    /**
     * 总条数
     * @type {number}
     * @memberof PageResponseAdSpacePlanDataResponse
     */
    'total'?: number;
}
/**
 * PageResponse«AdSpacePlanHistoryDayDataResponse»
 * @export
 * @interface PageResponseAdSpacePlanHistoryDayDataResponse
 */
export interface PageResponseAdSpacePlanHistoryDayDataResponse {
    /**
     * 记录
     * @type {Array<AdSpacePlanHistoryDayDataResponse>}
     * @memberof PageResponseAdSpacePlanHistoryDayDataResponse
     */
    'list'?: Array<AdSpacePlanHistoryDayDataResponse>;
    /**
     * 总条数
     * @type {number}
     * @memberof PageResponseAdSpacePlanHistoryDayDataResponse
     */
    'total'?: number;
}
/**
 * PageResponse«AdTemplatePageResponse»
 * @export
 * @interface PageResponseAdTemplatePageResponse
 */
export interface PageResponseAdTemplatePageResponse {
    /**
     * 记录
     * @type {Array<AdTemplatePageResponse>}
     * @memberof PageResponseAdTemplatePageResponse
     */
    'list'?: Array<AdTemplatePageResponse>;
    /**
     * 总条数
     * @type {number}
     * @memberof PageResponseAdTemplatePageResponse
     */
    'total'?: number;
}
/**
 * PageResponse«AdTypePageResponse»
 * @export
 * @interface PageResponseAdTypePageResponse
 */
export interface PageResponseAdTypePageResponse {
    /**
     * 记录
     * @type {Array<AdTypePageResponse>}
     * @memberof PageResponseAdTypePageResponse
     */
    'list'?: Array<AdTypePageResponse>;
    /**
     * 总条数
     * @type {number}
     * @memberof PageResponseAdTypePageResponse
     */
    'total'?: number;
}
/**
 * PageResponse«AddressGroupPageResponse»
 * @export
 * @interface PageResponseAddressGroupPageResponse
 */
export interface PageResponseAddressGroupPageResponse {
    /**
     * 记录
     * @type {Array<AddressGroupPageResponse>}
     * @memberof PageResponseAddressGroupPageResponse
     */
    'list'?: Array<AddressGroupPageResponse>;
    /**
     * 总条数
     * @type {number}
     * @memberof PageResponseAddressGroupPageResponse
     */
    'total'?: number;
}
/**
 * PageResponse«AdvertiserPageResponse»
 * @export
 * @interface PageResponseAdvertiserPageResponse
 */
export interface PageResponseAdvertiserPageResponse {
    /**
     * 记录
     * @type {Array<AdvertiserPageResponse>}
     * @memberof PageResponseAdvertiserPageResponse
     */
    'list'?: Array<AdvertiserPageResponse>;
    /**
     * 总条数
     * @type {number}
     * @memberof PageResponseAdvertiserPageResponse
     */
    'total'?: number;
}
/**
 * PageResponse«FlowMasterPageResponse»
 * @export
 * @interface PageResponseFlowMasterPageResponse
 */
export interface PageResponseFlowMasterPageResponse {
    /**
     * 记录
     * @type {Array<FlowMasterPageResponse>}
     * @memberof PageResponseFlowMasterPageResponse
     */
    'list'?: Array<FlowMasterPageResponse>;
    /**
     * 总条数
     * @type {number}
     * @memberof PageResponseFlowMasterPageResponse
     */
    'total'?: number;
}
/**
 * PageResponse«MobilePageResponse»
 * @export
 * @interface PageResponseMobilePageResponse
 */
export interface PageResponseMobilePageResponse {
    /**
     * 记录
     * @type {Array<MobilePageResponse>}
     * @memberof PageResponseMobilePageResponse
     */
    'list'?: Array<MobilePageResponse>;
    /**
     * 总条数
     * @type {number}
     * @memberof PageResponseMobilePageResponse
     */
    'total'?: number;
}
/**
 * ProvinceAndCityListResponse
 * @export
 * @interface ProvinceAndCityListResponse
 */
export interface ProvinceAndCityListResponse {
    /**
     * 孩子们
     * @type {Array<ProvinceAndCityListResponse>}
     * @memberof ProvinceAndCityListResponse
     */
    'children'?: Array<ProvinceAndCityListResponse>;
    /**
     * 代码
     * @type {string}
     * @memberof ProvinceAndCityListResponse
     */
    'code'?: string;
    /**
     * 名字
     * @type {string}
     * @memberof ProvinceAndCityListResponse
     */
    'name'?: string;
}
/**
 * ProvinceAndCityResponse
 * @export
 * @interface ProvinceAndCityResponse
 */
export interface ProvinceAndCityResponse {
    /**
     * 省市区列表
     * @type {Array<ProvinceAndCityListResponse>}
     * @memberof ProvinceAndCityResponse
     */
    'list'?: Array<ProvinceAndCityListResponse>;
}
/**
 * updateAdCreativeRequest
 * @export
 * @interface UpdateAdCreativeRequest
 */
export interface UpdateAdCreativeRequest {
    /**
     * 配置回调url
     * @type {string}
     * @memberof UpdateAdCreativeRequest
     */
    'adExposureCallBackUrl'?: string;
    /**
     * 地址组id
     * @type {string}
     * @memberof UpdateAdCreativeRequest
     */
    'addressGroupId'?: string;
    /**
     * 广告主id
     * @type {string}
     * @memberof UpdateAdCreativeRequest
     */
    'advertiserId'?: string;
    /**
     * 地址列表
     * @type {Array<AdCreativeAreaRequest>}
     * @memberof UpdateAdCreativeRequest
     */
    'areaList'?: Array<AdCreativeAreaRequest>;
    /**
     * 地域类型  1分组 2 省市区
     * @type {number}
     * @memberof UpdateAdCreativeRequest
     */
    'areaType'?: number;
    /**
     * 计费方式 1 CPM,2CPC
     * @type {number}
     * @memberof UpdateAdCreativeRequest
     */
    'billingType'?: number;
    /**
     * 广告创意ID
     * @type {string}
     * @memberof UpdateAdCreativeRequest
     */
    'creativeId'?: string;
    /**
     * 广告创意名称
     * @type {string}
     * @memberof UpdateAdCreativeRequest
     */
    'creativeName'?: string;
    /**
     * 去重天数
     * @type {number}
     * @memberof UpdateAdCreativeRequest
     */
    'duplicateRemovalDays'?: number;
    /**
     * 结束时间
     * @type {string}
     * @memberof UpdateAdCreativeRequest
     */
    'endDate'?: string;
    /**
     * 行业列表
     * @type {Array<AdCreativeIndustryRequest>}
     * @memberof UpdateAdCreativeRequest
     */
    'industryList'?: Array<AdCreativeIndustryRequest>;
    /**
     * 是否组合广告 1是2不是
     * @type {number}
     * @memberof UpdateAdCreativeRequest
     */
    'isCombination'?: number;
    /**
     * 是否支持组合广告 1是2不是
     * @type {number}
     * @memberof UpdateAdCreativeRequest
     */
    'isSupportCombination'?: number;
    /**
     * 投放时间列表
     * @type {Array<AdCreativeTimeRequest>}
     * @memberof UpdateAdCreativeRequest
     */
    'list'?: Array<AdCreativeTimeRequest>;
    /**
     * 单日预算限制
     * @type {number}
     * @memberof UpdateAdCreativeRequest
     */
    'maxDailyBudget'?: number;
    /**
     * 媒体位id集合
     * @type {Array<string>}
     * @memberof UpdateAdCreativeRequest
     */
    'mediaIdList'?: Array<string>;
    /**
     * 手机id集合
     * @type {Array<string>}
     * @memberof UpdateAdCreativeRequest
     */
    'mobileIdList'?: Array<string>;
    /**
     * 手机系统 1全部、2安卓、3苹果
     * @type {number}
     * @memberof UpdateAdCreativeRequest
     */
    'mobileSystem'?: number;
    /**
     * 图片地址
     * @type {string}
     * @memberof UpdateAdCreativeRequest
     */
    'picture'?: string;
    /**
     * price 单价.
     * @type {number}
     * @memberof UpdateAdCreativeRequest
     */
    'price'?: number;
    /**
     * 开始时间
     * @type {string}
     * @memberof UpdateAdCreativeRequest
     */
    'startDate'?: string;
    /**
     * 广告总预算
     * @type {number}
     * @memberof UpdateAdCreativeRequest
     */
    'totalBudget'?: number;
    /**
     * 广告类型ID
     * @type {string}
     * @memberof UpdateAdCreativeRequest
     */
    'typeId'?: string;
    /**
     * 广告链接
     * @type {string}
     * @memberof UpdateAdCreativeRequest
     */
    'url'?: string;
    /**
     * 用户日曝光次数上限
     * @type {number}
     * @memberof UpdateAdCreativeRequest
     */
    'userMaxDailyExposure'?: number;
}
/**
 * updateAdPlanRequest
 * @export
 * @interface UpdateAdPlanRequest
 */
export interface UpdateAdPlanRequest {
    /**
     * 广告创意集合
     * @type {Array<AdPlanCreativeAddParam>}
     * @memberof UpdateAdPlanRequest
     */
    'creativeList'?: Array<AdPlanCreativeAddParam>;
    /**
     * 去重天数
     * @type {number}
     * @memberof UpdateAdPlanRequest
     */
    'duplicateRemovalDays'?: number;
    /**
     * 结束时间
     * @type {string}
     * @memberof UpdateAdPlanRequest
     */
    'endDate'?: string;
    /**
     * 投放时间列表
     * @type {Array<AdPlanTimeParam>}
     * @memberof UpdateAdPlanRequest
     */
    'list'?: Array<AdPlanTimeParam>;
    /**
     * 单日预算限制
     * @type {number}
     * @memberof UpdateAdPlanRequest
     */
    'maxDailyBudget'?: number;
    /**
     * 广告计划ID
     * @type {string}
     * @memberof UpdateAdPlanRequest
     */
    'planId'?: string;
    /**
     * 单价
     * @type {number}
     * @memberof UpdateAdPlanRequest
     */
    'planPrice'?: number;
    /**
     * 开始时间
     * @type {string}
     * @memberof UpdateAdPlanRequest
     */
    'startDate'?: string;
    /**
     * 广告总预算
     * @type {number}
     * @memberof UpdateAdPlanRequest
     */
    'totalBudget'?: number;
    /**
     * 用户日曝光次数上限
     * @type {number}
     * @memberof UpdateAdPlanRequest
     */
    'userMaxDailyExposure'?: number;
}
/**
 * updateCreativeStatusRequest
 * @export
 * @interface UpdateCreativeStatusRequest
 */
export interface UpdateCreativeStatusRequest {
    /**
     * 广告创意ID
     * @type {string}
     * @memberof UpdateCreativeStatusRequest
     */
    'creativeId'?: string;
    /**
     * 广告创意启用状态 1未开启 2开启
     * @type {number}
     * @memberof UpdateCreativeStatusRequest
     */
    'enableStatus'?: number;
}
/**
 * updatePlanStatusRequest
 * @export
 * @interface UpdatePlanStatusRequest
 */
export interface UpdatePlanStatusRequest {
    /**
     * 广告计划启用状态 1-关闭 2-开启
     * @type {number}
     * @memberof UpdatePlanStatusRequest
     */
    'enableStatus'?: number;
    /**
     * 广告创意id
     * @type {string}
     * @memberof UpdatePlanStatusRequest
     */
    'planId'?: string;
}


type DeepRequired<T> = {
  [P in keyof T]-?: T[P] extends Object ? DeepRequired<T[P]> : T[P];
}
type cPick<T, K extends keyof T> = DeepRequired<DeepRequired<T>[K]>
type isHasData<T, K> = K extends keyof T ? cPick<T, K> : T

/**
 * DefaultApi - axios fetch
 * @export
 */
export const DefaultApiFetch = {
      /**
        * 
        * @function 广告创意数据分页列表
        * @param {PageRequestAdCreativeDataRequest} [pageRequestAdCreativeDataRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      adCreativeDataPageListUsingPOST: (pageRequestAdCreativeDataRequest?: PageRequestAdCreativeDataRequest, options?:RequestOptions): Promise<isHasData<PageResponseAdCreativeDataResponse, 'data'>> => {
          const localVarPath = `/ad/creative/data/list`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(pageRequestAdCreativeDataRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 广告创意数据汇总
        * @param {AdCreativeDataStatisticsRequest} [adCreativeDataStatisticsRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      adCreativeDataStatisticsUsingPOST: (adCreativeDataStatisticsRequest?: AdCreativeDataStatisticsRequest, options?:RequestOptions): Promise<isHasData<AdCreativeDataStatisticsRequestResponse, 'data'>> => {
          const localVarPath = `/ad/creative/data/history/day/data/statistics`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(adCreativeDataStatisticsRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 广告创意详情
        * @param {AdCreativeDetailRequest} [adCreativeDetailRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      adCreativeDetailUsingPOST: (adCreativeDetailRequest?: AdCreativeDetailRequest, options?:RequestOptions): Promise<isHasData<AdCreativeDetailResponse, 'data'>> => {
          const localVarPath = `/ad/creative/detail`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(adCreativeDetailRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 广告创意历史数据分页列表
        * @param {PageRequestAdCreativeHistoryDayDataPageListRequest} [pageRequestAdCreativeHistoryDayDataPageListRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      adCreativeHistoryDataPageListUsingPOST: (pageRequestAdCreativeHistoryDayDataPageListRequest?: PageRequestAdCreativeHistoryDayDataPageListRequest, options?:RequestOptions): Promise<isHasData<PageResponseAdCreativeHistoryDayDataPageListResponse, 'data'>> => {
          const localVarPath = `/ad/creative/data/history/list`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(pageRequestAdCreativeHistoryDayDataPageListRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 广告创意列表
        * @param {PageRequestAdCreativePageListRequest} [pageRequestAdCreativePageListRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      adCreativePageListUsingPOST: (pageRequestAdCreativePageListRequest?: PageRequestAdCreativePageListRequest, options?:RequestOptions): Promise<isHasData<PageResponseAdCreativePageListResponse, 'data'>> => {
          const localVarPath = `/ad/creative/list`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(pageRequestAdCreativePageListRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 广告媒体位列表
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      adMediaListUsingPOST: (options?:RequestOptions): Promise<isHasData<AdMediaOutResponse, 'data'>> => {
          const localVarPath = `/ad/media/list`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 获取广告计划数据分页列表
        * @param {PageRequestAdPlanDataListRequest} [pageRequestAdPlanDataListRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      adPlanDataListUsingPOST: (pageRequestAdPlanDataListRequest?: PageRequestAdPlanDataListRequest, options?:RequestOptions): Promise<isHasData<PageResponseAdPlanDataListResponse, 'data'>> => {
          const localVarPath = `/ad/plan/data/list`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(pageRequestAdPlanDataListRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 广告计划天数据分页列表
        * @param {PageRequestAdPlanDayDataListRequest} [pageRequestAdPlanDayDataListRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      adPlanDayDataListUsingPOST: (pageRequestAdPlanDayDataListRequest?: PageRequestAdPlanDayDataListRequest, options?:RequestOptions): Promise<isHasData<PageResponseAdPlanDayDataListResponse, 'data'>> => {
          const localVarPath = `/ad/plan/data/day/list`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(pageRequestAdPlanDayDataListRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 广告计划天数据汇总
        * @param {AdPlanDayDataStatisticsRequest} [adPlanDayDataStatisticsRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      adPlanDayDataStatisticsUsingPOST: (adPlanDayDataStatisticsRequest?: AdPlanDayDataStatisticsRequest, options?:RequestOptions): Promise<isHasData<AdPlanDayDataStatisticsResponse, 'data'>> => {
          const localVarPath = `/ad/plan/data/day/statistics`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(adPlanDayDataStatisticsRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 广告计划详情
        * @param {AdPlanDetailRequest} [adPlanDetailRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      adPlanDetailUsingPOST: (adPlanDetailRequest?: AdPlanDetailRequest, options?:RequestOptions): Promise<isHasData<AdPlanDetailResponse, 'data'>> => {
          const localVarPath = `/ad/plan/detail`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(adPlanDetailRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 获取广告计划分页列表-弹窗
        * @param {PageRequestAdPlanPageRequest} [pageRequestAdPlanPageRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      adPlanListUsingPOST: (pageRequestAdPlanPageRequest?: PageRequestAdPlanPageRequest, options?:RequestOptions): Promise<isHasData<PageResponseAdPlanPageResponse, 'data'>> => {
          const localVarPath = `/ad/plan/list`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(pageRequestAdPlanPageRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 获取广告计划分页列表-页面
        * @param {PageRequestAdPlanPageListRequest} [pageRequestAdPlanPageListRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      adPlanPageListUsingPOST: (pageRequestAdPlanPageListRequest?: PageRequestAdPlanPageListRequest, options?:RequestOptions): Promise<isHasData<PageResponseAdPlanPageResponse, 'data'>> => {
          const localVarPath = `/ad/plan/list/page`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(pageRequestAdPlanPageListRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 广告位数据列表
        * @param {PageRequestAdSpaceDataRequest} [pageRequestAdSpaceDataRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      adSpaceDataListUsingPOST: (pageRequestAdSpaceDataRequest?: PageRequestAdSpaceDataRequest, options?:RequestOptions): Promise<isHasData<PageResponseAdSpaceDataResponse, 'data'>> => {
          const localVarPath = `/ad/space/data/list`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(pageRequestAdSpaceDataRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 广告位的广告计划数据列表
        * @param {PageRequestAdSpacePlanDataRequest} [pageRequestAdSpacePlanDataRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      adSpacePlanDataListUsingPOST: (pageRequestAdSpacePlanDataRequest?: PageRequestAdSpacePlanDataRequest, options?:RequestOptions): Promise<isHasData<PageResponseAdSpacePlanDataResponse, 'data'>> => {
          const localVarPath = `/ad/space/plan/data/list`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(pageRequestAdSpacePlanDataRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 广告位的广告计划数据汇总
        * @param {AdSpacePlanDataStatisticsRequest} [adSpacePlanDataStatisticsRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      adSpacePlanDataStatisticsUsingPOST: (adSpacePlanDataStatisticsRequest?: AdSpacePlanDataStatisticsRequest, options?:RequestOptions): Promise<isHasData<AdSpacePlanDataStatisticsResponse, 'data'>> => {
          const localVarPath = `/ad/space/plan/data/statistics`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(adSpacePlanDataStatisticsRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 广告位的广告计划历史日数据
        * @param {PageRequestAdSpacePlanHistoryDayDataRequest} [pageRequestAdSpacePlanHistoryDayDataRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      adSpacePlanHistoryDayDataListUsingPOST: (pageRequestAdSpacePlanHistoryDayDataRequest?: PageRequestAdSpacePlanHistoryDayDataRequest, options?:RequestOptions): Promise<isHasData<PageResponseAdSpacePlanHistoryDayDataResponse, 'data'>> => {
          const localVarPath = `/ad/space/plan/history/day/data/list`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(pageRequestAdSpacePlanHistoryDayDataRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 广告模版详情
        * @param {AdTemplateDetailRequest} [adTemplateDetailRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      adTemplateDetailUsingPOST: (adTemplateDetailRequest?: AdTemplateDetailRequest, options?:RequestOptions): Promise<isHasData<AdTemplateDetailResponse, 'data'>> => {
          const localVarPath = `/ad/template/detail`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(adTemplateDetailRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 获取广告模版分页列表
        * @param {PageRequestAdTemplatePageRequest} [pageRequestAdTemplatePageRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      adTemplateListUsingPOST: (pageRequestAdTemplatePageRequest?: PageRequestAdTemplatePageRequest, options?:RequestOptions): Promise<isHasData<PageResponseAdTemplatePageResponse, 'data'>> => {
          const localVarPath = `/ad/template/list`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(pageRequestAdTemplatePageRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 广告类型列表-按照是否可以组合分列表
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      adTypeCombinationListUsingPOST: (options?:RequestOptions): Promise<isHasData<AdTypeCombinationListResponse, 'data'>> => {
          const localVarPath = `/ad/type/is/combination/list`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 广告类型列表-支持组合的广告类型-按照位置分列表
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      adTypeCombinationLocationListUsingPOST: (options?:RequestOptions): Promise<isHasData<AdTypeLocationListResponse, 'data'>> => {
          const localVarPath = `/ad/type/combination/location/list`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 广告类型详情
        * @param {AdTypeDetailRequest} [adTypeDetailRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      adTypeDetailUsingPOST: (adTypeDetailRequest?: AdTypeDetailRequest, options?:RequestOptions): Promise<isHasData<AdTypeDetailResponse, 'data'>> => {
          const localVarPath = `/ad/type/detail`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(adTypeDetailRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 获取广告类型分页列表
        * @param {PageRequestAdTypePageRequest} [pageRequestAdTypePageRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      adTypeListUsingPOST: (pageRequestAdTypePageRequest?: PageRequestAdTypePageRequest, options?:RequestOptions): Promise<isHasData<PageResponseAdTypePageResponse, 'data'>> => {
          const localVarPath = `/ad/type/list`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(pageRequestAdTypePageRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 新建广告创意
        * @param {AddAdCreativeRequest} [addAdCreativeRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      addAdCreativeUsingPOST: (addAdCreativeRequest?: AddAdCreativeRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/creative/add`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(addAdCreativeRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 新建广告计划
        * @param {AddAdPlanRequest} [addAdPlanRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      addAdPlanUsingPOST: (addAdPlanRequest?: AddAdPlanRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/plan/add`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(addAdPlanRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 新增广告模版
        * @param {AdTemplateAddRequest} [adTemplateAddRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      addAdTemplateUsingPOST: (adTemplateAddRequest?: AdTemplateAddRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/template/add`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(adTemplateAddRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 新增广告类型
        * @param {AdTypeAddRequest} [adTypeAddRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      addAdTypeUsingPOST: (adTypeAddRequest?: AdTypeAddRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/type/add`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(adTypeAddRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 新增地址组
        * @param {AddressGroupAddRequest} [addressGroupAddRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      addAddressGroupUsingPOST: (addressGroupAddRequest?: AddressGroupAddRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/address/group/add`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(addressGroupAddRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 新增广告主
        * @param {AdvertiserAddRequest} [advertiserAddRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      addAdvertiserUsingPOST: (advertiserAddRequest?: AdvertiserAddRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/advertiser/add`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(advertiserAddRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 新增流量主
        * @param {FlowMasterAddRequest} [flowMasterAddRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      addFlowMasterUsingPOST: (flowMasterAddRequest?: FlowMasterAddRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/flow/master/add`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(flowMasterAddRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 新增广告投放行业
        * @param {IndustryAddRequest} [industryAddRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      addIndustryUsingPOST: (industryAddRequest?: IndustryAddRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/industry/add`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(industryAddRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 新增手机品牌
        * @param {MobileAddRequest} [mobileAddRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      addMobileUsingPOST: (mobileAddRequest?: MobileAddRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/mobile/add`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(mobileAddRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 新增广告位
        * @param {AdSpaceAddRequest} [adSpaceAddRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      addSpaceUsingPOST: (adSpaceAddRequest?: AdSpaceAddRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/space/add`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(adSpaceAddRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 地址组详情
        * @param {AddressGroupDetailRequest} [addressGroupDetailRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      addressGroupDetailUsingPOST: (addressGroupDetailRequest?: AddressGroupDetailRequest, options?:RequestOptions): Promise<isHasData<AddressGroupDetailResponse, 'data'>> => {
          const localVarPath = `/ad/address/group/detail`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(addressGroupDetailRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 获取地址组分页列表
        * @param {PageRequestAddressGroupPageRequest} [pageRequestAddressGroupPageRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      addressGroupListUsingPOST: (pageRequestAddressGroupPageRequest?: PageRequestAddressGroupPageRequest, options?:RequestOptions): Promise<isHasData<PageResponseAddressGroupPageResponse, 'data'>> => {
          const localVarPath = `/ad/address/group/list`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(pageRequestAddressGroupPageRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 广告主详情
        * @param {AdvertiserDetailRequest} [advertiserDetailRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      advertiserDetailUsingPOST: (advertiserDetailRequest?: AdvertiserDetailRequest, options?:RequestOptions): Promise<isHasData<AdvertiserDetailResponse, 'data'>> => {
          const localVarPath = `/ad/advertiser/detail`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(advertiserDetailRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 获取广告主分页列表
        * @param {PageRequestAdvertiserPageRequest} [pageRequestAdvertiserPageRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      advertiserListUsingPOST: (pageRequestAdvertiserPageRequest?: PageRequestAdvertiserPageRequest, options?:RequestOptions): Promise<isHasData<PageResponseAdvertiserPageResponse, 'data'>> => {
          const localVarPath = `/ad/advertiser/list`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(pageRequestAdvertiserPageRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 广告创意名称校验
        * @param {AdCreativeCheckRequest} [adCreativeCheckRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      checkAdCreativeNameUsingPOST: (adCreativeCheckRequest?: AdCreativeCheckRequest, options?:RequestOptions): Promise<isHasData<AdCreativeCheckResponse, 'data'>> => {
          const localVarPath = `/ad/creative/check`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(adCreativeCheckRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 广告计划名称校验
        * @param {AdPlanCheckRequest} [adPlanCheckRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      checkAdPlanNameUsingPOST: (adPlanCheckRequest?: AdPlanCheckRequest, options?:RequestOptions): Promise<isHasData<AdPlanCheckResponse, 'data'>> => {
          const localVarPath = `/ad/plan/check`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(adPlanCheckRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 关闭广告计划
        * @param {object} [body] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      closedAdPlanUsingPOST: (body?: object, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/plan/closed`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(body, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 关闭广告创意
        * @param {object} [body] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      closedCreativeUsingPOST: (body?: object, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/creative/close`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(body, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 查询广告位当前在投的广告计划数
        * @param {AdSpacePlanCountRequest} [adSpacePlanCountRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      countPlanSpaceUsingPOST: (adSpacePlanCountRequest?: AdSpacePlanCountRequest, options?:RequestOptions): Promise<isHasData<AdSpacePlanCountResponse, 'data'>> => {
          const localVarPath = `/ad/space/plan/count`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(adSpacePlanCountRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 非H5广告曝光数据上报
        * @param {AdClientDataReportRequest} [adClientDataReportRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      dataReportUsingPOST: (adClientDataReportRequest?: AdClientDataReportRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/client/dataReport`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(adClientDataReportRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 删除广告创意
        * @param {DeleteAdCreativeRequest} [deleteAdCreativeRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      deleteAdCreativeUsingPOST: (deleteAdCreativeRequest?: DeleteAdCreativeRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/creative/delete`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(deleteAdCreativeRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 删除广告计划
        * @param {DeleteAdPlanRequest} [deleteAdPlanRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      deleteAdPlanUsingPOST: (deleteAdPlanRequest?: DeleteAdPlanRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/plan/delete`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(deleteAdPlanRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 删除广告类型
        * @param {AdTypeDeleteRequest} [adTypeDeleteRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      deleteAdTypeUsingPOST: (adTypeDeleteRequest?: AdTypeDeleteRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/type/delete`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(adTypeDeleteRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 删除地址组
        * @param {AddressGroupDeleteRequest} [addressGroupDeleteRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      deleteAddressGroupUsingPOST: (addressGroupDeleteRequest?: AddressGroupDeleteRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/address/group/delete`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(addressGroupDeleteRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 删除广告主
        * @param {AdvertiserDeleteRequest} [advertiserDeleteRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      deleteAdvertiserUsingPOST: (advertiserDeleteRequest?: AdvertiserDeleteRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/advertiser/delete`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(advertiserDeleteRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 广告创意删除前校验
        * @param {DeleteCheckAdCreativeRequest} [deleteCheckAdCreativeRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      deleteCheckAdCreativeUsingPOST: (deleteCheckAdCreativeRequest?: DeleteCheckAdCreativeRequest, options?:RequestOptions): Promise<isHasData<DeleteCheckAdCreativeResponse, 'data'>> => {
          const localVarPath = `/ad/creative/delete/check`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(deleteCheckAdCreativeRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 统计广告计划的在投广告位数量
        * @param {DeleteCheckAdPlanRequest} [deleteCheckAdPlanRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      deleteCheckAdPlanUsingPOST: (deleteCheckAdPlanRequest?: DeleteCheckAdPlanRequest, options?:RequestOptions): Promise<isHasData<DeleteCheckAdCreativeResponse, 'data'>> => {
          const localVarPath = `/ad/plan/space/count`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(deleteCheckAdPlanRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 删除流量主
        * @param {FlowMasterDeleteRequest} [flowMasterDeleteRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      deleteFlowMasterUsingPOST: (flowMasterDeleteRequest?: FlowMasterDeleteRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/flow/master/delete`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(flowMasterDeleteRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 删除广告投放行业
        * @param {IndustryDeleteRequest} [industryDeleteRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      deleteIndustryUsingPOST: (industryDeleteRequest?: IndustryDeleteRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/industry/delete`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(industryDeleteRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 删除手机品牌
        * @param {MobileDeleteRequest} [mobileDeleteRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      deleteMobileUsingPOST: (mobileDeleteRequest?: MobileDeleteRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/mobile/delete`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(mobileDeleteRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 删除广告位
        * @param {AdSpaceDeleteRequest} [adSpaceDeleteRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      deleteSpaceUsingPOST: (adSpaceDeleteRequest?: AdSpaceDeleteRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/space/delete`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(adSpaceDeleteRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 广告位详情
        * @param {AdSpaceDetailRequest} [adSpaceDetailRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      detailSpaceUsingPOST: (adSpaceDetailRequest?: AdSpaceDetailRequest, options?:RequestOptions): Promise<isHasData<AdSpaceDetailResponse, 'data'>> => {
          const localVarPath = `/ad/space/detail`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(adSpaceDetailRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 广告计划行业树形列表
        * @param {AdPlanProvinceAndCityRequest} [adPlanProvinceAndCityRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      findAdPlanIndustryListUsingPOST: (adPlanProvinceAndCityRequest?: AdPlanProvinceAndCityRequest, options?:RequestOptions): Promise<isHasData<IndustryListResponse, 'data'>> => {
          const localVarPath = `/ad/plan/industry/tree/list`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(adPlanProvinceAndCityRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 广告计划省市区地址树形列表
        * @param {AdPlanProvinceAndCityRequest} [adPlanProvinceAndCityRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      findAdPlanProvinceAndCityListUsingPOST: (adPlanProvinceAndCityRequest?: AdPlanProvinceAndCityRequest, options?:RequestOptions): Promise<isHasData<ProvinceAndCityResponse, 'data'>> => {
          const localVarPath = `/ad/plan/address/tree/list`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(adPlanProvinceAndCityRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 统一认证获取用户信息
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      findPermissionListUsingPOST: (options?:RequestOptions): Promise<isHasData<AdminLoginResponse, 'data'>> => {
          const localVarPath = `/ad/common/find/permission/list`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 省市地址列表
        * @param {object} [body] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      findProvinceAndCityListUsingPOST: (body?: object, options?:RequestOptions): Promise<isHasData<ProvinceAndCityResponse, 'data'>> => {
          const localVarPath = `/ad/common/address/provinceandcity/list`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(body, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 流量主详情
        * @param {FlowMasterDetailRequest} [flowMasterDetailRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      flowMasterDetailUsingPOST: (flowMasterDetailRequest?: FlowMasterDetailRequest, options?:RequestOptions): Promise<isHasData<FlowMasterDetailResponse, 'data'>> => {
          const localVarPath = `/ad/flow/master/detail`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(flowMasterDetailRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 获取流量主分页列表
        * @param {PageRequestFlowMasterPageRequest} [pageRequestFlowMasterPageRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      flowMasterListUsingPOST: (pageRequestFlowMasterPageRequest?: PageRequestFlowMasterPageRequest, options?:RequestOptions): Promise<isHasData<PageResponseFlowMasterPageResponse, 'data'>> => {
          const localVarPath = `/ad/flow/master/list`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(pageRequestFlowMasterPageRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 获取广告oss token cdn
        * @param {AliyunOssTokenRequest} [aliyunOssTokenRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      getAdCdnOssTokenUsingPOST: (aliyunOssTokenRequest?: AliyunOssTokenRequest, options?:RequestOptions): Promise<isHasData<AliyunOssTokenResponse, 'data'>> => {
          const localVarPath = `/ad/common/cdn/oss/token`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(aliyunOssTokenRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 获取广告
        * @param {AdClientPlanRequest} [adClientPlanRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      getAdInfoUsingPOST: (adClientPlanRequest?: AdClientPlanRequest, options?:RequestOptions): Promise<isHasData<AdClientPlanResponse, 'data'>> => {
          const localVarPath = `/ad/client/getAdInfo`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(adClientPlanRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 付呗获取广告前获取代理商及门店等信息
        * @param {AdPreconditionRequest} [adPreconditionRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      getAdPreconditionUsingPOST: (adPreconditionRequest?: AdPreconditionRequest, options?:RequestOptions): Promise<isHasData<AdPreconditionResponse, 'data'>> => {
          const localVarPath = `/ad/client/getAdPrecondition`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(adPreconditionRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 获取请求的ip对应的区域信息
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      getAreaInfoUsingPOST: (options?:RequestOptions): Promise<isHasData<AdClientAreaResponse, 'data'>> => {
          const localVarPath = `/ad/client/getAreaInfo`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 广告计划可用剩余预算查询
        * @param {AdPlanRemainBudgetRequest} [adPlanRemainBudgetRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      getPlanRemainBudgetUsingPOST: (adPlanRemainBudgetRequest?: AdPlanRemainBudgetRequest, options?:RequestOptions): Promise<isHasData<AdPlanRemainBudgetResponse, 'data'>> => {
          const localVarPath = `/ad/plan/remain/budget`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(adPlanRemainBudgetRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 广告投放行业详情
        * @param {IndustryDetailRequest} [industryDetailRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      industryDetailUsingPOST: (industryDetailRequest?: IndustryDetailRequest, options?:RequestOptions): Promise<isHasData<IndustryDetailResponse, 'data'>> => {
          const localVarPath = `/ad/industry/detail`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(industryDetailRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 获取广告投放行业列表
        * @param {object} [body] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      industryListUsingPOST: (body?: object, options?:RequestOptions): Promise<isHasData<IndustryListResponse, 'data'>> => {
          const localVarPath = `/ad/industry/list`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(body, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 广告位列表
        * @param {PageRequestAdSpaceRequest} [pageRequestAdSpaceRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      listSpaceUsingPOST: (pageRequestAdSpaceRequest?: PageRequestAdSpaceRequest, options?:RequestOptions): Promise<isHasData<PageResponseAdSpaceDetailResponse, 'data'>> => {
          const localVarPath = `/ad/space/list`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(pageRequestAdSpaceRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 广告后台地址列表
        * @param {GaodeAddressListRequest} [gaodeAddressListRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      listUsingPOST: (gaodeAddressListRequest?: GaodeAddressListRequest, options?:RequestOptions): Promise<isHasData<GaodeCodeResponse, 'data'>> => {
          const localVarPath = `/ad/common/address/all/list`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(gaodeAddressListRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 手机品牌详情
        * @param {MobileDetailRequest} [mobileDetailRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      mobileDetailUsingPOST: (mobileDetailRequest?: MobileDetailRequest, options?:RequestOptions): Promise<isHasData<MobileDetailResponse, 'data'>> => {
          const localVarPath = `/ad/mobile/detail`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(mobileDetailRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 获取手机品牌列表
        * @param {PageRequestMobilePageRequest} [pageRequestMobilePageRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      mobileListUsingPOST: (pageRequestMobilePageRequest?: PageRequestMobilePageRequest, options?:RequestOptions): Promise<isHasData<PageResponseMobilePageResponse, 'data'>> => {
          const localVarPath = `/ad/mobile/list`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(pageRequestMobilePageRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 修改广告创意
        * @param {UpdateAdCreativeRequest} [updateAdCreativeRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      updateAdCreativeUsingPOST: (updateAdCreativeRequest?: UpdateAdCreativeRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/creative/update`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(updateAdCreativeRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 修改广告计划
        * @param {UpdateAdPlanRequest} [updateAdPlanRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      updateAdPlanUsingPOST: (updateAdPlanRequest?: UpdateAdPlanRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/plan/update`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(updateAdPlanRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 修改广告类型
        * @param {AdTypeUpdateRequest} [adTypeUpdateRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      updateAdTypeUsingPOST: (adTypeUpdateRequest?: AdTypeUpdateRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/type/update`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(adTypeUpdateRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 修改地址组
        * @param {AddressGroupUpdateRequest} [addressGroupUpdateRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      updateAddressGroupUsingPOST: (addressGroupUpdateRequest?: AddressGroupUpdateRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/address/group/update`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(addressGroupUpdateRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 修改广告主
        * @param {AdvertiserUpdateRequest} [advertiserUpdateRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      updateAdvertiserUsingPOST: (advertiserUpdateRequest?: AdvertiserUpdateRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/advertiser/update`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(advertiserUpdateRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 修改广告创意状态
        * @param {UpdateCreativeStatusRequest} [updateCreativeStatusRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      updateCreativeStatusUsingPOST: (updateCreativeStatusRequest?: UpdateCreativeStatusRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/creative/update/status`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(updateCreativeStatusRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 修改流量主
        * @param {FlowMasterUpdateRequest} [flowMasterUpdateRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      updateFlowMasterUsingPOST: (flowMasterUpdateRequest?: FlowMasterUpdateRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/flow/master/update`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(flowMasterUpdateRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 修改广告投放行业
        * @param {IndustryUpdateRequest} [industryUpdateRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      updateIndustryUsingPOST: (industryUpdateRequest?: IndustryUpdateRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/industry/update`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(industryUpdateRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 修改手机品牌
        * @param {MobileUpdateRequest} [mobileUpdateRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      updateMobileUsingPOST: (mobileUpdateRequest?: MobileUpdateRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/mobile/update`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(mobileUpdateRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 修改广告计划状态
        * @param {UpdatePlanStatusRequest} [updatePlanStatusRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      updatePlanStatusUsingPOST: (updatePlanStatusRequest?: UpdatePlanStatusRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/plan/update/status`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(updatePlanStatusRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 修改广告位状态
        * @param {AdSpaceUpdateStatusRequest} [adSpaceUpdateStatusRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      updateSpaceStatusUsingPOST: (adSpaceUpdateStatusRequest?: AdSpaceUpdateStatusRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/space/update/status`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(adSpaceUpdateStatusRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
      /**
        * 
        * @function 修改广告位
        * @param {AdSpaceUpdateRequest} [adSpaceUpdateRequest] 
        * @param {*} [options] Override http request option.
        * @throws {RequiredError}
        */
      updateSpaceUsingPOST: (adSpaceUpdateRequest?: AdSpaceUpdateRequest, options?:RequestOptions): Promise<isHasData<object, 'data'>> => {
          const localVarPath = `/ad/space/update`;
          // use dummy base URL string because the URL constructor only accepts absolute URLs.
          const localVarRequestOptions = {} as any;
          
          localVarRequestOptions.data = serializeDataIfNeeded(adSpaceUpdateRequest, localVarRequestOptions)

          return request({
              data: localVarRequestOptions.data,
              url: localVarPath,
              ...options
            });
      },
}


